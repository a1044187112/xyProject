{"version":3,"sources":["node_modules/browser-pack/_prelude.js","libs/tina/Button.js","libs/tina/DisplayObject.js","libs/tina/EventEmitter.js","libs/tina/Group.js","libs/tina/Renderer.js","libs/tina/Sprite.js","libs/tina/Stage.js","libs/tina/Text.js","libs/tina/Tina.js","libs/tina/assets.js","libs/tina/collision.js","libs/tina/common.js","libs/tina/graphical.js","libs/tina/input.js","libs/tina/interactive.js","libs/tina/util.js","main.js","src/Lottery_Animate.js"],"names":[],"mappings":"AAAA;;;;;;;QCWgB,M,GAAA,M;;AAXhB;;AACA;;AACA;;;;;;;;IAEa,M,WAAA,M;;;AACX,kBAAY,MAAZ,EAAkC;AAAA,QAAd,CAAc,uEAAV,CAAU;AAAA,QAAP,CAAO,uEAAH,CAAG;;AAAA;;AAAA,gHAC1B,MAD0B,EAClB,CADkB,EACf,CADe;;AAEhC,UAAK,WAAL,GAAmB,IAAnB;AAFgC;AAGjC;;;;;AAGI,SAAS,MAAT,CAAgB,MAAhB,EAAuB,CAAvB,EAAyB,CAAzB,EAA4B;AACjC,MAAI,SAAS,IAAI,MAAJ,CAAW,MAAX,EAAkB,CAAlB,EAAoB,CAApB,CAAb;AACA,eAAM,QAAN,CAAe,MAAf;AACA,SAAO,MAAP;AACD;;;;;;;;;;;ACfD;;AACA;;;;;;;;IAEqB,a;;;AACnB,2BAAc;AAAA;;AAEZ;AAFY;;AAGZ,UAAK,CAAL,GAAS,CAAT;AACA,UAAK,CAAL,GAAS,CAAT;AACA,UAAK,KAAL,GAAa,CAAb;AACA,UAAK,KAAL,GAAa,CAAb;AACA,UAAK,KAAL,GAAa,CAAb;AACA,UAAK,MAAL,GAAc,CAAd;;AAEA;AACA,UAAK,QAAL,GAAgB,CAAhB;AACA,UAAK,KAAL,GAAa,CAAb;AACA,UAAK,OAAL,GAAe,IAAf;AACA,UAAK,MAAL,GAAc,CAAd;AACA,UAAK,MAAL,GAAc,CAAd;;AAEA;AACA,UAAK,MAAL,GAAc,GAAd;AACA,UAAK,MAAL,GAAc,GAAd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAK,MAAL,GAAc,CAAd;AACA,UAAK,QAAL,GAAgB,EAAhB;AACA,UAAK,MAAL,GAAc,SAAd;;AAEA;AACA,UAAK,MAAL,GAAc,EAAd;AACA,UAAK,aAAL,GAAqB,CAArB;;AAEA;AACA,UAAK,UAAL,GAAkB,SAAlB;;AAEA,UAAK,SAAL,GAAiB,KAAjB;;AAEA,UAAK,YAAL,GAAoB,KAApB;AA1CY;AA2Cb;;;;6BAyBQ,M,EAAQ;AACf,UAAI,OAAO,MAAX,EACE,OAAO,MAAP,CAAc,WAAd,CAA0B,MAA1B;AACF,aAAO,MAAP,GAAgB,IAAhB;AACA,WAAK,QAAL,CAAc,IAAd,CAAmB,MAAnB;AACD;;;gCAEW,M,EAAQ;AAClB,UAAI,KAAK,QAAL,CAAc,MAAd,CAAJ,EAA2B;AACzB,aAAK,QAAL,CAAc,MAAd,CAAqB,KAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB,CAArB,EAAoD,CAApD;AACA,eAAO,MAAP,GAAgB,SAAhB;AACD,OAHD,MAIE,MAAM,IAAI,KAAJ,CAAU,SAAS,mBAAT,GAA+B,IAAzC,CAAN;AACH;;;6BAEQ,M,EAAQ;AACf,aAAQ,KAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB,MAAkC,CAAC,CAA3C;AACD;;;gCA8CW,C,EAAG,C,EAAG;AAChB,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,GAAS,CAAT;AACD;;;8BAsCS,C,EAA6B;AAAA,UAA1B,OAA0B,uEAAhB,CAAgB;AAAA,UAAb,OAAa,uEAAH,CAAG;;AACrC,UAAI,IAAI,IAAR;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,SAAR,GAAoB,EAAE,SAAvB,GAAoC,OAA1C;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,UAAR,GAAqB,EAAE,UAAxB,GAAsC,OAA5C;AACD;;;2BAEM,C,EAA6B;AAAA,UAA1B,OAA0B,uEAAhB,CAAgB;AAAA,UAAb,OAAa,uEAAH,CAAG;;AAClC,UAAI,IAAI,IAAR;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,SAAR,GAAoB,EAAE,SAAvB,GAAoC,OAA1C;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,MAAT,GAAmB,OAAzB;AACD;;;6BAEQ,C,EAA6B;AAAA,UAA1B,OAA0B,uEAAhB,CAAgB;AAAA,UAAb,OAAa,uEAAH,CAAG;;AACpC,UAAI,IAAI,IAAR;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,KAAT,GAAkB,OAAxB;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,UAAR,GAAqB,EAAE,UAAxB,GAAsC,OAA5C;AACD;;;8BAES,C,EAA6B;AAAA,UAA1B,OAA0B,uEAAhB,CAAgB;AAAA,UAAb,OAAa,uEAAH,CAAG;;AACrC,UAAI,IAAI,IAAR;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,SAAR,GAAoB,EAAE,SAAvB,GAAoC,OAA1C;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,MAAT,GAAmB,OAAzB;AACD;;;4BAEO,C,EAA6B;AAAA,UAA1B,OAA0B,uEAAhB,CAAgB;AAAA,UAAb,OAAa,uEAAH,CAAG;;AACnC,UAAI,IAAI,IAAR;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,KAAT,GAAkB,OAAxB;AACA,QAAE,CAAF,GAAO,EAAE,CAAF,GAAM,EAAE,UAAR,GAAqB,EAAE,UAAxB,GAAsC,OAA5C;AACD;;;iCAEY,M,EAAQ,M,EAAQ;AAC3B,UAAI,SAAS,KAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB,CAAb;AACA,UAAI,SAAS,KAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB,CAAb;AACA,UAAI,WAAW,CAAC,CAAZ,IAAiB,WAAW,CAAC,CAAjC,EAAoC;AAClC,aAAK,QAAL,CAAc,MAAd,IAAwB,MAAxB;AACA,aAAK,QAAL,CAAc,MAAd,IAAwB,MAAxB;AACD,OAHD,MAGO;AACL,cAAM,IAAI,KAAJ,iDAAwD,IAAxD,CAAN;AACD;AACF;;;0BAEe;AAAA;;AAAA,wCAAT,OAAS;AAAT,eAAS;AAAA;;AACd,cAAQ,OAAR,CAAgB;AAAA,eAAU,OAAK,QAAL,CAAc,MAAd,CAAV;AAAA,OAAhB;AACD;;;6BAEkB;AAAA;;AAAA,yCAAT,OAAS;AAAT,eAAS;AAAA;;AACjB,cAAQ,OAAR,CAAgB,kBAAU;AACxB,gBAAQ,GAAR,CAAY,aAAa,OAAO,WAAP,CAAmB,IAA5C;AACA,eAAK,WAAL,CAAiB,MAAjB;AACD,OAHD;AAID;;;wBAjLQ;AACP,UAAI,KAAK,MAAT,EACE,OAAO,KAAK,CAAL,GAAS,KAAK,MAAL,CAAY,EAA5B,CADF,KAGE,OAAO,KAAK,CAAZ;AACH;;;wBAEQ;AACP,UAAI,KAAK,MAAT,EACE,OAAO,KAAK,CAAL,GAAS,KAAK,MAAL,CAAY,EAA5B,CADF,KAGE,OAAO,KAAK,CAAZ;AACH;;;wBAEW;AACV,aAAO,KAAK,MAAZ;AACD,K;sBACS,K,EAAO;AACf,WAAK,MAAL,GAAc,KAAd;AACA,UAAI,KAAK,MAAT,EACE,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,CAA0B,UAAC,CAAD,EAAI,CAAJ;AAAA,eAAU,EAAE,MAAF,GAAW,EAAE,MAAvB;AAAA,OAA1B;AACH;;;wBAqBe;AACd,aAAO,KAAK,KAAL,IAAc,CAArB;AACD;;;wBAEgB;AACf,aAAO,KAAK,MAAL,IAAe,CAAtB;AACD;;AAED;;;;wBACc;AACZ,aAAO,KAAK,CAAL,GAAS,KAAK,SAArB;AACD;;;wBAEa;AACZ,aAAO,KAAK,CAAL,GAAS,KAAK,UAArB;AACD;;;wBACY;AACX,aAAO;AACL,WAAG,KAAK,OADH;AAEL,WAAG,KAAK;AAFH,OAAP;AAID;;;wBAEa;AACZ,UAAI,KAAK,MAAT,EACE,OAAO,EAAC,GAAE,KAAK,OAAL,GAAe,KAAK,MAAL,CAAY,EAA9B;AACC,WAAE,KAAK,OAAL,GAAe,KAAK,MAAL,CAAY,EAD9B,EAAP,CADF,KAIE,OAAO,KAAK,MAAZ;AAEH;;;wBAEc;AACb,aAAO;AACL,WAAG,KAAK,CADH;AAEL,WAAG,KAAK;AAFH,OAAP;AAID;;;sBAEW,G,EAAK;AACf,WAAK,CAAL,GAAS,IAAI,CAAb;AACA,WAAK,CAAL,GAAS,IAAI,CAAb;AACD;;;wBAOW;AACV,aAAO,EAAC,GAAE,KAAK,MAAR;AACC,WAAE,KAAK,MADR,EAAP;AAED,K;sBACS,K,EAAO;AACf,UAAG,iBAAiB,MAApB,EAA4B,CAC3B,CADD,MACO;AACL,aAAK,MAAL,GAAc,KAAK,MAAL,GAAc,KAA5B;AACD;AACF;;;wBAEiB;AAChB,aAAO;AACL,WAAG,CADE;AAEL,WAAG,CAFE;AAGL,eAAO,KAAK,KAHP;AAIL,gBAAQ,KAAK;AAJR,OAAP;AAMD;;;wBAEkB;AACjB,aAAO;AACL,WAAG,KAAK,EADH;AAEL,WAAG,KAAK,EAFH;AAGL,eAAO,KAAK,EAAL,GAAU,KAAK,KAHjB;AAIL,gBAAQ,KAAK,EAAL,GAAU,KAAK;AAJlB,OAAP;AAMD;;;wBAEa;AACZ,UAAI,KAAK,QAAL,CAAc,MAAd,KAAyB,CAA7B,EACE,OAAO,IAAP,CADF,KAGE,OAAO,KAAP;AACH;;;wBAsDkB;AACjB,aAAO,KAAK,aAAZ;AACD;;;wBAEc;AACb,aAAO,KAAK,SAAZ;AACD,K;sBAEY,K,EAAO;AAClB,UAAI,UAAU,IAAV,IAAkB,KAAK,SAAL,KAAmB,KAAzC,EAAgD;AAC9C,eAAO,gBAAP,CAAwB,IAAxB,EAA8B;AAC5B,oBAAU;AACR,eADQ,iBACF;AACJ,qBAAO,KAAK,KAAZ;AACD,aAHO;AAIR,eAJQ,eAIJ,KAJI,EAIG;AACT,mBAAK,KAAL,GAAa,KAAK,MAAL,GAAc,KAA3B;AACD,aANO;;AAOR,wBAAY,IAPJ;AAQR,0BAAc;AARN,WADkB;AAW5B,kBAAQ;AACN,eADM,iBACA;AACJ,qBAAO,KAAK,SAAZ;AACD,aAHK;AAIN,eAJM,eAIF,KAJE,EAIK;AACT,mBAAK,KAAL,GAAa,KAAK,MAAL,GAAc,SAAS,CAApC;AACD,aANK;;AAON,wBAAY,IAPN;AAQN,0BAAc;AARR;AAXoB,SAA9B;AAsBA,aAAK,SAAL,GAAiB,IAAjB;AACD;;AAED,UAAI,UAAU,KAAV,IAAmB,KAAK,SAAL,KAAmB,IAA1C,EAAgD;AAC9C,eAAO,KAAK,QAAZ;AACA,eAAO,KAAK,MAAZ;AACA,aAAK,SAAL,GAAiB,KAAjB;AACD;AACF;;;;;;kBAzQkB,a;;;AA6QrB,IAAI,SAAU,uBAAd;AACA,IAAG,UAAU,OAAO,GAApB,EAAyB;AACvB,gBAAc,aAAd,GAA8B,MAA9B;AACA,SAAO,KAAP,GAAe,OAAO,MAAP,GAAgB,CAA/B;AACA;AACA;AACD;;AAED;;;;;;;;;;;;;ICxRa,Y,WAAA,Y;AACX,0BAAc;AAAA;;AACZ;AACA,SAAK,UAAL,GAAkB,EAAlB;AACD;;;;uBAEE,K,EAAO,Q,EAAU;AAClB,UAAI,OAAO,QAAP,KAAoB,UAAxB,EACE,MAAM,6BAAN;;AAEF,WAAK,UAAL,CAAgB,KAAhB,IAAyB,KAAK,UAAL,CAAgB,KAAhB,KAA0B,EAAnD;AACA,WAAK,UAAL,CAAgB,KAAhB,EAAuB,IAAvB,CAA4B,QAA5B;AACD;;;yBAEI,K,EAAO,I,EAAM;AAChB,UAAI,WAAW,KAAK,UAAL,CAAgB,KAAhB,CAAf;AACA,UAAI,QAAJ,EAAc;AACZ,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,MAA7B,EAAqC,GAArC,EAA0C;AACxC,mBAAS,CAAT,EAAY,IAAZ,CAAiB,IAAjB,EAAuB,IAAvB;AACD;AACF;AACF;;;gCAEW,K,EAAO,O,EAAS;AAC1B,UAAI,YAAY,KAAK,UAAL,CAAgB,KAAhB,CAAhB;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACzC,YAAI,CAAC,OAAD,IAAY,WAAW,UAAU,CAAV,CAA3B,EAAyC;AACvC,iBAAO,IAAP;AACD;AACF;AACD,aAAO,KAAP;AACD;;;mCAEc,K,EAAO,Q,EAAU;AAC9B,UAAI,OAAO,QAAP,KAAoB,UAAxB,EACE,MAAM,6BAAN;;AAGF,UAAI,YAAY,KAAK,UAAL,CAAgB,KAAhB,CAAhB;AACA,UAAI,WAAW,KAAK,UAAL,CAAgB,KAAhB,EAAuB,OAAvB,CAA+B,QAA/B,CAAf;AACA,UAAI,YAAY,CAAC,CAAjB,EACE,KAAK,UAAL,CAAgB,KAAhB,EAAuB,MAAvB,CAA8B,QAA9B,EAAwC,CAAxC;AACH;;;uCAEkB,K,EAAO;AACxB,UAAG,KAAH,EAAS;AACP,aAAK,UAAL,CAAgB,KAAhB,IAAyB,EAAzB;AACD,OAFD,MAEO;AACL,aAAK,UAAL,GAAkB,EAAlB;AACD;AACF;;;;;;;;;;;;;;;;;;QCNa,K,GAAA,K;QAMA,I,GAAA,I;;AAlDhB;;;;AACA;;;;;;;;;;IAIa,K,WAAA,K;;;AACX,mBAAwB;AAAA;;AAAA;;AAAA,sCAAT,OAAS;AAAT,aAAS;AAAA;;AAEtB,YAAQ,OAAR,CAAgB;AAAA,aAAU,MAAK,QAAL,CAAc,MAAd,CAAV;AAAA,KAAhB;AAFsB;AAGvB;;;;6BAEQ,M,EAAQ;AACf,6GAAe,MAAf;AACA,YAAM,aAAN,CAAoB,IAApB;AACD;;;gCAEW,M,EAAQ;AAClB,UAAI,OAAO,MAAP,KAAkB,IAAtB,EAA4B;AAC1B,aAAK,QAAL,CAAc,MAAd,CAAqB,KAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB,CAArB,EAAoD,CAApD;AACA,cAAM,aAAN,CAAoB,IAApB;AACD,OAHD,MAGO;AACL,cAAM,IAAI,KAAJ,CAAa,MAAb,2BAAyC,IAAzC,CAAN;AACD;AACF;;;kCAEoB,K,EAAO;AAC1B,UAAI,MAAM,QAAN,CAAe,MAAf,GAAwB,CAA5B,EAA+B;AAAA;AAC7B,cAAI,WAAW,CAAf;AACA,cAAI,YAAY,CAAhB;;AAEA,gBAAM,QAAN,CAAe,OAAf,CAAuB,iBAAS;AAC9B,gBAAI,MAAM,CAAN,GAAU,MAAM,KAAhB,GAAwB,QAA5B,EACE,WAAW,MAAM,CAAN,GAAU,MAAM,KAA3B;AACF,gBAAI,MAAM,CAAN,GAAU,MAAM,MAAhB,GAAyB,SAA7B,EACE,YAAY,MAAM,CAAN,GAAU,MAAM,MAA5B;AACH,WALD;;AAOA,gBAAM,KAAN,GAAc,QAAd;AACA,gBAAM,MAAN,GAAe,SAAf;AAZ6B;AAa9B;AACF;;;;;;AAII,SAAS,KAAT,GAA2B;AAAA,qCAAT,OAAS;AAAT,WAAS;AAAA;;AAChC,MAAI,4CAAa,KAAb,gBAAsB,OAAtB,KAAJ;AACA,eAAM,QAAN,CAAe,MAAf;AACA,SAAO,MAAP;AACD;;AAEM,SAAS,IAAT,GAGc;AAAA,MAHA,OAGA,uEAHU,CAGV;AAAA,MAHa,IAGb,uEAHoB,CAGpB;AAAA,MAHuB,SAGvB,uEAHmC,EAGnC;AAAA,MAHuC,UAGvC,uEAHoD,EAGpD;AAAA,MAFnB,UAEmB,uEAFN,KAEM;AAAA,MAFC,OAED,uEAFW,CAEX;AAAA,MAFc,OAEd,uEAFwB,CAExB;AAAA,MADnB,UACmB,uEADN,SACM;AAAA,MAAnB,KAAmB,uEAAX,SAAW;;;AAEnB,MAAI,YAAY,OAAhB;;AAEA,MAAI,aAAa,SAAb,UAAa,GAAM;AACrB,QAAI,SAAS,UAAU,IAAvB;;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAApB,EAA4B,GAA5B,EAAiC;AAC/B,UAAI,IAAK,IAAI,OAAL,GAAgB,SAAxB;AACA,UAAI,IAAI,KAAK,KAAL,CAAW,IAAI,OAAf,IAA0B,UAAlC;AACA,UAAI,SAAS,YAAb;;AAEA,UAAI,CAAC,MAAL,EACE,QAAQ,IAAR,CAAa,6BAA6B,MAA1C;;AAEF,gBAAU,QAAV,CAAmB,MAAnB;;AAEA,UAAI,CAAC,UAAL,EAAiB;AACf,eAAO,CAAP,GAAW,IAAI,OAAf;AACA,eAAO,CAAP,GAAW,IAAI,OAAf;AACD,OAHD,MAGO;AACL,eAAO,CAAP,GAAW,IAAK,YAAY,CAAjB,GACT,OAAO,SADE,GACU,OADrB;AAEA,eAAO,CAAP,GAAW,IAAK,aAAa,CAAlB,GACT,OAAO,UADE,GACW,OADtB;AAED;;AAED,UAAI,KAAJ,EAAW,MAAM,MAAN;AACZ;AACF,GAzBD;;AA2BA;;AAEA,SAAO,SAAP;AACD;;;;;;;;;;;;ACvFD;;;;AACA;;;;;;AAEA,IAAM,uBAAuB,GAA7B;AACA,IAAM,wBAAwB,GAA9B;;AAEO,IAAI,8BAAW,SAAf;;IAEc,Q;AACnB,sBAA6F;AAAA,QAAjF,KAAiF,uEAAzE,oBAAyE;AAAA,QAAnD,MAAmD,uEAA1C,qBAA0C;AAAA,QAAnB,KAAmB,uEAAX,SAAW;;AAAA;;AAC3F,QAAG,QAAH,EAAa;AACX,cAAQ,KAAR,CAAc,+BAAd;AACA,aAAO,QAAP;AACD;AACD,SAAK,MAAL,GAAc,sBAAW,KAAX,EAAkB,MAAlB,CAAd;AACA,aAAS,IAAT,CAAc,WAAd,CAA0B,KAAK,MAA/B;AACA,SAAK,KAAL,GAAa,KAAb;AACA,YAXO,QAWP,cAAW,IAAX;AACA,WAAO,QAAP;AACD;;;;6BAUQ;AAAA;;AACP,UAAI,SAAS,KAAK,MAAlB;AACA,UAAI,MAAM,OAAO,GAAjB;;AAEA,UAAI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,OAAO,KAA3B,EAAkC,OAAO,MAAzC;;AAEA,UAAG,KAAK,KAAR,EAAc;AACZ,aAAK,KAAL,CAAW,QAAX,CAAoB,OAApB,CAA4B,kBAAU;AACpC,kBAAO,IAAP,QAAkB,MAAlB;AACD,SAFD;AAGD;AACF;;;wBAnBqB;AACpB,aAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,eAAzB;AACD,K;sBAEmB,K,EAAM;AACxB,WAAK,MAAL,CAAY,KAAZ,CAAkB,eAAlB,GAAoC,KAApC;AACD;;;;;;kBAnBkB,Q;;;AAmCrB,SAAS,OAAT,CAAgB,MAAhB,EAAwB;AAAA;;AACtB,MAAI,SAAS,KAAK,MAAlB;AACA,MAAI,MAAM,OAAO,GAAjB;AACA,MAAI,OAAO,OAAP,IACA,OAAO,EAAP,GAAY,OAAO,KAAP,GAAe,OAAO,KADlC,IAEA,OAAO,EAAP,GAAY,OAAO,KAAnB,IAA4B,CAAC,OAAO,KAFpC,IAGA,OAAO,EAAP,GAAY,OAAO,MAAP,GAAgB,OAAO,MAHnC,IAIA,OAAO,EAAP,GAAY,OAAO,MAAnB,IAA6B,CAAC,OAAO,MAJzC,EAIiD;;AAE/C,QAAI,IAAJ;;AAEA;AACA,QAAI,SAAJ,CACE,OAAO,CAAP,GAAY,OAAO,KAAP,GAAe,OAAO,MADpC,EAEE,OAAO,CAAP,GAAY,OAAO,MAAP,GAAgB,OAAO;AACnC;AACA;AACA;AALF;AAOA,QAAI,MAAJ,CAAW,OAAO,QAAlB;AACA,QAAI,KAAJ,CAAU,OAAO,MAAjB,EAAyB,OAAO,MAAhC;AACA;AACA;;AAEA;AACA,QAAI,WAAJ,GAAkB,OAAO,KAAP,GAAe,OAAO,MAAP,CAAc,KAA/C;;AAEA;;AAEA,QAAI,OAAO,MAAX,EAAmB,OAAO,MAAP,CAAc,GAAd;;AAEnB,QAAI,OAAO,QAAP,IAAmB,OAAO,QAAP,CAAgB,MAAhB,GAAyB,CAAhD,EAAmD;AACjD,UAAI,SAAJ,CAAc,CAAC,OAAO,KAAR,GAAgB,OAAO,MAArC,EAA6C,CAAC,OAAO,MAAR,GAAiB,OAAO,MAArE;AACA;AACA;AACA,aAAO,QAAP,CAAgB,OAAhB,CAAwB,iBAAS;AAC/B,gBAAO,IAAP,SAAkB,KAAlB;AACD,OAFD;AAGD;;AAED,QAAI,OAAJ;AACD;AACF;;;;;;;;;;;;QCyLe,M,GAAA,M;;AA9QhB;;;;AACA;;;;;;;;;;AAIA;IACa,M,WAAA,M;;;AACX,kBAAY,MAAZ,EAAkC;AAAA,QAAd,CAAc,uEAAV,CAAU;AAAA,QAAP,CAAO,uEAAH,CAAG;;AAAA;;AAAA;;AAEhC,UAAK,CAAL,GAAS,CAAT;AACA,UAAK,CAAL,GAAS,CAAT;AACA,QAAG,CAAC,MAAJ,EACE,QAAQ,KAAR,+BAAyC,MAAzC;;AAEF,QAAI,kBAAkB,KAAtB,EAA6B;AAC3B,YAAK,eAAL,CAAqB,MAArB;AACD,KAFD,MAEO,IAAI,OAAO,KAAX,EAAkB;AACvB,YAAK,eAAL,CAAqB,MAArB;AACD,KAFM,MAEA,IAAI,OAAO,KAAP,IAAgB,CAAC,OAAO,IAA5B,EAAkC;AACvC,YAAK,iBAAL,CAAuB,MAAvB;AACD,KAFM,MAEA,IAAI,OAAO,KAAP,IAAgB,OAAO,IAA3B,EAAiC;AACtC,YAAK,uBAAL,CAA6B,MAA7B;AACD,KAFM,MAEA,IAAI,kBAAkB,KAAtB,EAA6B;AAClC,UAAI,OAAO,CAAP,KAAa,OAAO,CAAP,EAAU,MAA3B,EAAmC;AACjC,cAAK,qBAAL,CAA2B,MAA3B;AACD,OAFD,MAEO,IAAI,OAAO,CAAP,aAAqB,KAAzB,EAAgC;AACrC,cAAK,gBAAL,CAAsB,MAAtB;AACD,OAFM,MAEA;AACL,cAAM,IAAI,KAAJ,2BAAkC,MAAlC,yBAAN;AACD;AACF,KARM,MAQA;AACL,YAAM,IAAI,KAAJ,uBAA8B,MAA9B,wBAAN;AACD;AAzB+B;AA0BjC;;;;oCAEe,M,EAAQ;AACtB,UAAI,EAAE,kBAAkB,KAApB,CAAJ,EAAgC;AAC9B,cAAM,IAAI,KAAJ,CAAa,MAAb,6BAAN;AACD,OAFD,MAEO;AACL,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,OAAL,GAAe,CAAf;AACA,aAAK,OAAL,GAAe,CAAf;AACA,aAAK,KAAL,GAAa,OAAO,KAApB;AACA,aAAK,MAAL,GAAc,OAAO,MAArB;AACA,aAAK,WAAL,GAAmB,OAAO,KAA1B;AACA,aAAK,YAAL,GAAoB,OAAO,MAA3B;AACD;AACF;;;oCAEe,M,EAAQ;AACtB,WAAK,YAAL,GAAoB,MAApB;AACA,WAAK,MAAL,GAAc,KAAK,YAAL,CAAkB,MAAhC;AACA,WAAK,OAAL,GAAe,KAAK,YAAL,CAAkB,KAAlB,CAAwB,CAAvC;AACA,WAAK,OAAL,GAAe,KAAK,YAAL,CAAkB,KAAlB,CAAwB,CAAvC;AACA,WAAK,KAAL,GAAa,KAAK,WAAL,GAAmB,KAAK,YAAL,CAAkB,KAAlB,CAAwB,CAAxD;AACA,WAAK,MAAL,GAAc,KAAK,YAAL,GAAoB,KAAK,YAAL,CAAkB,KAAlB,CAAwB,CAA1D;AACD;;;sCAEiB,M,EAAQ;AACxB,UAAI,EAAE,OAAO,KAAP,YAAwB,KAA1B,CAAJ,EAAsC;AACpC,cAAM,IAAI,KAAJ,CAAa,OAAO,KAApB,6BAAN;AACD,OAFD,MAEO;AACL,aAAK,MAAL,GAAc,OAAO,KAArB;AACA,aAAK,OAAL,GAAe,OAAO,CAAtB;AACA,aAAK,OAAL,GAAe,OAAO,CAAtB;AACA,aAAK,KAAL,GAAa,OAAO,KAApB;AACA,aAAK,MAAL,GAAc,OAAO,MAArB;AACA,aAAK,WAAL,GAAmB,OAAO,KAA1B;AACA,aAAK,YAAL,GAAoB,OAAO,MAA3B;AACD;AACF;;;4CAEuB,M,EAAQ;AAC9B,UAAI,EAAE,OAAO,KAAP,YAAwB,KAA1B,CAAJ,EAAsC;AACpC,cAAM,IAAI,KAAJ,CAAa,OAAO,KAApB,6BAAN;AACD,OAFD,MAEO;AACL,aAAK,MAAL,GAAc,OAAO,KAArB;AACA,aAAK,MAAL,GAAc,OAAO,IAArB;;AAEA,aAAK,OAAL,GAAe,KAAK,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAf;AACA,aAAK,OAAL,GAAe,KAAK,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAf;AACA,aAAK,KAAL,GAAa,OAAO,KAApB;AACA,aAAK,MAAL,GAAc,OAAO,MAArB;AACA,aAAK,WAAL,GAAmB,OAAO,KAA1B;AACA,aAAK,YAAL,GAAoB,OAAO,MAA3B;AACD;AACF;;;0CAEqB,M,EAAQ;AAC5B,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,MAAL,GAAc,OAAO,CAAP,EAAU,MAAxB;AACA,WAAK,OAAL,GAAe,OAAO,CAAP,EAAU,KAAV,CAAgB,CAA/B;AACA,WAAK,OAAL,GAAe,OAAO,CAAP,EAAU,KAAV,CAAgB,CAA/B;AACA,WAAK,KAAL,GAAa,OAAO,CAAP,EAAU,KAAV,CAAgB,CAA7B;AACA,WAAK,MAAL,GAAc,OAAO,CAAP,EAAU,KAAV,CAAgB,CAA9B;AACA,WAAK,WAAL,GAAmB,OAAO,CAAP,EAAU,KAAV,CAAgB,CAAnC;AACA,WAAK,YAAL,GAAoB,OAAO,CAAP,EAAU,KAAV,CAAgB,CAApC;AACD;;;qCAEgB,M,EAAQ;AACvB,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,MAAL,GAAc,OAAO,CAAP,CAAd;AACA,WAAK,OAAL,GAAe,CAAf;AACA,WAAK,OAAL,GAAe,CAAf;AACA,WAAK,KAAL,GAAa,OAAO,CAAP,EAAU,KAAvB;AACA,WAAK,MAAL,GAAc,OAAO,CAAP,EAAU,KAAxB;AACA,WAAK,WAAL,GAAmB,OAAO,CAAP,EAAU,KAA7B;AACA,WAAK,YAAL,GAAoB,OAAO,CAAP,EAAU,MAA9B;AACD;;;gCAEW,W,EAAa;AACvB,UAAI,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAArB,IAA0B,cAAc,KAAK,MAAL,CAAY,MAAxD,EAAgE;AAC9D,YAAI,KAAK,MAAL,CAAY,CAAZ,aAA0B,KAA9B,EAAqC;AACnC,eAAK,OAAL,GAAe,KAAK,MAAL,CAAY,WAAZ,EAAyB,CAAzB,CAAf;AACA,eAAK,OAAL,GAAe,KAAK,MAAL,CAAY,WAAZ,EAAyB,CAAzB,CAAf;AACD,SAHD,MAGO,IAAI,KAAK,MAAL,CAAY,WAAZ,EAAyB,KAA7B,EAAoC;AACzC,eAAK,OAAL,GAAe,KAAK,MAAL,CAAY,WAAZ,EAAyB,KAAzB,CAA+B,CAA9C;AACA,eAAK,OAAL,GAAe,KAAK,MAAL,CAAY,WAAZ,EAAyB,KAAzB,CAA+B,CAA9C;AACA,eAAK,WAAL,GAAmB,KAAK,MAAL,CAAY,WAAZ,EAAyB,KAAzB,CAA+B,CAAlD;AACA,eAAK,YAAL,GAAoB,KAAK,MAAL,CAAY,WAAZ,EAAyB,KAAzB,CAA+B,CAAnD;AACD,SALM,MAKA;AACL,eAAK,MAAL,GAAc,KAAK,MAAL,CAAY,WAAZ,CAAd;AACA,eAAK,OAAL,GAAe,CAAf;AACA,eAAK,OAAL,GAAe,CAAf;AACA,eAAK,WAAL,GAAmB,KAAK,MAAL,CAAY,KAA/B;AACA,eAAK,YAAL,GAAoB,KAAK,MAAL,CAAY,MAAhC;AACD;AACD,aAAK,aAAL,GAAqB,WAArB;AACD,OAjBD,MAiBO;AACL,cAAM,IAAI,KAAJ,mBAA0B,WAA1B,qBAAN;AACD;AACF;;;2BAEM,G,EAAK;AACV,UAAI,SAAJ,CACE,KAAK,MADP,EAEE,KAAK,OAFP,EAEgB,KAAK,OAFrB,EAGE,KAAK,WAHP,EAGoB,KAAK,YAHzB,EAIE,CAAC,KAAK,KAAN,GAAc,KAAK,MAJrB,EAI6B,CAAC,KAAK,MAAN,GAAe,KAAK,MAJjD,EAKE,KAAK,KALP,EAKc,KAAK,MALnB;AAOD;;;0BAEY,M,EAAQ,C,EAAG,C,EAAG,K,EAAO,M,EAAQ;AACxC,UAAI,IAAI,EAAR;AACA,QAAE,KAAF,GAAU,MAAV;AACA,QAAE,CAAF,GAAM,CAAN;AACA,QAAE,CAAF,GAAM,CAAN;AACA,QAAE,KAAF,GAAU,KAAV;AACA,QAAE,MAAF,GAAW,MAAX;AACA,aAAO,CAAP;AACD;;;2BAEa,M,EAAQ,gB,EAAkB,K,EAAO,M,EAAQ;AACrD,UAAI,IAAI,EAAR;AACA,QAAE,KAAF,GAAU,MAAV;AACA,QAAE,IAAF,GAAS,gBAAT;AACA,QAAE,KAAF,GAAU,KAAV;AACA,QAAE,MAAF,GAAW,MAAX;AACA,aAAO,CAAP;AACD;;;8BAEgB,K,EAAO,U,EAAY,W,EAA0B;AAAA,UAAb,OAAa,uEAAH,CAAG;;AAC5D,UAAI,EAAE,iBAAiB,KAAnB,CAAJ,EAA+B;AAC7B,cAAM,IAAI,KAAJ,CAAa,KAAb,6BAAN;AACD,OAFD,MAEO;AACL,YAAI,YAAY,EAAhB;AACA,YAAI,UAAU,MAAM,KAAN,GAAc,UAA5B;AAAA,YACE,OAAO,MAAM,MAAN,GAAe,WADxB;AAEA,YAAI,iBAAiB,UAAU,IAA/B;;AAEA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,cAApB,EAAoC,EAAE,CAAtC,EAAyC;AACvC,cAAI,KAAM,IAAI,OAAd;AACA,cAAI,KAAK,KAAK,KAAL,CAAW,IAAI,OAAf,CAAT;AACA,cAAI,IAAI,KAAK,UAAb;AAAA,cACE,IAAI,KAAK,WADX;;AAGA,cAAI,WAAW,UAAU,CAAzB,EAA4B;AAC1B,iBAAK,UAAW,UAAU,EAA1B;AACA,iBAAK,UAAW,UAAU,EAA1B;AACD;AACD,oBAAU,IAAV,CAAe,CAAC,CAAD,EAAI,CAAJ,CAAf;AACD;AACD,eAAO,OAAO,MAAP,CAAc,KAAd,EAAqB,SAArB,EAAgC,UAAhC,EAA4C,WAA5C,CAAP;AACD;AACF;;;mCAEqB,M,EAAQ;AAC5B,UAAI,eAAe,CAAnB;AAAA,UACE,iBAAiB,CADnB;AAAA,UAEE,aAAa,CAFf;AAAA,UAGE,WAAW,CAHb;AAAA,UAIE,gBAAgB,SAJlB;;AAMA,eAAS,IAAT,CAAc,WAAd,EAA2B;AACzB;AACA,eAAO,WAAP,CAAmB,WAAnB;AACD;;AAED,eAAS,IAAT,GAAgB;AACd,YAAI,CAAC,OAAO,OAAZ,EAAqB;AACnB,uBAAa,CAAC,CAAD,EAAI,OAAO,MAAP,CAAc,MAAd,GAAuB,CAA3B,CAAb;AACD;AACF;;AAED,eAAS,IAAT,GAAgB;AACd,YAAI,OAAO,OAAX,EAAoB;AAClB;AACA,iBAAO,UAAP,CAAkB,OAAO,YAAzB;AACD;AACF;;AAED,eAAS,YAAT,CAAsB,aAAtB,EAAqC;AACnC;AACA,qBAAa,cAAc,CAAd,CAAb;AACA,mBAAW,cAAc,CAAd,CAAX;AACA,yBAAiB,WAAW,UAA5B;AACA,YAAI,eAAe,CAAnB,EAAsB;AACpB;AACA;AACD;AACD,YAAI,mBAAmB,CAAvB,EAA0B;AACxB,2BAAiB,CAAjB;AACA;AACD;;AAED,YAAI,CAAC,OAAO,GAAZ,EAAiB,OAAO,GAAP,GAAa,EAAb;AACjB,YAAI,YAAY,OAAO,OAAO,GAA9B;AACA,eAAO,WAAP,CAAmB,UAAnB;;AAEA,YAAI,CAAC,OAAO,OAAZ,EAAqB;AACnB,0BAAgB,YAAY,aAAa,IAAb,CAAkB,IAAlB,CAAZ,EAAqC,SAArC,CAAhB;AACA,iBAAO,OAAP,GAAiB,IAAjB;AACD;AACF;;AAED,eAAS,YAAT,GAAyB;AACvB,YAAG,eAAe,cAAlB,EAAiC;AAC/B,iBAAO,WAAP,CAAmB,OAAO,YAAP,GAAoB,CAAvC;AACA;AACD,SAHD,MAGO;AACL,cAAG,OAAO,IAAV,EAAe;AACb,mBAAO,WAAP,CAAmB,UAAnB;AACA,2BAAe,CAAf;AACD;AACF;AACF;;AAED,eAAS,KAAT,GAAkB;AAChB,YAAG,kBAAkB,SAAlB,IAA+B,OAAO,OAAP,KAAmB,IAArD,EAA0D;AACxD,iBAAO,OAAP,GAAiB,KAAjB;AACA,yBAAc,CAAd;AACA,uBAAa,CAAb;AACA,qBAAU,CAAV;AACA,2BAAgB,CAAhB;AACA,wBAAc,aAAd;AACD;AACF;;AAED,aAAO,IAAP,GAAc,IAAd;AACA,aAAO,OAAP,GAAiB,KAAjB;;AAEA,aAAO,IAAP,GAAc,IAAd;AACA,aAAO,IAAP,GAAc,IAAd;AACA,aAAO,IAAP,GAAc,IAAd;AACA,aAAO,YAAP,GAAsB,YAAtB;AACD;;;;;;AAII,SAAS,MAAT,CAAgB,MAAhB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B;AACnC,MAAI,SAAS,IAAI,MAAJ,CAAW,MAAX,EAAmB,CAAnB,EAAsB,CAAtB,CAAb;AACA,MAAI,OAAO,MAAP,CAAc,MAAd,GAAuB,CAA3B,EAA8B,OAAO,cAAP,CAAsB,MAAtB;AAC9B,eAAM,QAAN,CAAe,MAAf;AACA,SAAO,MAAP;AACD;;;;;;;;;;;;ACnRD;;;;;;;;;;;;AAIA,SAAS,OAAT,CAAgB,EAAhB,EAAoB;AAClB,MAAI,KAAK,QAAL,IAAiB,KAAK,QAAL,CAAc,MAAd,GAAuB,CAA5C,EAA+C;AAC7C,SAAK,QAAL,CAAc,OAAd,CAAsB,kBAAU;AAC9B,UAAG,UAAU,OAAO,MAApB,EACE,OAAO,MAAP,CAAc,EAAd;AACF,cAAO,IAAP,CAAY,MAAZ,EAAoB,EAApB;AACD,KAJD;AAKD;AACF;;IAEK,K;;;AACJ,mBAAc;AAAA;;AAAA;AAEb;;;;2BAEM,E,EAAI;AACT,cAAO,IAAP,CAAY,IAAZ,EAAiB,EAAjB;AACD;;;;;;AAGI,IAAI,wBAAQ,IAAI,KAAJ,EAAZ;;;;;;;;;;;;QCgBS,I,GAAA,I;;AAxChB;;;;AACA;;;;;;;;;;IAKa,I,WAAA,I;;;AACX,kBAEgB;AAAA,QAFJ,OAEI,uEAFM,QAEN;AAAA,QADd,IACc,uEADP,iBACO;AAAA,QADY,SACZ,uEADwB,KACxB;AAAA,QAAd,CAAc,uEAAV,CAAU;AAAA,QAAP,CAAO,uEAAH,CAAG;;AAAA;;AAAA;;AAGd,UAAK,OAAL,GAAe,OAAf;AACA,UAAK,IAAL,GAAY,IAAZ;AACA,UAAK,SAAL,GAAiB,SAAjB;AACA,UAAK,CAAL,GAAS,CAAT;AACA,UAAK,CAAL,GAAS,CAAT;;AAEA,UAAK,YAAL,GAAoB,KAApB;AACA,UAAK,UAAL,GAAkB,MAAlB;AAVc;AAWf;;;;2BAEM,G,EAAK;AACV,UAAI,IAAJ,GAAW,KAAK,IAAhB;AACA,UAAI,WAAJ,GAAkB,KAAK,WAAvB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;;AAEA,UAAI,KAAK,KAAL,KAAe,CAAnB,EAAsB,KAAK,KAAL,GAAa,IAAI,WAAJ,CAAgB,KAAK,OAArB,EAA8B,KAA3C;AACtB,UAAI,KAAK,MAAL,KAAgB,CAApB,EAAuB,KAAK,MAAL,GAAc,IAAI,WAAJ,CAAgB,GAAhB,EAAqB,KAAnC;AACvB,UAAI,SAAJ,CAAc,CAAC,KAAK,KAAN,GAAc,KAAK,MAAjC,EAAyC,CAAC,KAAK,MAAN,GAAe,KAAK,MAA7D;AACA,UAAI,YAAJ,GAAmB,KAAK,YAAxB;AACA,UAAI,QAAJ,CACE,KAAK,OADP,EAEE,CAFF,EAEK,CAFL;AAIA,UAAI,KAAK,UAAL,KAAoB,MAAxB,EAAgC,IAAI,UAAJ;AACjC;;;;;;AAGI,SAAS,IAAT,CAAc,OAAd,EAAuB,IAAvB,EAA6B,SAA7B,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C;AACnD,MAAI,SAAS,IAAI,IAAJ,CAAS,OAAT,EAAkB,IAAlB,EAAwB,SAAxB,EAAmC,CAAnC,EAAsC,CAAtC,CAAb;AACA,eAAM,QAAN,CAAe,MAAf;AACA,SAAO,MAAP;AACD;;;;;;;;;;AC/BD;;;QAuTgB,I,GAAA,I;;AApUhB;;IAAY,M;;AACZ;;IAAY,Y;;AACZ;;IAAY,a;;AACZ;;IAAY,M;;AACZ;;IAAY,K;;AACZ;;IAAY,K;;AACZ;;IAAY,S;;AACZ;;IAAY,I;;AACZ;;IAAY,M;;AACZ;;IAAY,W;;AACZ;;IAAY,K;;AACZ;;IAAY,S;;AACZ;;IAAY,I;;AAEZ;;;;;;;;;;AAEA,IAAM,gBAAgB,GAAtB;AACA,IAAM,iBAAiB,GAAvB;;AAEA,IAAM,2BAA2B,SAAjC;AACA,SAAS,IAAT,CAAc,KAAd,CAAoB,eAApB,GAAsC,wBAAtC;;IAEqB,I;AACnB,kBACuC;AAAA,QAD3B,KAC2B,uEADnB,aACmB;AAAA,QADJ,MACI,uEADK,cACL;AAAA,QAA3B,KAA2B;AAAA,QAApB,YAAoB;AAAA,QAAN,IAAM;;AAAA;;AACrC,WAAO,MAAP,GAAgB,OAAO,MAAP,IAAiB,YAA4B;AAAA,UAAnB,IAAmB,uEAAZ,EAAY;AAAA,UAAR,MAAQ;;AACzD,UAAI,CAAC,MAAL,EAAa,OAAO,IAAP;AACb,WAAK,IAAI,IAAT,IAAiB,MAAjB,EAAyB;AACvB,aAAK,IAAL,IAAa,OAAO,IAAP,CAAb;AACD;AACD,aAAO,IAAP;AACD,KANH;AAOA;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,MAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,YAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,aAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,MAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,KAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,KAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,SAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,IAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,MAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,WAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,KAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,SAApB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,IAApB;AACA;;AAEA,SAAK,QAAL,GAAgB,uBAAa,KAAb,EAAoB,MAApB,EAA4B,KAAK,KAAjC,CAAhB;AACA,SAAK,KAAL,CAAW,KAAX,GAAmB,KAAK,QAAL,CAAc,MAAd,CAAqB,KAAxC;AACA,SAAK,KAAL,CAAW,MAAX,GAAoB,KAAK,QAAL,CAAc,MAAd,CAAqB,MAAzC;;AAEA,SAAK,OAAL,GAAe,KAAK,WAAL,CAAiB,KAAK,QAAL,CAAc,MAA/B,CAAf;AACA,SAAK,KAAL,GAAa,CAAb;;AAEA,SAAK,KAAL,GAAa,SAAb;;AAEA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;;AAEA,SAAK,YAAL,GAAoB,YAApB;;AAEA,SAAK,MAAL,GAAc,KAAd;;AAEA;AACA,SAAK,IAAL,GAAY,EAAZ;AACA,SAAK,IAAL,GAAY,OAAO,KAAK,IAAxB;AACA,SAAK,aAAL,GAAqB,CAArB;AACA,SAAK,YAAL,GAAoB,CAApB;AACA,SAAK,QAAL,GAAgB,CAAhB;AACA,SAAK,UAAL,GAAkB,CAAlB;AACA,SAAK,YAAL,GAAoB,IAApB;AACA,SAAK,cAAL,GAAsB,IAAtB;;AAIA,QAAI,CAAC,KAAK,KAAV,EACE,MAAM,IAAI,KAAJ,CAAU,qDAAV,CAAN;AACH;;;;6BAcQ,E,EAAI;AAAA;;AACX,4BAAsB,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAAtB;AACA;;AAEA,WAAK,YAAL,GAAoB,KAAK,KAAK,aAA9B;AACA,WAAK,aAAL,GAAqB,EAArB;AACA,UAAG,KAAK,YAAL,GAAoB,KAAK,YAA5B,EACE,KAAK,YAAL,GAAoB,KAAK,IAAzB;AACF,WAAK,QAAL,IAAiB,KAAK,YAAtB;;AAEA,aAAO,KAAK,QAAL,IAAiB,KAAK,IAA7B,EAAoC;AAClC;AACA;;AAEA;AACA;AACA,aAAK,QAAL,CAAc,MAAd,CAAqB,KAArB,CAA2B,MAA3B,GAAoC,MAApC;AACA,YAAI,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,eAAK,OAAL,CAAa,OAAb,CAAqB,kBAAU;AAC7B,mBAAO,MAAP,CAAc,MAAK,OAAnB,EAA4B,MAAK,QAAL,CAAc,MAA1C;AACA,gBAAI,OAAO,KAAP,KAAiB,MAAjB,IAA2B,OAAO,KAAP,KAAiB,MAAhD,EAAwD;AACtD,kBAAI,OAAO,MAAP,KAAkB,SAAtB,EAAiC;AAC/B,sBAAK,QAAL,CAAc,MAAd,CAAqB,KAArB,CAA2B,MAA3B,GAAoC,SAApC;AACD;AACF;AACF,WAPD;AAQD;;AAED;AACA;;AAEA;AACA,YAAI,KAAK,gBAAT,EAA2B;AACzB,eAAK,OAAL,CAAa,iBAAb,CAA+B,KAAK,gBAApC;AACD;;AAED;AACA;AACA;AACA,aAAK,KAAL,CAAW,MAAX,CAAkB,EAAlB;;AAEA;AACA;;;AAGA,aAAK,QAAL,IAAiB,KAAK,IAAtB;AACA;AACA,aAAK,QAAL,CAAc,MAAd;AACD;AACD,WAAK,UAAL,GAAkB,KAAK,QAAL,GAAgB,KAAK,IAAvC;AACD;;;4BAEO;AAAA;;AACN,UAAI,KAAK,YAAT,EAAuB;AACrB,aAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,YAAtB,EAAoC,IAApC,CAAyC,YAAM;AAC7C,iBAAK,KAAL,GAAa,SAAb;AACA,iBAAK,KAAL;AACD,SAHD;;AAKA;AACA,YAAI,KAAK,IAAT,EAAe;AACb,eAAK,KAAL,GAAa,KAAK,IAAlB;AACD;AACF,OAVD,MAUO;AACL,aAAK,KAAL;AACD;;AAED,WAAK,QAAL,CAAc,CAAd;AACD;;;4BAEO;AACN,WAAK,MAAL,GAAc,IAAd;AACD;;;6BAEQ;AACP,WAAK,MAAL,GAAc,KAAd;AACD;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;oCAE4D;AAAA,UAA9C,MAA8C,uEAAvC,KAAK,QAAL,CAAc,MAAyB;AAAA,UAAjB,eAAiB;;;AAE1D,wBAAkB,mBAAmB,SAArC;AACA,UAAI,eAAJ;AAAA,UAAY,eAAZ;AAAA,UAAoB,cAApB;AAAA,UAA2B,eAA3B;;AAEA;AACA;AACA,eAAS,OAAO,UAAP,GAAoB,OAAO,KAApC;AACA,eAAS,OAAO,WAAP,GAAqB,OAAO,MAArC;;AAEA;AACA,cAAQ,KAAK,GAAL,CAAS,MAAT,EAAiB,MAAjB,CAAR;AACA,aAAO,KAAP,CAAa,eAAb,GAA+B,KAA/B;AACA,aAAO,KAAP,CAAa,SAAb,GAAyB,WAAW,KAAX,GAAmB,GAA5C;;AAEA;AACA;AACA;AACA;AACA,UAAI,OAAO,KAAP,GAAe,OAAO,MAA1B,EAAkC;AAChC,YAAI,OAAO,KAAP,GAAe,KAAf,GAAuB,OAAO,UAAlC,EAA8C;AAC5C,mBAAS,cAAT;AACD,SAFD,MAEO;AACL,mBAAS,YAAT;AACD;AACF,OAND,MAMO;AACL,YAAI,OAAO,MAAP,GAAgB,KAAhB,GAAwB,OAAO,WAAnC,EAAgD;AAC9C,mBAAS,YAAT;AACD,SAFD,MAEO;AACL,mBAAS,cAAT;AACD;AACF;;AAED;AACA,UAAI,eAAJ;AACA,UAAI,WAAW,cAAf,EAA+B;AAC7B,iBAAS,CAAC,OAAO,UAAP,GAAoB,OAAO,KAAP,GAAe,KAApC,IAA6C,CAAtD;AACA,eAAO,KAAP,CAAa,UAAb,GAA0B,SAAS,IAAnC;AACA,eAAO,KAAP,CAAa,WAAb,GAA2B,SAAS,IAApC;AACD;;AAED;AACA,UAAI,WAAW,YAAf,EAA6B;AAC3B,iBAAS,CAAC,OAAO,WAAP,GAAqB,OAAO,MAAP,GAAgB,KAAtC,IAA+C,CAAxD;AACA,eAAO,KAAP,CAAa,SAAb,GAAyB,SAAS,IAAlC;AACA,eAAO,KAAP,CAAa,YAAb,GAA4B,SAAS,IAArC;AACD;;AAED;AACA;AACA,aAAO,KAAP,CAAa,WAAb,GAA2B,CAA3B;AACA,aAAO,KAAP,CAAa,YAAb,GAA4B,CAA5B;AACA,aAAO,KAAP,CAAa,UAAb,GAA0B,CAA1B;AACA,aAAO,KAAP,CAAa,aAAb,GAA6B,CAA7B;AACA,aAAO,KAAP,CAAa,OAAb,GAAuB,OAAvB;;AAEA;AACA,eAAS,IAAT,CAAc,KAAd,CAAoB,eAApB,GAAsC,eAAtC;;AAEA,WAAK,OAAL,CAAa,KAAb,GAAqB,KAArB;AACA,WAAK,KAAL,GAAa,KAAb;;AAEA;AACA,UAAI,KAAK,UAAU,SAAV,CAAoB,WAApB,EAAT;AACA,UAAI,GAAG,OAAH,CAAW,QAAX,KAAwB,CAAC,CAA7B,EAAgC;AAC9B,YAAI,GAAG,OAAH,CAAW,QAAX,IAAuB,CAAC,CAA5B,EAA+B;AAC7B;AACD,SAFD,MAEO;AACL;AACA,iBAAO,KAAP,CAAa,SAAb,GAAyB,MAAzB;AACA,iBAAO,KAAP,CAAa,SAAb,GAAyB,MAAzB;AACD;AACF;;AAED;AACA;AACH,cAAQ,GAAR,CAAY,YAAU,KAAtB;AACG,aAAO,KAAP;AACD;;;sBAhPO,G,EAAK;AACX,WAAK,IAAL,GAAY,GAAZ;AACA,WAAK,IAAL,GAAY,OAAO,GAAnB;AACD,K;wBACQ;AACP,aAAO,KAAK,IAAZ;AACD;;;wBAES;AACR,aAAO,KAAK,IAAZ;AACD;;;;;;kBApEkB,I;AA8Sd,SAAS,IAAT,GACsB;AAAA,MADR,KACQ,uEADA,aACA;AAAA,MADe,MACf,uEADwB,cACxB;AAAA,MAA3B,KAA2B;AAAA,MAApB,YAAoB;AAAA,MAAN,IAAM;;AAC3B,SAAO,IAAI,IAAJ,CAAS,KAAT,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,YAA/B,EAA6C,IAA7C,CAAP;AACD;;;;;;;;;;ACvUD;;;;;;AACA;;AAEO,IAAI,0BAAS;AAClB,UAAQ,CADU;AAElB,UAAQ,CAFU;;AAIlB,mBAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAJC;AAKlB,kBAAgB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,CALE;AAMlB,kBAAgB,CAAC,MAAD,CANE;AAOlB,mBAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,CAPC;;AASlB;AACA,QAAM,gBAAuB;AAAA;;AAAA,QAAd,OAAc,uEAAJ,EAAI;;AAC3B,WAAO,IAAI,OAAJ,CAAY,mBAAW;AAC5B,UAAI,cAAc,SAAd,WAAc,GAAM;AACtB,cAAK,MAAL;AACA,gBAAQ,GAAR,CAAY,MAAK,MAAjB;AACA,YAAI,MAAK,MAAL,KAAgB,MAAK,MAAzB,EAAiC;AAC/B,gBAAK,MAAL,GAAc,MAAK,MAAL,GAAc,CAA5B;AACA,kBAAQ,IAAR,CAAa,yBAAb;AACA;AACD;AACF,OARD;AASA,UAAI,CAAC,OAAD,IAAY,QAAQ,MAAR,GAAiB,CAAjC,EAAoC;AAClC,gBAAQ,KAAR,CAAc,wBAAd;AACA;AACD;AACD,cAAQ,IAAR,CAAa,mBAAb;;AAEA,YAAK,MAAL,GAAc,QAAQ,MAAtB;AACA,cAAQ,OAAR,CAAgB,kBAAU;AACxB,YAAI,YAAY,OAAO,KAAP,CAAa,GAAb,EAAkB,GAAlB,EAAhB;AACA;AACA,YAAI,MAAK,eAAL,CAAqB,GAArB,CAAyB,SAAzB,CAAJ,EAAyC;AACvC,gBAAK,SAAL,CAAe,MAAf,EAAuB,WAAvB;AACD;AACD;AAHA,aAIK,IAAI,MAAK,cAAL,CAAoB,GAApB,CAAwB,SAAxB,CAAJ,EAAwC;AAC3C,kBAAK,QAAL,CAAc,MAAd,EAAsB,WAAtB;AACD;AACD;AAHK,eAIA,IAAI,MAAK,cAAL,CAAoB,GAApB,CAAwB,SAAxB,CAAJ,EAAwC;AAC3C,oBAAK,QAAL,CAAc,MAAd,EAAsB,WAAtB;AACD;AACD;AAHK,iBAIA,IAAI,MAAK,eAAL,CAAqB,GAArB,CAAyB,SAAzB,CAAJ,EAAyC;AAC5C,sBAAK,SAAL,CAAe,MAAf,EAAuB,WAAvB;AACD;AACD;AAHK,mBAIA;AACH,0BAAQ,GAAR,CAAY,+BAA+B,MAA3C;AACD;AACF,OAtBD;AAuBD,KAxCM,CAAP;AAyCD,GApDiB;;AAsDlB,aAAW,mBAAS,MAAT,EAAiB,WAAjB,EAA8B;AACvC,QAAI,QAAQ,IAAI,KAAJ,EAAZ;AACA,UAAM,gBAAN,CAAuB,MAAvB,EAA+B,WAA/B,EAA4C,KAA5C;AACA,SAAK,MAAL,IAAe,KAAf;AACA,UAAM,GAAN,GAAY,MAAZ;AACD,GA3DiB;;AA6DlB,YAAU,kBAAS,MAAT,EAAiB,WAAjB,EAA8B;AACtC,QAAI,aAAa,OAAO,KAAP,CAAa,GAAb,EAAkB,GAAlB,GAAwB,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAjB;AACA,QAAI,WAAW,MAAM,OAAN,CAAf;AACA,QAAI,WAAW,+BAA+B,UAA/B,GACb,eADa,GACK,MADL,GACc,MAD7B;AAEA,aAAS,WAAT,CAAqB,SAAS,cAAT,CAAwB,QAAxB,CAArB;AACA,aAAS,IAAT,CAAc,WAAd,CAA0B,QAA1B;AACA;AACD,GArEiB;;AAuElB,YAAU,kBAAS,MAAT,EAAiB,WAAjB,EAA8B;AAAA;;AACtC,QAAI,MAAM,IAAI,cAAJ,EAAV;AACA,QAAI,IAAJ,CAAS,KAAT,EAAgB,MAAhB,EAAwB,IAAxB;AACA,QAAI,YAAJ,GAAmB,MAAnB;AACA,QAAI,MAAJ,GAAa,iBAAS;AACpB,UAAI,IAAI,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAI,OAAO,KAAK,KAAL,CAAW,IAAI,YAAf,CAAX;AACA,aAAK,IAAL,GAAY,MAAZ;AACA,eAAK,KAAK,IAAV,IAAkB,IAAlB;AACA,YAAI,KAAK,MAAT,EACE,OAAK,mBAAL,CAAyB,IAAzB,EAA+B,MAA/B,EAAuC,WAAvC,EADF,KAGE;AACH;AACF,KAVD;AAWA,QAAI,IAAJ;AACD,GAvFiB;;AAyFlB,uBAAqB,6BAAS,IAAT,EAAe,MAAf,EAAuB,WAAvB,EAAoC;AAAA;;AACvD,QAAI,UAAU,OAAO,OAAP,CAAe,SAAf,EAA0B,EAA1B,CAAd;AACA,QAAI,cAAc,UAAU,KAAK,IAAL,CAAU,KAAtC;AACA,QAAI,QAAQ,IAAI,KAAJ,EAAZ;AACA,QAAI,mBAAmB,SAAnB,gBAAmB,GAAM;AAC3B,aAAK,WAAL,IAAoB,KAApB;AACA,QAAE,IAAF,CAAO,KAAK,MAAZ,EAAoB,OAApB,CAA4B,iBAAS;AACnC,eAAK,KAAL,IAAc,KAAK,MAAL,CAAY,KAAZ,CAAd;AACA,eAAK,KAAL,EAAY,MAAZ,GAAqB,KAArB;AACD,OAHD;AAIA;AACD,KAPD;AAQA,UAAM,gBAAN,CAAuB,MAAvB,EAA+B,gBAA/B,EAAiD,KAAjD;AACA,UAAM,GAAN,GAAY,WAAZ;AACD,GAvGiB;;AAyGlB,aAAW,mBAAS,MAAT,EAAiB,WAAjB,EAA8B;AACvC;AACA;AACA;AACD;AA7GiB,CAAb;;;;;;;;QCHS,Y,GAAA,Y;QA0BA,a,GAAA,a;QAkBA,e,GAAA,e;QAoCA,qB,GAAA,qB;QAoFA,uB,GAAA,uB;QAUA,gB,GAAA,gB;QA4BA,kB,GAAA,kB;QAuDA,sB,GAAA,sB;QA0EA,kB,GAAA,kB;QAUA,wB,GAAA,wB;QAyEA,oB,GAAA,oB;QA2CA,G,GAAA,G;AAzcT,SAAS,YAAT,CAAsB,KAAtB,EAA6B,MAA7B,EAAqC;AAC1C,MAAI,cAAJ;AAAA,MAAW,aAAX;AAAA,MAAiB,cAAjB;AAAA,MAAwB,YAAxB;AAAA,MAA6B,eAA7B;AAAA,MAAqC,WAArC;AAAA,MAAyC,WAAzC;AAAA,MAA6C,kBAA7C;AAAA,MAAwD,YAAxD;;AAEA,MAAI,OAAO,MAAX,EAAmB;AACjB,YAAQ,QAAR;AACD,GAFD,MAEO;AACL,YAAQ,WAAR;AACD;;AAED,MAAI,UAAU,WAAd,EAA2B;AACzB,WAAO,OAAO,EAAd;AACA,YAAQ,OAAO,EAAP,GAAY,OAAO,KAA3B;AACA,UAAM,OAAO,EAAb;AACA,aAAS,OAAO,EAAP,GAAY,OAAO,MAA5B;AACA,UAAM,MAAM,CAAN,GAAU,IAAV,IAAkB,MAAM,CAAN,GAAU,KAA5B,IAAqC,MAAM,CAAN,GAAU,GAA/C,IAAsD,MAAM,CAAN,GAAU,MAAtE;AACD;;AAED,MAAI,UAAU,QAAd,EAAwB;AACtB,SAAK,MAAM,CAAN,GAAU,OAAO,OAAtB;AACA,SAAK,MAAM,CAAN,GAAU,OAAO,OAAtB;AACA,gBAAY,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAAZ;AACA,UAAM,YAAY,OAAO,MAAzB;AACD;AACD,SAAO,GAAP;AACD;;AAEM,SAAS,aAAT,CAAuB,EAAvB,EAA2B,EAA3B,EAA+C;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AACpD,MAAI,WAAJ;AAAA,MAAQ,WAAR;AAAA,MAAY,kBAAZ;AAAA,MAAuB,sBAAvB;AAAA,MAAsC,YAAtC;;AAEA,MAAI,MAAJ,EAAY;AACV,SAAM,GAAG,EAAH,GAAQ,GAAG,MAAZ,IAAuB,GAAG,EAAH,GAAQ,GAAG,MAAlC,CAAL;AACA,SAAM,GAAG,EAAH,GAAQ,GAAG,MAAZ,IAAuB,GAAG,EAAH,GAAQ,GAAG,MAAlC,CAAL;AACD,GAHD,MAGO;AACL,SAAK,GAAG,OAAH,GAAa,GAAG,OAArB;AACA,SAAK,GAAG,OAAH,GAAa,GAAG,OAArB;AACD;;AAED,cAAY,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAAZ;AACA,kBAAgB,GAAG,MAAH,GAAY,GAAG,MAA/B;AACA,QAAM,YAAY,aAAlB;;AAEA,SAAO,GAAP;AACD;;AAEM,SAAS,eAAT,CAAyB,EAAzB,EAA6B,EAA7B,EAAiE;AAAA,MAAhC,MAAgC,uEAAvB,KAAuB;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AACtE,MAAI,kBAAJ;AAAA,MAAe,sBAAf;AAAA,MAA8B,gBAA9B;AAAA,MACE,WADF;AAAA,MACM,WADN;AAAA,MACU,WADV;AAAA,MACc,WADd;AAAA,MACkB,IAAI,EADtB;AAAA,MAEE,MAAM,KAFR;;AAIA,MAAI,MAAJ,EAAY;AACV,SAAM,GAAG,EAAH,GAAQ,GAAG,MAAZ,IAAuB,GAAG,EAAH,GAAQ,GAAG,MAAlC,CAAL;AACA,SAAM,GAAG,EAAH,GAAQ,GAAG,MAAZ,IAAuB,GAAG,EAAH,GAAQ,GAAG,MAAlC,CAAL;AACD,GAHD,MAGO;AACL,SAAK,GAAG,OAAH,GAAa,GAAG,OAArB;AACA,SAAK,GAAG,OAAH,GAAa,GAAG,OAArB;AACD;;AAED,cAAY,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAAZ;AACA,kBAAgB,GAAG,MAAH,GAAY,GAAG,MAA/B;;AAEA,MAAI,YAAY,aAAhB,EAA+B;AAC7B,UAAM,IAAN;AACA,cAAU,gBAAgB,SAA1B;AACA,QAAI,iBAAiB,GAArB;AACA,eAAW,cAAX;;AAEA,SAAK,KAAK,SAAV;AACA,SAAK,KAAK,SAAV;AACA,OAAG,CAAH,IAAQ,UAAU,EAAlB;AACA,OAAG,CAAH,IAAQ,UAAU,EAAlB;;AAEA,QAAI,MAAJ,EAAY;AACV,QAAE,CAAF,GAAM,EAAN;AACA,QAAE,CAAF,GAAM,CAAC,EAAP;AACA,uBAAiB,EAAjB,EAAqB,CAArB;AACD;AACF;AACD,SAAO,GAAP;AACD;;AAEM,SAAS,qBAAT,CAA+B,EAA/B,EAAmC,EAAnC,EAAuD;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AAC5D,MAAI,sBAAJ;AAAA,MAAmB,gBAAnB;AAAA,MAA4B,cAA5B;AAAA,MAAmC,cAAnC;AAAA,MACE,IAAI,EADN;AAAA,MAEE,MAAM,EAFR;AAAA,MAGE,MAAM,EAHR;AAAA,MAIE,MAAM,EAJR;AAAA,MAKE,MAAM,EALR;AAAA,MAME,MAAM,KANR;;AAQA,KAAG,IAAH,GAAU,GAAG,IAAH,IAAW,CAArB;AACA,KAAG,IAAH,GAAU,GAAG,IAAH,IAAW,CAArB;;AAEA,MAAI,MAAJ,EAAY;AACV,MAAE,EAAF,GAAQ,GAAG,EAAH,GAAQ,GAAG,MAAZ,IAAuB,GAAG,EAAH,GAAQ,GAAG,MAAlC,CAAP;AACA,MAAE,EAAF,GAAQ,GAAG,EAAH,GAAQ,GAAG,MAAZ,IAAuB,GAAG,EAAH,GAAQ,GAAG,MAAlC,CAAP;AACD,GAHD,MAGO;AACL,MAAE,EAAF,GAAO,GAAG,OAAH,GAAa,GAAG,OAAvB;AACA,MAAE,EAAF,GAAO,GAAG,OAAH,GAAa,GAAG,OAAvB;AACD;;AAED,IAAE,SAAF,GAAc,KAAK,IAAL,CAAU,EAAE,EAAF,GAAO,EAAE,EAAT,GAAc,EAAE,EAAF,GAAO,EAAE,EAAjC,CAAd;AACA,kBAAgB,GAAG,MAAH,GAAY,GAAG,MAA/B;;AAEA,MAAI,EAAE,SAAF,GAAc,aAAlB,EAAiC;AAC/B,UAAM,IAAN;;AAEA,cAAU,gBAAgB,EAAE,SAA5B;;AAEA,eAAW,GAAX;;AAEA,MAAE,EAAF,GAAO,EAAE,EAAF,GAAO,EAAE,SAAhB;AACA,MAAE,EAAF,GAAO,EAAE,EAAF,GAAO,EAAE,SAAhB;;AAEA,MAAE,MAAF,GAAW,KAAK,GAAL,CAAS,EAAE,EAAF,GAAO,OAAP,GAAiB,CAA1B,CAAX;AACA,MAAE,MAAF,GAAW,KAAK,GAAL,CAAS,EAAE,EAAF,GAAO,OAAP,GAAiB,CAA1B,CAAX;;AAEC,OAAG,CAAH,GAAO,GAAG,CAAX,GAAgB,QAAQ,CAAxB,GAA2B,QAAQ,CAAC,CAApC;AACC,OAAG,CAAH,GAAO,GAAG,CAAX,GAAgB,QAAQ,CAAxB,GAA2B,QAAQ,CAAC,CAApC;;AAEA,OAAG,CAAH,GAAO,GAAG,CAAH,GAAQ,EAAE,MAAF,GAAW,KAA1B;AACA,OAAG,CAAH,GAAO,GAAG,CAAH,GAAQ,EAAE,MAAF,GAAW,KAA1B;;AAEA,OAAG,CAAH,GAAO,GAAG,CAAH,GAAQ,EAAE,MAAF,GAAW,CAAC,KAA3B;AACA,OAAG,CAAH,GAAO,GAAG,CAAH,GAAQ,EAAE,MAAF,GAAW,CAAC,KAA3B;;AAEA,MAAE,EAAF,GAAO,EAAE,EAAT;AACA,MAAE,EAAF,GAAO,CAAC,EAAE,EAAV;;AAEA,QAAI,MAAM,GAAG,EAAH,GAAQ,EAAE,EAAV,GAAe,GAAG,EAAH,GAAQ,EAAE,EAAnC;;AAEA,QAAI,CAAJ,GAAQ,MAAM,EAAE,EAAhB;AACA,QAAI,CAAJ,GAAQ,MAAM,EAAE,EAAhB;;AAEA,QAAI,MAAM,GAAG,EAAH,IAAS,EAAE,EAAF,GAAO,EAAE,SAAlB,IAA+B,GAAG,EAAH,IAAS,EAAE,EAAF,GAAO,EAAE,SAAlB,CAAzC;;AAEA,QAAI,CAAJ,GAAQ,OAAO,EAAE,EAAF,GAAO,EAAE,SAAhB,CAAR;AACA,QAAI,CAAJ,GAAQ,OAAO,EAAE,EAAF,GAAO,EAAE,SAAhB,CAAR;;AAEA,QAAI,MAAM,GAAG,EAAH,GAAQ,EAAE,EAAV,GAAe,GAAG,EAAH,GAAQ,EAAE,EAAnC;;AAEA,QAAI,CAAJ,GAAQ,MAAM,EAAE,EAAhB;AACA,QAAI,CAAJ,GAAQ,MAAM,EAAE,EAAhB;;AAEA,QAAI,MAAM,GAAG,EAAH,IAAS,EAAE,EAAF,GAAO,EAAE,SAAlB,IAA+B,GAAG,EAAH,IAAS,EAAE,EAAF,GAAO,EAAE,SAAlB,CAAzC;;AAEA,QAAI,CAAJ,GAAQ,OAAO,EAAE,EAAF,GAAO,EAAE,SAAhB,CAAR;AACA,QAAI,CAAJ,GAAQ,OAAO,EAAE,EAAF,GAAO,EAAE,SAAhB,CAAR;;AAEA,OAAG,MAAH,GAAY,EAAZ;AACA,OAAG,MAAH,CAAU,CAAV,GAAc,IAAI,CAAJ,GAAQ,IAAI,CAA1B;AACA,OAAG,MAAH,CAAU,CAAV,GAAc,IAAI,CAAJ,GAAQ,IAAI,CAA1B;;AAEA,OAAG,MAAH,GAAY,EAAZ;AACA,OAAG,MAAH,CAAU,CAAV,GAAc,IAAI,CAAJ,GAAQ,IAAI,CAA1B;AACA,OAAG,MAAH,CAAU,CAAV,GAAc,IAAI,CAAJ,GAAQ,IAAI,CAA1B;;AAEA,OAAG,EAAH,GAAQ,GAAG,MAAH,CAAU,CAAV,GAAc,GAAG,IAAzB;AACA,OAAG,EAAH,GAAQ,GAAG,MAAH,CAAU,CAAV,GAAc,GAAG,IAAzB;AACA,OAAG,EAAH,GAAQ,GAAG,MAAH,CAAU,CAAV,GAAc,GAAG,IAAzB;AACA,OAAG,EAAH,GAAQ,GAAG,MAAH,CAAU,CAAV,GAAc,GAAG,IAAzB;AACD;AACD,SAAO,GAAP;AACD;;AAEM,SAAS,uBAAT,CAAiC,cAAjC,EAAiE;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AACtE,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,eAAe,MAAnC,EAA2C,GAA3C,EAAgD;AAC9C,QAAI,KAAK,eAAe,CAAf,CAAT;AACA,SAAK,IAAI,IAAI,IAAI,CAAjB,EAAoB,IAAI,eAAe,MAAvC,EAA+C,GAA/C,EAAoD;AAClD,UAAI,KAAK,eAAe,CAAf,CAAT;AACA,4BAAsB,EAAtB,EAA0B,EAA1B,EAA8B,MAA9B;AACD;AACF;AACF;;AAEM,SAAS,gBAAT,CAA0B,EAA1B,EAA8B,EAA9B,EAAkD;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AACvD,MAAI,YAAJ;AAAA,MAAS,2BAAT;AAAA,MAA6B,4BAA7B;AAAA,MAAkD,WAAlD;AAAA,MAAsD,WAAtD;AACA,QAAM,KAAN;;AAEA,MAAI,MAAJ,EAAY;AACV,SAAM,GAAG,EAAH,GAAQ,GAAG,SAAZ,IAA0B,GAAG,EAAH,GAAQ,GAAG,SAArC,CAAL;AACA,SAAM,GAAG,EAAH,GAAQ,GAAG,UAAZ,IAA2B,GAAG,EAAH,GAAQ,GAAG,UAAtC,CAAL;AACD,GAHD,MAGO;AACL,SAAK,GAAG,OAAH,GAAa,GAAG,OAArB;AACA,SAAK,GAAG,OAAH,GAAa,GAAG,OAArB;AACD;;AAED,uBAAqB,GAAG,SAAH,GAAe,GAAG,SAAvC;AACA,wBAAsB,GAAG,UAAH,GAAgB,GAAG,UAAzC;;AAEA,MAAI,KAAK,GAAL,CAAS,EAAT,IAAe,kBAAnB,EAAuC;AACrC,QAAI,KAAK,GAAL,CAAS,EAAT,IAAe,mBAAnB,EAAwC;AACtC,YAAM,IAAN;AACD,KAFD,MAEO;AACL,YAAM,KAAN;AACD;AACF,GAND,MAMO;AACL,UAAM,KAAN;AACD;;AAED,SAAO,GAAP;AACD;;AAEM,SAAS,kBAAT,CAA4B,EAA5B,EAAgC,EAAhC,EAAmE;AAAA,MAA/B,MAA+B,uEAAtB,KAAsB;AAAA,MAAf,MAAe,uEAAN,IAAM;;AACxE,MAAI,kBAAJ;AAAA,MAAe,2BAAf;AAAA,MAAmC,4BAAnC;AAAA,MACE,iBADF;AAAA,MACY,iBADZ;AAAA,MACsB,WADtB;AAAA,MAC0B,WAD1B;;AAGA,MAAI,MAAJ,EAAY;AACV,SAAM,GAAG,EAAH,GAAQ,GAAG,SAAZ,IAA0B,GAAG,EAAH,GAAQ,GAAG,SAArC,CAAL;AACA,SAAM,GAAG,EAAH,GAAQ,GAAG,UAAZ,IAA2B,GAAG,EAAH,GAAQ,GAAG,UAAtC,CAAL;AACD,GAHD,MAGO;AACL,SAAK,GAAG,OAAH,GAAa,GAAG,OAArB;AACA,SAAK,GAAG,OAAH,GAAa,GAAG,OAArB;AACD;;AAED,uBAAqB,GAAG,SAAH,GAAe,GAAG,SAAvC;AACA,wBAAsB,GAAG,UAAH,GAAgB,GAAG,UAAzC;;AAEA,MAAI,KAAK,GAAL,CAAS,EAAT,IAAe,kBAAnB,EAAuC;AACrC,QAAI,KAAK,GAAL,CAAS,EAAT,IAAe,mBAAnB,EAAwC;AACtC,iBAAW,qBAAqB,KAAK,GAAL,CAAS,EAAT,CAAhC;AACA,iBAAW,sBAAsB,KAAK,GAAL,CAAS,EAAT,CAAjC;;AAEA,UAAI,YAAY,QAAhB,EAA0B;AACxB,YAAI,KAAK,CAAT,EAAY;AACV,sBAAY,KAAZ;AACA,aAAG,CAAH,GAAO,GAAG,CAAH,GAAO,QAAd;AACD,SAHD,MAGO;AACL,sBAAY,QAAZ;AACA,aAAG,CAAH,GAAO,GAAG,CAAH,GAAO,QAAd;AACD;;AAED,YAAI,MAAJ,EAAY;AACV,aAAG,EAAH,IAAS,CAAC,CAAV;AACD;AACF,OAZD,MAYO;AACL,YAAI,KAAK,CAAT,EAAY;AACV,sBAAY,MAAZ;AACA,aAAG,CAAH,GAAO,GAAG,CAAH,GAAO,QAAd;AACD,SAHD,MAGO;AACL,sBAAY,OAAZ;AACA,aAAG,CAAH,GAAO,GAAG,CAAH,GAAO,QAAd;AACD;;AAED,YAAI,MAAJ,EAAY;AACV,aAAG,EAAH,IAAS,CAAC,CAAV;AACD;AACF;AACF,KA7BD,MA6BO;AACL;AACD;AACF,GAjCD,MAiCO,CAEN;AADC;;AAEF;AACA,SAAO,SAAP;AACD;;AAEM,SAAS,sBAAT,CAAgC,EAAhC,EAAoC,EAApC,EAAwD;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AAC7D,MAAI,eAAJ;AAAA,MAAY,kBAAZ;AAAA,MAAuB,YAAvB;AAAA,MAA4B,YAA5B;AAAA,MAAiC,YAAjC;AAAA,MAAsC,YAAtC;;AAEA,MAAI,MAAJ,EAAY;AACV,UAAM,GAAG,EAAT;AACA,UAAM,GAAG,EAAT;AACA,UAAM,GAAG,EAAT;AACA,UAAM,GAAG,EAAT;AACD,GALD,MAKO;AACL,UAAM,GAAG,CAAT;AACA,UAAM,GAAG,CAAT;AACA,UAAM,GAAG,CAAT;AACA,UAAM,GAAG,CAAT;AACD;;AAED,MAAI,MAAM,MAAM,GAAG,UAAnB,EAA+B;AAC7B,QAAI,MAAM,MAAM,CAAN,GAAU,GAAG,SAAvB,EAAkC;AAChC,eAAS,SAAT;AACD,KAFD,MAEO,IAAI,MAAM,MAAM,CAAN,GAAU,GAAG,SAAvB,EAAkC;AACvC,eAAS,UAAT;AACD,KAFM,MAEA;AACL,eAAS,WAAT;AACD;AACF,GARD,MAQO,IAAI,MAAM,MAAM,GAAG,UAAnB,EAA+B;AACpC,QAAI,MAAM,MAAM,CAAN,GAAU,GAAG,SAAvB,EAAkC;AAChC,eAAS,YAAT;AACD,KAFD,MAEO,IAAI,MAAM,MAAM,CAAN,GAAU,GAAG,SAAvB,EAAkC;AACvC,eAAS,aAAT;AACD,KAFM,MAEA;AACL,eAAS,cAAT;AACD;AACF,GARM,MAQA;AACL,QAAI,MAAM,MAAM,GAAG,SAAnB,EAA8B;AAC5B,eAAS,YAAT;AACD,KAFD,MAEO;AACL,eAAS,aAAT;AACD;AACF;;AAED,MAAI,WAAW,WAAX,IAA0B,WAAW,cAArC,IACA,WAAW,YADX,IAC2B,WAAW,aAD1C,EACyD;AACvD,gBAAY,iBAAiB,EAAjB,EAAqB,EAArB,EAAyB,MAAzB,CAAZ;AACD,GAHD,MAGO;AACL,QAAI,QAAQ,EAAZ;;AAEA,YAAQ,MAAR;AACA,WAAK,SAAL;AACE,cAAM,CAAN,GAAU,GAAV;AACA,cAAM,CAAN,GAAU,GAAV;AACA;AACF,WAAK,UAAL;AACE,cAAM,CAAN,GAAU,MAAM,GAAG,KAAnB;AACA,cAAM,CAAN,GAAU,GAAV;AACA;AACF,WAAK,YAAL;AACE,cAAM,CAAN,GAAU,GAAV;AACA,cAAM,CAAN,GAAU,MAAM,GAAG,MAAnB;AACA;AACF,WAAK,aAAL;AACE,cAAM,CAAN,GAAU,MAAM,GAAG,KAAnB;AACA,cAAM,CAAN,GAAU,MAAM,GAAG,MAAnB;AAfF;;AAkBA,gBAAY,mBAAmB,EAAnB,EAAuB,KAAvB,EAA8B,MAA9B,CAAZ;AACD;;AAED,MAAI,SAAJ,EAAe;AACb,WAAO,MAAP;AACD,GAFD,MAEO;AACL,WAAO,SAAP;AACD;AACF;;AAGM,SAAS,kBAAT,CAA4B,EAA5B,EAAgC,KAAhC,EAAuD;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AAC5D,QAAM,QAAN,GAAiB,CAAjB;AACA,QAAM,MAAN,GAAe,GAAf;AACA,QAAM,OAAN,GAAgB,MAAM,CAAtB;AACA,QAAM,OAAN,GAAgB,MAAM,CAAtB;AACA,QAAM,EAAN,GAAW,MAAM,CAAjB;AACA,QAAM,EAAN,GAAW,MAAM,CAAjB;AACA,SAAO,cAAc,EAAd,EAAkB,KAAlB,EAAyB,MAAzB,CAAP;AACD;;AAEM,SAAS,wBAAT,CAAkC,EAAlC,EAAsC,EAAtC,EAA0E;AAAA,MAAhC,MAAgC,uEAAvB,KAAuB;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AAC/E,MAAI,eAAJ;AAAA,MAAY,kBAAZ;AAAA,MAAuB,YAAvB;AAAA,MAA4B,YAA5B;AAAA,MAAiC,YAAjC;AAAA,MAAsC,YAAtC;;AAEA,MAAI,MAAJ,EAAY;AACV,UAAM,GAAG,EAAT;AACA,UAAM,GAAG,EAAT;AACA,UAAM,GAAG,EAAT;AACA,UAAM,GAAG,EAAT;AACD,GALD,MAKO;AACL,UAAM,GAAG,CAAT;AACA,UAAM,GAAG,CAAT;AACA,UAAM,GAAG,CAAT;AACA,UAAM,GAAG,CAAT;AACD;;AAED,MAAI,MAAM,MAAM,GAAG,UAAnB,EAA+B;AAC7B,QAAI,MAAM,MAAM,CAAN,GAAU,GAAG,SAAvB,EAAkC;AAChC,eAAS,SAAT;AACD,KAFD,MAEO,IAAI,MAAM,MAAM,CAAN,GAAU,GAAG,SAAvB,EAAkC;AACvC,eAAS,UAAT;AACD,KAFM,MAEA;AACL,eAAS,WAAT;AACD;AACF,GARD,MAQO,IAAI,MAAM,MAAM,GAAG,UAAnB,EAA+B;AACpC,QAAI,MAAM,MAAM,CAAN,GAAU,GAAG,SAAvB,EAAkC;AAChC,eAAS,YAAT;AACD,KAFD,MAEO,IAAI,MAAM,MAAM,CAAN,GAAU,GAAG,SAAvB,EAAkC;AACvC,eAAS,aAAT;AACD,KAFM,MAEA;AACL,eAAS,cAAT;AACD;AACF,GARM,MAQA;AACL,QAAI,MAAM,MAAM,GAAG,SAAnB,EAA8B;AAC5B,eAAS,YAAT;AACD,KAFD,MAEO;AACL,eAAS,aAAT;AACD;AACF;;AAED,MAAI,WAAW,WAAX,IAA0B,WAAW,cAArC,IACA,WAAW,YADX,IAC2B,WAAW,aAD1C,EACyD;AACvD,gBAAY,mBAAmB,EAAnB,EAAuB,EAAvB,EAA2B,MAA3B,EAAmC,MAAnC,CAAZ;AACD,GAHD,MAGO;AACL,QAAI,QAAQ,EAAZ;;AAEA,YAAQ,MAAR;AACE,WAAK,SAAL;AACE,cAAM,CAAN,GAAU,GAAV;AACA,cAAM,CAAN,GAAU,GAAV;AACA;AACF,WAAK,UAAL;AACE,cAAM,CAAN,GAAU,MAAM,GAAG,KAAnB;AACA,cAAM,CAAN,GAAU,GAAV;AACA;AACF,WAAK,YAAL;AACE,cAAM,CAAN,GAAU,GAAV;AACA,cAAM,CAAN,GAAU,MAAM,GAAG,MAAnB;AACA;AACF,WAAK,aAAL;AACE,cAAM,CAAN,GAAU,MAAM,GAAG,KAAnB;AACA,cAAM,CAAN,GAAU,MAAM,GAAG,MAAnB;AAfJ;;AAkBA,gBAAY,qBAAqB,EAArB,EAAyB,KAAzB,EAAgC,MAAhC,EAAwC,MAAxC,CAAZ;AACD;;AAED,MAAI,SAAJ,EAAe;AACb,WAAO,MAAP;AACD,GAFD,MAEO;AACL,WAAO,SAAP;AACD;AACF;;AAEM,SAAS,oBAAT,CAA8B,EAA9B,EAAkC,KAAlC,EAAyE;AAAA,MAAhC,MAAgC,uEAAvB,KAAuB;AAAA,MAAhB,MAAgB,uEAAP,KAAO;;AAC9E,QAAM,QAAN,GAAiB,CAAjB;AACA,QAAM,MAAN,GAAe,GAAf;AACA,QAAM,OAAN,GAAgB,MAAM,CAAtB;AACA,QAAM,OAAN,GAAgB,MAAM,CAAtB;AACA,QAAM,EAAN,GAAW,MAAM,CAAjB;AACA,QAAM,EAAN,GAAW,MAAM,CAAjB;AACA,SAAO,gBAAgB,EAAhB,EAAoB,KAApB,EAA2B,MAA3B,EAAmC,MAAnC,CAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC;AAC9B,MAAI,YAAJ;AAAA,MAAS,YAAT;AAAA,MACE,KAAK,EADP;AAAA,MAEE,KAAK,EAFP;AAAA,MAGE,SAAS,EAHX;AAAA,MAIE,OAAO,EAAE,IAAF,IAAU,CAJnB;;AAMA,IAAE,EAAF,GAAO,EAAE,CAAT;AACA,IAAE,EAAF,GAAO,CAAC,EAAE,CAAV;;AAEA,IAAE,SAAF,GAAc,KAAK,IAAL,CAAU,EAAE,CAAF,GAAM,EAAE,CAAR,GAAY,EAAE,CAAF,GAAM,EAAE,CAA9B,CAAd;AACA,IAAE,EAAF,GAAO,EAAE,CAAF,GAAM,EAAE,SAAf;AACA,IAAE,EAAF,GAAO,EAAE,CAAF,GAAM,EAAE,SAAf;AACA,QAAM,EAAE,EAAF,GAAO,EAAE,EAAT,GAAc,EAAE,EAAF,GAAO,EAAE,EAA7B;;AAEA,KAAG,EAAH,GAAQ,MAAM,EAAE,EAAhB;AACA,KAAG,EAAH,GAAQ,MAAM,EAAE,EAAhB;;AAEA,QAAM,EAAE,EAAF,IAAQ,EAAE,EAAF,GAAO,EAAE,SAAjB,IAA8B,EAAE,EAAF,IAAQ,EAAE,EAAF,GAAO,EAAE,SAAjB,CAApC;;AAEA,KAAG,EAAH,GAAQ,OAAO,EAAE,EAAF,GAAO,EAAE,SAAhB,CAAR;AACA,KAAG,EAAH,GAAQ,OAAO,EAAE,EAAF,GAAO,EAAE,SAAhB,CAAR;;AAEA,KAAG,EAAH,IAAS,CAAC,CAAV;AACA,KAAG,EAAH,IAAS,CAAC,CAAV;;AAEA,SAAO,CAAP,GAAW,GAAG,EAAH,GAAQ,GAAG,EAAtB;AACA,SAAO,CAAP,GAAW,GAAG,EAAH,GAAQ,GAAG,EAAtB;;AAEA,IAAE,EAAF,GAAO,OAAO,CAAP,GAAW,IAAlB;AACA,IAAE,EAAF,GAAO,OAAO,CAAP,GAAW,IAAlB;AACD;;AAEM,SAAS,GAAT,CAAa,CAAb,EAAgB,CAAhB,EAA6E;AAAA,MAA1D,KAA0D,uEAAlD,KAAkD;AAAA,MAA3C,MAA2C,uEAAlC,KAAkC;AAAA,MAA3B,MAA2B;AAAA,MAAnB,KAAmB,uEAAX,SAAW;;AAClF,MAAI,kBAAJ;AAAA,MACI,aAAa,EAAE,MAAF,KAAa,SAD9B;AAAA,MAEI,aAAa,EAAE,MAAF,KAAa,SAF9B;;AAIA,MAAI,cAAc,aAAa,KAA3B,IAAoC,cAAc,aAAa,KAAnE,EAA0E;AACxE;AACD,GAFD,MAEO;AACL,gBAAY,kBAAkB,CAAlB,EAAqB,CAArB,CAAZ;AACA,QAAI,aAAa,KAAjB,EAAwB,MAAM,SAAN;AACzB;;AAED,SAAO,SAAP;;AAEA,WAAS,iBAAT,CAA2B,CAA3B,EAA8B,CAA9B,EAAiC;AAC/B,QAAI,aAAa,EAAE,MAAF,KAAa,SAA9B;AACA,QAAI,aAAa,EAAE,MAAF,KAAa,SAA9B;;AAEA,QAAI,cAAc,UAAlB,EAA8B;AAC5B,UAAI,EAAE,QAAF,IAAc,EAAE,QAApB,EAA8B;AAC5B,eAAO,eAAe,CAAf,EAAkB,CAAlB,CAAP;AACD,OAFD,MAEO,IAAI,EAAE,QAAF,IAAc,CAAC,EAAE,QAArB,EAA+B;AACpC,eAAO,kBAAkB,CAAlB,EAAqB,CAArB,CAAP;AACD,OAFM,MAEA;AACL,eAAO,qBAAqB,CAArB,EAAwB,CAAxB,CAAP;AACD;AACF,KARD,MAQO,IAAI,cAAc,EAAE,EAAE,CAAF,KAAQ,SAAV,CAAd,IAAsC,EAAE,EAAE,CAAF,KAAQ,SAAV,CAA1C,EAAgE;AACrE,aAAO,aAAa,CAAb,EAAgB,CAAhB,CAAP;AACD,KAFM,MAEA;AACL,YAAM,IAAI,KAAJ,CAAa,CAAb,aAAsB,CAAtB,oDAAN;AACD;AACF;;AAED,WAAS,aAAT,GAAyB;AACvB,QAAI,aAAa,KAAjB,EAAwB;AAAA,iBACT,CAAC,EAAD,EAAI,EAAJ,CADS;AAAA,UACjB,EADiB;AAAA,UACd,EADc;AAEvB;AACD,SAAK,IAAI,IAAI,EAAE,MAAF,GAAW,CAAxB,EAA2B,KAAK,CAAhC,EAAmC,GAAnC,EAAwC;AACtC,UAAI,SAAS,EAAE,CAAF,CAAb;AACA,kBAAY,kBAAkB,CAAlB,EAAqB,MAArB,CAAZ;AACA,UAAI,aAAa,KAAjB,EAAwB,MAAM,SAAN,EAAiB,MAAjB;AACzB;AACF;;AAED,WAAS,cAAT,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B;AAC5B,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,cAAc,CAAd,EAAiB,CAAjB,CAAP;AACD,KAFD,MAEO;AACL,UAAI,EAAE,EAAF,GAAO,EAAE,EAAT,KAAgB,CAAhB,IAAqB,EAAE,EAAF,GAAO,EAAE,EAAT,KAAgB,CAAzC,EAA4C;AAC1C,eAAO,sBAAsB,CAAtB,EAAyB,CAAzB,EAA4B,MAA5B,CAAP;AACD,OAFD,MAEO;AACL,eAAO,gBAAgB,CAAhB,EAAmB,CAAnB,EAAsB,MAAtB,EAA8B,MAA9B,CAAP;AACD;AACF;AACF;;AAED,WAAS,oBAAT,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC;AAClC,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,iBAAiB,CAAjB,EAAoB,CAApB,EAAuB,MAAvB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,mBAAmB,CAAnB,EAAsB,CAAtB,EAAyB,MAAzB,EAAiC,MAAjC,CAAP;AACD;AACF;;AAED,WAAS,iBAAT,CAA2B,CAA3B,EAA8B,CAA9B,EAAiC;AAC/B,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,uBAAuB,CAAvB,EAA0B,CAA1B,EAA6B,MAA7B,CAAP;AACD,KAFD,MAEO;AACL,aAAO,yBAAyB,CAAzB,EAA4B,CAA5B,EAA+B,MAA/B,EAAuC,MAAvC,CAAP;AACD;AACF;AACF;;;;;;;;;;;AChhBD;AACA;AACA;;AAEA,OAAO,SAAP,CAAiB,GAAjB,GAAuB,UAAS,MAAT,EAAiB,KAAjB,EAAwB,MAAxB,EAAgC,KAAhC,EAAuC;AAC5D,SAAO,SAAS,CAAC,QAAQ,MAAT,KAAoB,CAAC,OAAO,MAAR,KAAmB,QAAQ,MAA3B,CAApB,CAAhB;AACD,CAFD;;AAIA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC1C,SAAO,KAAK,GAAL,CAAS,GAAT,EAAc,KAAK,GAAL,CAAS,GAAT,EAAc,IAAd,CAAd,CAAP;AACD,CAFD;;AAIA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,UAAS,SAAT,EAAoB;AAC3C,cAAY,KAAK,GAAL,CAAS,EAAT,EAAa,aAAa,CAA1B,CAAZ;AACA,SAAO,KAAK,KAAL,CAAW,OAAO,SAAlB,IAA+B,SAAtC;AACD,CAHD;;AAKA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,YAAW;AAClC,SAAQ,OAAO,CAAf;AACD,CAFD;;AAIA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,YAAW;AAClC,SAAQ,OAAO,GAAR,GAAe,KAAK,EAA3B;AACD,CAFD;;AAIA,OAAO,SAAP,CAAiB,KAAjB,GAAyB,YAAW;AAClC,SAAQ,OAAO,GAAR,GAAe,KAAK,EAA3B;AACD,CAFD;;AAIA,MAAM,SAAN,CAAgB,KAAhB,GAAwB,UAAS,IAAT,EAAe;AACrC,OAAK,IAAI,IAAI,KAAK,MAAlB,EAA0B,GAA1B,GAAgC;AAC9B,QAAI,KAAK,CAAL,KAAW,IAAf,EAAqB;AACnB,WAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACD;AACF;AACD,SAAO,IAAP;AACD,CAPD;;AASA,MAAM,SAAN,CAAgB,GAAhB,GAAsB,UAAS,IAAT,EAAc;AAClC,SAAQ,KAAK,OAAL,CAAa,IAAb,MAAuB,CAAC,CAAhC;AACD,CAFD;;AAIA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,YAAW;AAClC,SAAO,KAAK,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,MAAhC,CAAL,CAAP;AACD,CAFD;;AAIA,MAAM,SAAN,CAAgB,OAAhB,GAA0B,YAAW;AACnC,OAAK,IAAI,CAAJ,EAAO,CAAP,EAAU,IAAI,KAAK,MAAxB,EAAgC,CAAhC,GAAoC;AAClC,QAAI,SAAS,KAAK,MAAL,KAAgB,CAAzB,CAAJ;AACA,QAAI,KAAK,EAAE,CAAP,CAAJ;AACA,SAAK,CAAL,IAAU,KAAK,CAAL,CAAV;AACA,SAAK,CAAL,IAAU,CAAV;AACD;AACD,SAAO,IAAP;AACD,CARD;;AAUA,CAAC,UAAS,MAAT,EAAiB;AAChB,MAAI,UAAU,CAAd;;AAEA,MAAI,EAAJ,GAAS,UAAS,QAAT,EAAmB;AAC1B,WAAO,SAAS,MAAT,CAAgB,CAAhB,KAAsB,GAAtB,GACL,SAAS,cAAT,CAAwB,SAAS,MAAT,CAAgB,CAAhB,CAAxB,CADK,GAEL,SAAS,oBAAT,CAA8B,QAA9B,CAFF;AAGD,GAJD;;AAMA,MAAI,KAAJ,GAAY,UAAS,IAAT,EAAe;AACzB,WAAO,SAAS,aAAT,CAAuB,IAAvB,CAAP;AACD,GAFD;;AAIA,MAAI,CAAJ,GAAQ;AACN,YAAQ,kBAA4B;AAAA,UAAnB,IAAmB,uEAAZ,EAAY;AAAA,UAAR,MAAQ;;AAClC,UAAI,CAAC,MAAL,EAAa,OAAO,IAAP;AACb,WAAK,IAAI,IAAT,IAAiB,MAAjB,EAAyB;AACvB,aAAK,IAAL,IAAa,OAAO,IAAP,CAAb;AACD;AACD,aAAO,IAAP;AACD,KAPK;;AASN,WAAO,eAAS,GAAT,EAAc;AACnB,aAAO,EAAE,MAAF,CAAS,EAAT,EAAa,GAAb,CAAP;AACD,KAXK;;AAaN,UAAM,cAAS,GAAT,EAAc;AAClB,UAAI,CAAC,GAAD,IAAQ,QAAO,GAAP,yCAAO,GAAP,MAAe,QAAvB,IACF,eAAe,WADjB,EAC8B;AAC5B,eAAO,GAAP;AACD,OAHD,MAGO,IAAI,eAAe,KAAnB,EAA0B;AAC/B,YAAI,IAAI,EAAR;AACA,aAAK,IAAI,IAAI,CAAR,EAAW,IAAI,IAAI,MAAxB,EAAgC,IAAI,CAApC,EAAuC,EAAE,CAAzC,EAA4C;AAC1C,YAAE,CAAF,IAAO,EAAE,IAAF,CAAO,IAAI,CAAJ,CAAP,CAAP;AACD;AACD,eAAO,CAAP;AACD,OANM,MAMA;AACL,YAAI,KAAI,EAAR;AACA,aAAK,IAAI,EAAT,IAAc,GAAd,EAAmB;AACjB,aAAE,EAAF,IAAO,EAAE,IAAF,CAAO,IAAI,EAAJ,CAAP,CAAP;AACD;AACD,eAAO,EAAP;AACD;AACF,KA9BK;;AAgCN,cAAU,oBAA4B;AAAA,UAAnB,IAAmB,uEAAZ,EAAY;AAAA,UAAR,MAAQ;;AACpC,UAAI,CAAC,MAAL,EAAa,OAAO,IAAP;AACb,WAAK,IAAI,IAAT,IAAiB,MAAjB,EAAyB;AACvB,YAAI,KAAK,IAAL,MAAe,KAAK,CAAxB,EAA2B;AACzB,eAAK,IAAL,IAAa,OAAO,IAAP,CAAb;AACD;AACF;AACD,aAAO,IAAP;AACD,KAxCK;;AA0CN,YAAQ,kBAA4B;AAAA,UAAnB,IAAmB,uEAAZ,EAAY;AAAA,UAAR,MAAQ;;AAClC,UAAI,CAAC,MAAL,EAAa,OAAO,IAAP;AACb,WAAK,IAAI,IAAT,IAAiB,MAAjB,EAAyB;AACvB,YAAI,EAAE,KAAK,IAAL,MAAe,KAAK,CAAtB,CAAJ,EAA8B;AAC5B,eAAK,IAAL,IAAa,OAAO,IAAP,CAAb;AACD;AACF;AACD,aAAO,IAAP;AACD,KAlDK;;AAoDN,SAAK,aAAS,GAAT,EAAc,GAAd,EAAmB;AACtB,aAAO,OAAO,SAAP,CAAiB,cAAjB,CAAgC,GAAhC,EAAqC,GAArC,CAAP;AACD,KAtDK;;AAwDN,cAAU,kBAAS,GAAT,EAAc;AACtB,aAAO,OAAO,GAAP,KAAe,QAAtB;AACD,KA1DK;;AA4DN,cAAU,kBAAS,GAAT,EAAc;AACtB,aAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,iBAA/C;AACD,KA9DK;;AAgEN,gBAAY,oBAAS,GAAT,EAAc;AACxB,aAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,mBAA/C;AACD,KAlEK;;AAoEN,cAAU,kBAAS,GAAT,EAAc;AACtB,aAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,iBAA/C;AACD,KAtEK;;AAwEN,aAAS,iBAAS,GAAT,EAAc;AACrB,aAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,MAAwC,gBAA/C;AACD,KA1EK;;AA4EN,iBAAa,qBAAS,GAAT,EAAc;AACzB,aAAO,QAAQ,KAAK,CAApB;AACD,KA9EK;;AAgFN,iBAAa,qBAAS,GAAT,EAAc,QAAd,EAAwB;AACnC,UAAI,MAAM,IAAI,QAAJ,CAAV;AACA,aAAO,IAAI,QAAJ,CAAP;AACA,aAAO,GAAP;AACD,KApFK;;AAsFN,UAAM,cAAS,GAAT,EAAc,QAAd,EAAwB,OAAxB,EAAiC;AACrC,UAAI,OAAO,IAAX,EAAiB;AACjB,UAAI,IAAI,OAAR,EAAiB;AACf,YAAI,OAAJ,CAAY,QAAZ,EAAsB,OAAtB;AACD,OAFD,MAEO,IAAI,IAAI,MAAJ,KAAe,CAAC,IAAI,MAAxB,EAAgC;AACrC,aAAK,IAAI,IAAI,CAAR,EAAW,IAAI,IAAI,MAAxB,EAAgC,IAAI,CAApC,EAAuC,EAAE,CAAzC,EAA4C;AAC1C,mBAAS,IAAT,CAAc,OAAd,EAAuB,IAAI,CAAJ,CAAvB,EAA+B,CAA/B,EAAkC,GAAlC;AACD;AACF,OAJM,MAIA;AACL,aAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,mBAAS,IAAT,CAAc,OAAd,EAAuB,IAAI,GAAJ,CAAvB,EAAiC,GAAjC,EAAsC,GAAtC;AACD;AACF;AACF,KAnGK;;AAqGN,YAAQ,gBAAS,GAAT,EAAc,QAAd,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC;AAC1C,UAAI,OAAO,IAAX,EAAiB;AACjB,WAAK,IAAI,IAAI,CAAR,EAAW,IAAI,IAAI,MAAxB,EAAgC,IAAI,CAApC,EAAuC,EAAE,CAAzC,EAA4C;AAC1C,YAAI,CAAJ,EAAO,QAAP,EAAiB,IAAjB,EAAuB,IAAvB;AACD;AACF,KA1GK;;AA4GN,YAAQ,gBAAS,GAAT,EAAc,QAAd,EAAwB,OAAxB,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C;AACnD,UAAI,eAAJ;AACA,UAAI,OAAO,IAAX,EAAiB,OAAO,KAAP;AACjB,UAAI,IAAI,MAAJ,KAAe,CAAC,IAAI,MAAxB,EAAgC;AAC9B,aAAK,IAAI,IAAI,CAAR,EAAW,IAAI,IAAI,MAAxB,EAAgC,IAAI,CAApC,EAAuC,EAAE,CAAzC,EAA4C;AAC1C,mBAAS,SAAS,IAAT,CAAc,OAAd,EAAuB,IAAI,CAAJ,CAAvB,EAA+B,CAA/B,EAAkC,IAAlC,EAAwC,IAAxC,CAAT;AACA,cAAI,MAAJ,EAAY,OAAO,MAAP;AACb;AACD,eAAO,KAAP;AACD,OAND,MAMO;AACL,aAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,mBAAS,SAAS,IAAT,CAAc,OAAd,EAAuB,IAAI,GAAJ,CAAvB,EAAiC,GAAjC,EAAsC,IAAtC,EAA4C,IAA5C,CAAT;AACA,cAAI,MAAJ,EAAY,OAAO,MAAP;AACb;AACD,eAAO,KAAP;AACD;AACF,KA5HK;;AA8HN,YAAQ,gBAAS,GAAT,EAAc,QAAd,EAAwB,OAAxB,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C;AACnD,UAAI,SAAS,EAAb;AACA,UAAI,aAAJ;AACA,UAAI,OAAO,IAAX,EAAiB,OAAO,KAAP;AACjB,UAAI,IAAI,MAAJ,KAAe,CAAC,IAAI,MAAxB,EAAgC;AAC9B,aAAK,IAAI,IAAI,CAAR,EAAW,IAAI,IAAI,MAAxB,EAAgC,IAAI,CAApC,EAAuC,EAAE,CAAzC,EAA4C;AAC1C,iBAAO,SAAS,IAAT,CAAc,OAAd,EAAuB,IAAI,CAAJ,CAAvB,EAA+B,CAA/B,EAAkC,IAAlC,EAAwC,IAAxC,CAAP;AACA,cAAI,IAAJ,EAAU,OAAO,IAAP,CAAY,IAAZ;AACX;AACD,eAAO,MAAP;AACD,OAND,MAMO;AACL,aAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,mBAAS,SAAS,IAAT,CAAc,OAAd,EAAuB,IAAI,GAAJ,CAAvB,EAAiC,GAAjC,EAAsC,IAAtC,EAA4C,IAA5C,CAAT;AACA,cAAI,IAAJ,EAAU,OAAO,IAAP,CAAY,IAAZ;AACX;AACD,eAAO,MAAP;AACD;AACF,KA/IK;;AAiJN,SAAK,aAAS,GAAT,EAAc,QAAd,EAAwB,OAAxB,EAAiC;AACpC,UAAI,UAAU,EAAd;AACA,UAAI,OAAO,IAAX,EAAiB,OAAO,OAAP;AACjB,UAAI,CAAC,EAAE,QAAF,CAAW,GAAX,CAAD,IAAoB,IAAI,GAA5B,EAAiC,OAAO,IAAI,GAAJ,CAAQ,QAAR,EAAkB,OAAlB,CAAP;AACjC,QAAE,IAAF,CAAO,GAAP,EAAY,UAAS,KAAT,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B;AACvC,gBAAQ,QAAQ,MAAhB,IAA0B,SAAS,IAAT,CAAc,OAAd,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,IAArC,CAA1B;AACD,OAFD;AAGA,UAAI,IAAI,MAAJ,KAAe,CAAC,IAAI,MAAxB,EAAgC,QAAQ,MAAR,GAAiB,IAAI,MAArB;AAChC,aAAO,OAAP;AACD,KA1JK;;AA4JN,UAAM,cAAS,GAAT,EAAc;AAClB,YAAM,IAAI,KAAJ,GAAY,IAAZ,EAAN;AACA,UAAI,SAAS,EAAb;;AAEA,UAAI,OAAO,IAAX;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,EAAE,CAAlC,EAAqC;AACnC,YAAI,IAAI,CAAJ,KAAU,KAAK,CAAf,IAAoB,SAAS,IAAI,CAAJ,CAAjC,EACE,OAAO,IAAP,CAAY,IAAI,CAAJ,CAAZ;AACF,eAAO,IAAI,CAAJ,CAAP;AACD;AACD,aAAO,MAAP;AACD,KAvKK;;AAyKN,UAAM,OAAO,IAAP,IAAe,UAAS,GAAT,EAAc;AACjC,UAAI,EAAE,QAAF,CAAW,GAAX,CAAJ,EACE,MAAM,IAAI,SAAJ,CAAc,gBAAd,CAAN;AACF,UAAI,OAAO,EAAX;AACA,WAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,YAAI,EAAE,GAAF,CAAM,GAAN,EAAW,GAAX,CAAJ,EAAqB,KAAK,KAAK,MAAV,IAAoB,GAApB;AACtB;AACF,KAhLK;;AAkLN,WAAO,eAAS,KAAT,EAAgB,IAAhB,EAAgC;AAAA,UAAV,IAAU,uEAAH,CAAG;;AACrC,UAAI,MAAM,KAAK,GAAL,CAAS,KAAK,IAAL,CAAU,KAAK,GAAL,CAAS,OAAO,KAAhB,IAAyB,IAAnC,CAAT,EAAmD,CAAnD,CAAV;AACA,UAAI,MAAM,CAAV;AACA,UAAI,QAAQ,IAAI,KAAJ,CAAU,GAAV,CAAZ;;AAEA,aAAO,MAAM,GAAb,EAAkB;AAChB,cAAM,KAAN,IAAe,KAAf;AACA,YAAI,QAAQ,IAAZ,EACE,SAAS,IAAT,CADF,KAGE,SAAS,IAAT;AACH;AACD,aAAO,KAAP;AACD,KA/LK;;AAiMN,cAAU,oBAAW;AACnB,aAAO,SAAP;AACD;AAnMK,GAAR;AAsMD,CAnND,EAmNG,MAnNH;;AAsNA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,MAAI,EAAE,QAAF,CAAW,GAAX,CAAJ,EACE,MAAM,IAAI,OAAJ,CAAY,MAAZ,EAAoB,EAApB,EAAwB,KAAxB,CAA8B,GAA9B,CAAN;AACF,MAAI,CAAC,EAAE,OAAF,CAAU,GAAV,CAAL,EACE,MAAM,CAAC,GAAD,CAAN;AACF,SAAO,GAAP;AACD;;QAGC,Y,GAAA,Y;kBAGa,E;;;AAGf,QAAQ,GAAR,CAAY,oBAAZ;;;;;;;;;;;;QC3MgB,S,GAAA,S;QA+CA,M,GAAA,M;QA4CA,I,GAAA,I;;AA7KhB;;;;AACA;;;;;;;;;;IAEa,S,WAAA,S;;;AACX,uBAG0B;AAAA,QAHd,KAGc,uEAHN,EAGM;AAAA,QAHF,MAGE,uEAHO,EAGP;AAAA,QAFd,SAEc,uEAFF,MAEE;AAAA,QAFM,WAEN,uEAFoB,MAEpB;AAAA,QADd,SACc,uEADF,CACE;AAAA,QAAd,CAAc,uEAAV,CAAU;AAAA,QAAP,CAAO,uEAAH,CAAG;;AAAA;;AAAA;;AAGxB,UAAK,KAAL,GAAa,KAAb;AACA,UAAK,MAAL,GAAc,MAAd;AACA,UAAK,SAAL,GAAiB,SAAjB;AACA,UAAK,WAAL,GAAmB,WAAnB;AACA,UAAK,SAAL,GAAiB,SAAjB;AACA,UAAK,CAAL,GAAS,CAAT;AACA,UAAK,CAAL,GAAS,CAAT;;AAEA,UAAK,IAAL,GAAY,KAAZ;AAXwB;AAYzB;;;;2BAEM,G,EAAK;AACV,UAAI,WAAJ,GAAkB,KAAK,WAAvB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;AACA,UAAI,SAAJ;AACA,UAAI,IAAJ,CACE,CAAC,KAAK,KAAN,GAAc,KAAK,MADrB,EAEE,CAAC,KAAK,MAAN,GAAe,KAAK,MAFtB,EAGE,KAAK,KAHP,EAIE,KAAK,MAJP;AAMA,UAAG,KAAK,WAAL,KAAqB,MAAxB,EAAgC,IAAI,MAAJ;AAChC,UAAG,KAAK,SAAL,KAAmB,MAAtB,EAA8B,IAAI,IAAJ;AAC9B,UAAG,KAAK,IAAL,IAAa,KAAK,IAAL,KAAc,IAA9B,EAAoC,IAAI,IAAJ;AACrC;;;;;;IAGU,gB,WAAA,gB;;;AACX,8BAG0B;AAAA,QAHd,KAGc,uEAHN,EAGM;AAAA,QAHF,MAGE,uEAHO,EAGP;AAAA,QAHW,MAGX,uEAHoB,EAGpB;AAAA,QAFd,SAEc,uEAFF,MAEE;AAAA,QAFM,WAEN,uEAFoB,MAEpB;AAAA,QADd,SACc,uEADF,CACE;AAAA,QAAd,CAAc,uEAAV,CAAU;AAAA,QAAP,CAAO,uEAAH,CAAG;;AAAA;;AAAA;;AAGxB,WAAK,KAAL,GAAa,KAAb;AACA,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,GAAS,CAAT;;AAEA,WAAK,IAAL,GAAY,KAAZ;AAZwB;AAazB;;;;2BAEM,G,EAAK;AACV,UAAI,WAAJ,GAAkB,KAAK,WAAvB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;AACA,UAAI,SAAJ;;AAEA,UAAI,IAAI,CAAC,KAAK,KAAN,GAAc,KAAK,MAA3B;AACA,UAAI,IAAI,CAAC,KAAK,MAAN,GAAe,KAAK,MAA5B;AACA,UAAI,QAAQ,KAAK,KAAjB;AACA,UAAI,SAAS,KAAK,MAAlB;AACA,UAAI,SAAS,KAAK,MAAlB;AACA,UAAI,GAAJ,CAAQ,IAAI,MAAZ,EAAoB,IAAI,MAAxB,EAAgC,MAAhC,EAAwC,KAAK,EAA7C,EAAiD,KAAK,EAAL,GAAU,CAAV,GAAc,CAA/D;AACA,UAAI,MAAJ,CAAW,QAAQ,MAAR,GAAiB,CAA5B,EAA+B,CAA/B;AACA,UAAI,GAAJ,CAAQ,QAAQ,MAAR,GAAiB,CAAzB,EAA4B,SAAS,CAArC,EAAwC,MAAxC,EAAgD,KAAK,EAAL,GAAU,CAAV,GAAc,CAA9D,EAAiE,KAAK,EAAL,GAAU,CAA3E;AACA,UAAI,MAAJ,CAAW,QAAQ,CAAnB,EAAsB,SAAS,CAAT,GAAa,MAAnC;AACA,UAAI,GAAJ,CAAQ,QAAQ,MAAR,GAAiB,CAAzB,EAA4B,SAAS,MAAT,GAAkB,CAA9C,EAAiD,MAAjD,EAAyD,CAAzD,EAA4D,KAAK,EAAL,GAAU,CAAV,GAAc,CAA1E;AACA,UAAI,MAAJ,CAAW,SAAS,CAApB,EAAuB,SAAQ,CAA/B;AACA,UAAI,GAAJ,CAAQ,SAAS,CAAjB,EAAoB,SAAS,MAAT,GAAkB,CAAtC,EAAyC,MAAzC,EAAiD,KAAK,EAAL,GAAU,CAAV,GAAc,CAA/D,EAAkE,KAAK,EAAvE;;AAEA,UAAG,KAAK,WAAL,KAAqB,MAAxB,EAAgC,IAAI,MAAJ;AAChC,UAAG,KAAK,SAAL,KAAmB,MAAtB,EAA8B,IAAI,IAAJ;AAC9B,UAAG,KAAK,IAAL,IAAa,KAAK,IAAL,KAAc,IAA9B,EAAoC,IAAI,IAAJ;AACrC;;;;;;AAGI,SAAS,SAAT,CAAmB,KAAnB,EAA0B,MAA1B,EACmB,SADnB,EAC8B,WAD9B,EAEmB,SAFnB,EAE8B,CAF9B,EAEiC,CAFjC,EAEoC;AACzC,MAAI,SAAS,IAAI,SAAJ,CAAc,KAAd,EAAqB,MAArB,EACc,SADd,EACyB,WADzB,EAEc,SAFd,EAEyB,CAFzB,EAE4B,CAF5B,CAAb;AAGA,eAAM,QAAN,CAAe,MAAf;AACA,SAAO,MAAP;AACD;;IAEY,M,WAAA,M;;;AACX,oBAG0B;AAAA,QAHd,QAGc,uEAHH,EAGG;AAAA,QAFd,SAEc,uEAFF,MAEE;AAAA,QAFM,WAEN,uEAFoB,MAEpB;AAAA,QADd,SACc,uEADF,CACE;AAAA,QAAd,CAAc,uEAAV,CAAU;AAAA,QAAP,CAAO,uEAAH,CAAG;;AAAA;;AAAA;;AAGxB,WAAK,QAAL,GAAgB,IAAhB;;AAEA,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,CAAL,GAAS,CAAT;AACA,WAAK,CAAL,GAAS,CAAT;;AAEA,WAAK,IAAL,GAAY,KAAZ;AAZwB;AAazB;;;;2BAEM,G,EAAK;AACV,UAAI,WAAJ,GAAkB,KAAK,WAAvB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;AACA,UAAI,SAAJ;AACA,UAAI,GAAJ,CACE,KAAK,MAAL,GAAe,CAAC,KAAK,QAAN,GAAiB,KAAK,MADvC,EAEE,KAAK,MAAL,GAAe,CAAC,KAAK,QAAN,GAAiB,KAAK,MAFvC,EAGE,KAAK,MAHP,EAIE,CAJF,EAIK,IAAI,KAAK,EAJd,EAKE,KALF;AAOA,UAAG,KAAK,WAAL,KAAqB,MAAxB,EAAgC,IAAI,MAAJ;AAChC,UAAG,KAAK,SAAL,KAAmB,MAAtB,EAA8B,IAAI,IAAJ;AAC9B,UAAG,KAAK,IAAL,IAAa,KAAK,IAAL,KAAc,IAA9B,EAAoC,IAAI,IAAJ;AACrC;;;;;;AAGI,SAAS,MAAT,CAAgB,QAAhB,EACgB,SADhB,EAC2B,WAD3B,EAEgB,SAFhB,EAGgB,CAHhB,EAGmB,CAHnB,EAGqB;AAC1B,MAAI,SAAS,IAAI,MAAJ,CAAW,QAAX,EACW,SADX,EACsB,WADtB,EAEW,SAFX,EAGW,CAHX,EAGc,CAHd,CAAb;AAIA,eAAM,QAAN,CAAe,MAAf;AACA,SAAO,MAAP;AACD;;IAEY,I,WAAA,I;;;AACX,kBAOE;AAAA,QANA,WAMA,uEANc,MAMd;AAAA,QALA,SAKA,uEALY,CAKZ;AAAA,QAJA,EAIA,uEAJK,CAIL;AAAA,QAHA,EAGA,uEAHK,CAGL;AAAA,QAFA,EAEA,uEAFK,EAEL;AAAA,QADA,EACA,uEADK,EACL;;AAAA;;AAAA;;AAGA,WAAK,WAAL,GAAmB,WAAnB;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA,WAAK,EAAL,GAAU,EAAV;AACA,WAAK,EAAL,GAAU,EAAV;AACA,WAAK,EAAL,GAAU,EAAV;AACA,WAAK,EAAL,GAAU,EAAV;;AAEA,WAAK,QAAL,GAAgB,OAAhB;AAVA;AAWD;;;;2BAEM,G,EAAK;AACV,UAAI,WAAJ,GAAkB,KAAK,WAAvB;AACA,UAAI,SAAJ,GAAgB,KAAK,SAArB;AACA,UAAI,QAAJ,GAAe,KAAK,QAApB;AACA,UAAI,SAAJ;AACA,UAAI,MAAJ,CAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB;AACA,UAAI,MAAJ,CAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB;AACA,UAAG,KAAK,WAAL,KAAqB,MAAxB,EAAgC,IAAI,MAAJ;AACjC;;;;;;AAGI,SAAS,IAAT,CAAc,WAAd,EAA2B,SAA3B,EACc,EADd,EACkB,EADlB,EAEc,EAFd,EAEkB,EAFlB,EAEsB;AAC3B,MAAI,SAAS,IAAI,IAAJ,CAAS,WAAT,EAAsB,SAAtB,EACS,EADT,EACa,EADb,EAES,EAFT,EAEa,EAFb,CAAb;AAGA,eAAM,QAAN,CAAe,MAAf;AACA,SAAO,MAAP;AACD;;;;;;;;;QC1Ee,W,GAAA,W;QAmPA,Q,GAAA,Q;;AA9VhB;;;;;;AAEO,IAAM,sBAAO;AACnB,YAAU,CAAC,CADQ;AAEnB,YAAU,CAAC,CAFQ;AAGnB,eAAa,CAAC,CAHK;AAInB,iBAAe,CAAC,CAJG;;AAMnB,eAAa,CANM;AAOnB,SAAO,CAPY;AAQnB,WAAS,EARU;AASnB,WAAS,EATU;AAUnB,UAAQ,EAVW;AAWnB,SAAO,EAXY;AAYnB,WAAS,EAZU;AAanB,aAAW,EAbQ;AAcnB,eAAa,EAdM;AAenB,SAAO,EAfY;AAgBnB,UAAQ,EAhBW;AAiBnB,gBAAc,EAjBK;AAkBnB,cAAY,EAlBO;AAmBnB,iBAAe,EAnBI;AAoBnB,gBAAc,EApBK;AAqBnB,YAAU,EArBS;AAsBnB,YAAU,EAtBS;AAuBnB,QAAM,EAvBa;AAwBnB,QAAM,EAxBa;AAyBnB,QAAM,EAzBa;AA0BnB,QAAM,EA1Ba;AA2BnB,QAAM,EA3Ba;AA4BnB,QAAM,EA5Ba;AA6BnB,QAAM,EA7Ba;AA8BnB,QAAM,EA9Ba;AA+BnB,QAAM,EA/Ba;AAgCnB,QAAM,EAhCa;AAiCnB,OAAK,EAjCc;AAkCnB,OAAK,EAlCc;AAmCnB,OAAK,EAnCc;AAoCnB,OAAK,EApCc;AAqCnB,OAAK,EArCc;AAsCnB,OAAK,EAtCc;AAuCnB,OAAK,EAvCc;AAwCnB,OAAK,EAxCc;AAyCnB,OAAK,EAzCc;AA0CnB,OAAK,EA1Cc;AA2CnB,OAAK,EA3Cc;AA4CnB,OAAK,EA5Cc;AA6CnB,OAAK,EA7Cc;AA8CnB,OAAK,EA9Cc;AA+CnB,OAAK,EA/Cc;AAgDnB,OAAK,EAhDc;AAiDnB,OAAK,EAjDc;AAkDnB,OAAK,EAlDc;AAmDnB,OAAK,EAnDc;AAoDnB,OAAK,EApDc;AAqDnB,OAAK,EArDc;AAsDnB,OAAK,EAtDc;AAuDnB,OAAK,EAvDc;AAwDnB,OAAK,EAxDc;AAyDnB,OAAK,EAzDc;AA0DnB,OAAK,EA1Dc;AA2DnB,cAAY,EA3DO;AA4DnB,cAAY,EA5DO;AA6DnB,cAAY,EA7DO;AA8DnB,cAAY,EA9DO;AA+DnB,cAAY,GA/DO;AAgEnB,cAAY,GAhEO;AAiEnB,cAAY,GAjEO;AAkEnB,cAAY,GAlEO;AAmEnB,cAAY,GAnEO;AAoEnB,cAAY,GApEO;AAqEnB,cAAY,GArEO;AAsEnB,SAAO,GAtEY;AAuEnB,eAAa,GAvEM;AAwEnB,aAAW,GAxEQ;AAyEnB,YAAU,GAzES;AA0EnB,QAAM,GA1Ea;AA2EnB,QAAM,GA3Ea;AA4EnB,QAAM,GA5Ea;AA6EnB,QAAM,GA7Ea;AA8EnB,QAAM,GA9Ea;AA+EnB,QAAM,GA/Ea;AAgFnB,QAAM,GAhFa;AAiFnB,QAAM,GAjFa;AAkFnB,QAAM,GAlFa;AAmFnB,SAAO,GAnFY;AAoFnB,SAAO,GApFY;AAqFnB,SAAO,GArFY;AAsFnB,WAAS,EAtFU;AAuFnB,UAAQ,EAvFW;AAwFnB,SAAO,EAxFY;AAyFnB,UAAQ,GAzFW;AA0FnB,WAAS,GA1FU;AA2FnB,WAAS,GA3FU;AA4FnB,YAAU;AA5FS,CAAb;;AA+FP,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACpB,MAAG;AACD,WAAO,IAAI,YAAJ,CAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAA0B,IAA1B,CAA+B,CAA/B,IAAoC,CAA3C;AACD,GAFD,CAEE,OAAM,CAAN,EAAS;AACT,UAAM,qBAAN;AACD;AACF;;AAEM,IAAI,4BAAU,SAAd;;AAEA,SAAS,WAAT,CAAqB,OAArB,EAAyC;AAAA,MAAX,KAAW,uEAAH,CAAG;;AAC9C,MAAG,OAAH,EAAY;AACV,YAAQ,KAAR,CAAc,8BAAd;AACA,WAAO,OAAP;AACD;AACD,MAAI,WAAW;AACb,aAAS,OADI;AAEb,WAAO,KAFM;AAGb,QAAI,CAHS;AAIb,QAAI,CAJS;AAKb,gBAAY,GALC;;AAOb,QAAI,CAAJ,GAAQ;AACN,aAAO,KAAK,EAAL,GAAU,KAAK,KAAtB;AACD,KATY;AAUb,QAAI,CAAJ,GAAQ;AACN,aAAO,KAAK,EAAL,GAAU,KAAK,KAAtB;AACD,KAZY;;AAcb,QAAI,OAAJ,GAAc;AACZ,aAAO,KAAK,CAAZ;AACD,KAhBY;AAiBb,QAAI,OAAJ,GAAc;AACZ,aAAO,KAAK,CAAZ;AACD,KAnBY;;AAqBb,QAAI,QAAJ,GAAe;AACb,aAAO;AACL,WAAG,KAAK,CADH;AAEL,WAAG,KAAK;AAFH,OAAP;AAID,KA1BY;;AA4Bb,YAAQ,KA5BK;AA6Bb,UAAM,IA7BO;AA8Bb,YAAQ,KA9BK;;AAgCb,cAAU,CAhCG;AAiCb,iBAAa,CAjCA;;AAmCb,WAAO,SAnCM;AAoCb,aAAS,SApCI;AAqCb,SAAK,SArCQ;;AAuCb,gBAAY,IAvCC;AAwCb,iBAAa,CAxCA;AAyCb,iBAAa,CAzCA;;AA2Cb,eA3Ca,uBA2CD,KA3CC,EA2CM;AACjB,UAAI,UAAU,MAAM,MAApB;AACA,WAAK,EAAL,GAAW,MAAM,KAAN,GAAc,QAAQ,UAAjC;AACA,WAAK,EAAL,GAAW,MAAM,KAAN,GAAc,QAAQ,SAAjC;AACA,YAAM,cAAN;AACD,KAhDY;AAkDb,oBAlDa,4BAkDI,KAlDJ,EAkDW;AACtB,UAAI,UAAU,MAAM,MAApB;AACA,WAAK,EAAL,GAAW,MAAM,aAAN,CAAoB,CAApB,EAAuB,KAAvB,GAA8B,QAAQ,UAAjD;AACA,WAAK,EAAL,GAAW,MAAM,aAAN,CAAoB,CAApB,EAAuB,KAAvB,GAA8B,QAAQ,SAAjD;AACA,YAAM,cAAN;AACD,KAvDY;AAyDb,eAzDa,uBAyDD,KAzDC,EAyDM;AACjB,WAAK,MAAL,GAAc,IAAd;AACA,WAAK,IAAL,GAAY,KAAZ;AACA,WAAK,MAAL,GAAc,KAAd;AACA,WAAK,QAAL,GAAgB,KAAK,GAAL,EAAhB;AACA,UAAG,KAAK,KAAR,EACE,KAAK,KAAL;AACF,YAAM,cAAN;AACD,KAjEY;AAmEb,qBAnEa,6BAmEK,KAnEL,EAmEY;AACvB,UAAI,UAAU,MAAM,MAApB;AACA,WAAK,EAAL,GAAU,MAAM,aAAN,CAAoB,CAApB,EAAuB,KAAvB,GAA+B,QAAQ,UAAjD;AACA,WAAK,EAAL,GAAU,MAAM,aAAN,CAAoB,CAApB,EAAuB,KAAvB,GAA+B,QAAQ,SAAjD;;AAEA,WAAK,MAAL,GAAc,IAAd;AACA,WAAK,IAAL,GAAY,KAAZ;AACA,WAAK,MAAL,GAAc,KAAd;AACA,WAAK,QAAL,GAAgB,KAAK,GAAL,EAAhB;AACA,UAAG,KAAK,KAAR,EAAe,KAAK,KAAL;AACf,YAAM,cAAN;AACD,KA9EY;AAgFb,aAhFa,qBAgFH,KAhFG,EAgFI;AACf,WAAK,WAAL,GAAmB,KAAK,GAAL,CAAS,KAAK,QAAL,GAAgB,KAAK,GAAL,EAAzB,CAAnB;AACA,UAAG,KAAK,WAAL,IAAoB,KAAK,UAAzB,IAAuC,KAAK,MAAL,KAAgB,KAA1D,EAAiE;AAC/D,aAAK,MAAL,GAAc,IAAd;AACA,YAAG,KAAK,GAAR,EAAa,KAAK,GAAL;AACd;AACD,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,MAAL,GAAc,KAAd;AACA,UAAG,KAAK,OAAR,EAAiB,KAAK,OAAL;AACjB,YAAM,cAAN;AACD,KA1FY;AA4Fb,mBA5Fa,2BA4FG,KA5FH,EA4FU;AACrB,WAAK,WAAL,GAAmB,KAAK,GAAL,CAAS,KAAK,QAAL,GAAgB,KAAK,GAAL,EAAzB,CAAnB;AACA,UAAG,KAAK,WAAL,IAAoB,KAAK,UAAzB,IAAuC,KAAK,MAAL,KAAgB,KAA1D,EAAiE;AAC/D,aAAK,MAAL,GAAc,IAAd;AACA,YAAG,KAAK,GAAR,EAAa,KAAK,GAAL;AACd;AACD,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,MAAL,GAAc,KAAd;AACA,UAAG,KAAK,OAAR,EAAiB,KAAK,OAAL;AACjB,YAAM,cAAN;AACD,KAtGY;;;AAwGb;AACA,sBAzGa,8BAyGM,MAzGN,EAyGc;AACzB,UAAI,MAAM,wBAAc,aAAd,CAA4B,GAAtC;AACA;AACA,UAAI,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAAC,KAAK,CAAnC,EAAsC,CAAC,KAAK,CAA5C;AACA;AACA,UAAI,SAAJ,CACE,OAAO,EAAP,GAAa,OAAO,KAAP,GAAe,OAAO,MADrC,EAEE,OAAO,EAAP,GAAa,OAAO,MAAP,GAAgB,OAAO,MAFtC;AAIA,UAAI,MAAJ,CAAW,OAAO,QAAlB;AACA,UAAI,KAAJ,CAAU,OAAO,MAAjB,EAAyB,OAAO,MAAhC;;AAEA,aAAO,MAAP,CAAc,GAAd;AACA,UAAI,MAAM,QAAQ,GAAR,CAAV;AACA,UAAI,YAAJ,CAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B;AACA,UAAI,SAAJ,CAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB;AACA;;AAEA;AACA,UAAG,GAAH,EAAQ,QAAQ,GAAR,CAAY,WAAZ;AACR,aAAO,GAAP;AACD,KA9HY;;;AAgIb;AACA,uBAjIa,+BAiIO,MAjIP,EAiIe;AAC1B,UAAI,MAAM,KAAV;AACA,UAAG,CAAC,OAAO,QAAX,EAAqB;AACnB,YAAI,SAAS,OAAO,OAApB;AACA,YAAI,YAAY,CAAC,OAAO,KAAP,IAAgB,CAAjB,IAAsB,OAAO,MAA7C;AACA,YAAI,aAAa,CAAC,OAAO,MAAP,IAAiB,CAAlB,IAAuB,OAAO,MAA/C;AACA,YAAI,OAAQ,OAAO,CAAP,GAAW,SAAvB;AAAA,YACI,QAAQ,OAAO,CAAP,GAAW,SADvB;AAAA,YAEI,MAAM,OAAO,CAAP,GAAW,UAFrB;AAAA,YAGI,SAAS,OAAO,CAAP,GAAW,UAHxB;;AAKA,cAAM,KAAK,CAAL,GAAS,IAAT,IAAiB,KAAK,CAAL,GAAS,KAA1B,IACD,KAAK,CAAL,GAAS,GADR,IACe,KAAK,CAAL,GAAS,MAD9B;AAED,OAXD,MAWO;AACL;AACA,YAAI,KAAK,KAAK,CAAL,IAAU,OAAO,EAAP,GAAY,OAAO,MAA7B,CAAT;AAAA,YACA,KAAK,KAAK,CAAL,IAAU,OAAO,EAAP,GAAY,OAAO,MAA7B,CADL;AAAA,YAEA,WAAW,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAFX;AAGA,cAAM,WAAW,OAAO,MAAxB;AACD;AACD;AACA,aAAO,GAAP;AACD,KAvJY;AAyJb,uBAzJa,+BAyJO,MAzJP,EAyJe;AAC1B,UAAI,MAAM,KAAV;AACA,UAAG,CAAC,OAAO,QAAX,EAAqB;AACnB,YAAI,OAAQ,OAAO,EAAnB;AAAA,YACI,QAAQ,OAAO,EAAP,GAAY,OAAO,KAD/B;AAAA,YAEI,MAAM,OAAO,EAFjB;AAAA,YAGI,SAAS,OAAO,EAAP,GAAY,OAAO,MAHhC;;AAKA,cAAM,KAAK,CAAL,GAAS,IAAT,IAAiB,KAAK,CAAL,GAAS,KAA1B,IACD,KAAK,CAAL,GAAS,GADR,IACe,KAAK,CAAL,GAAS,MAD9B;AAED,OARD,MAQO;AACL,YAAI,KAAK,KAAK,CAAL,IAAU,OAAO,EAAP,GAAY,OAAO,MAA7B,CAAT;AAAA,YACI,KAAK,KAAK,CAAL,IAAU,OAAO,EAAP,GAAY,OAAO,MAA7B,CADT;AAAA,YAEI,WAAW,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAFf;AAGA,cAAM,WAAW,OAAO,MAAxB;AACD;AACD,aAAO,GAAP;AACD,KA1KY;;;AA4Kb;AACA,iBA7Ka,yBA6KC,MA7KD,EA6KS;AACpB,UAAG,OAAO,QAAP,IAAmB,CAAtB,EAAyB;AACvB,eAAO,KAAK,kBAAL,CAAwB,MAAxB,CAAP;AACD,OAFD,MAEO,IAAG,OAAO,MAAP,IAAiB,CAAjB,IAAsB,OAAO,MAAP,IAAiB,CAA1C,EAA4C;AACjD,eAAO,KAAK,mBAAL,CAAyB,MAAzB,CAAP;AACD,OAFM,MAEA;AACL,eAAO,KAAK,mBAAL,CAAyB,MAAzB,CAAP;AACD;AACF,KArLY;AAuLb,qBAvLa,6BAuLK,gBAvLL,EAuLuB;AAAA;;AAClC,UAAG,KAAK,MAAR,EAAgB;AACd,YAAG,KAAK,UAAL,KAAoB,IAAvB,EAA6B;AAC3B,eAAI,IAAI,IAAI,iBAAiB,MAAjB,GAAyB,CAArC,EAAwC,IAAI,CAAC,CAA7C,EAAgD,EAAE,CAAlD,EAAqD;AACnD,gBAAI,SAAS,iBAAiB,CAAjB,CAAb;AACA,gBAAG,OAAO,SAAP,IAAoB,KAAK,aAAL,CAAmB,MAAnB,CAAvB,EAAkD;AAChD,mBAAK,WAAL,GAAmB,KAAK,CAAL,GAAS,OAAO,EAAnC;AACA,mBAAK,WAAL,GAAmB,KAAK,CAAL,GAAS,OAAO,EAAnC;AACA,mBAAK,UAAL,GAAkB,MAAlB;AACA,kBAAI,WAAW,OAAO,MAAP,CAAc,QAA7B;AACA,uBAAS,MAAT,CAAgB,SAAS,OAAT,CAAiB,MAAjB,CAAhB,EAA0C,CAA1C;AACA,uBAAS,IAAT,CAAc,MAAd;;AAEA,+BAAiB,MAAjB,CAAwB,iBAAiB,OAAjB,CAAyB,MAAzB,CAAxB,EAAyD,CAAzD;AACA,+BAAiB,IAAjB,CAAsB,MAAtB;;AAEA;AACD;AACF;AACF,SAjBD,MAiBO;AACL,eAAK,UAAL,CAAgB,CAAhB,GAAoB,KAAK,CAAL,GAAS,KAAK,WAAlC;AACA,eAAK,UAAL,CAAgB,CAAhB,GAAoB,KAAK,CAAL,GAAS,KAAK,WAAlC;AACD;AACF;;AAED,UAAG,KAAK,IAAR,EACE,KAAK,UAAL,GAAkB,IAAlB;;AAEF,uBAAiB,IAAjB,CAAsB,kBAAS;AAC7B,YAAG,OAAO,SAAP,IAAoB,MAAK,aAAL,CAAmB,MAAnB,CAAvB,EAAmD;AACjD,gBAAK,OAAL,CAAa,KAAb,CAAmB,MAAnB,GAA4B,SAA5B;AACA,iBAAO,IAAP;AACD,SAHD,MAGO;AACL,gBAAK,OAAL,CAAa,KAAb,CAAmB,MAAnB,GAA4B,MAA5B;AACA,iBAAO,KAAP;AACD;AACF,OARD;AASD;AA5NY,GAAf;;AA+NA,UAAQ,gBAAR,CAAyB,WAAzB,EAAsC,SAAS,WAAT,CAAqB,IAArB,CAA0B,QAA1B,CAAtC,EAA2E,KAA3E;AACA,UAAQ,gBAAR,CAAyB,WAAzB,EAAsC,SAAS,WAAT,CAAqB,IAArB,CAA0B,QAA1B,CAAtC,EAA2E,KAA3E;AACA,SAAO,gBAAP,CAAwB,SAAxB,EAAmC,SAAS,SAAT,CAAmB,IAAnB,CAAwB,QAAxB,CAAnC,EAAsE,KAAtE;;AAEA,UAAQ,gBAAR,CAAyB,WAAzB,EAAsC,SAAS,gBAAT,CAA0B,IAA1B,CAA+B,QAA/B,CAAtC,EAAgF,KAAhF;AACA,UAAQ,gBAAR,CAAyB,YAAzB,EAAuC,SAAS,iBAAT,CAA2B,IAA3B,CAAgC,QAAhC,CAAvC,EAAkF,KAAlF;AACA,SAAO,gBAAP,CAAwB,UAAxB,EAAoC,SAAS,eAAT,CAAyB,IAAzB,CAA8B,QAA9B,CAApC,EAA6E,KAA7E;;AAEA;AACA,UAAQ,KAAR,CAAc,WAAd,GAA4B,MAA5B;;AAEA,UAjPS,OAiPT,aAAU,QAAV;AACA,SAAO,QAAP;AACD;;AAEM,SAAS,QAAT,CAAkB,OAAlB,EAA2B;AAChC,MAAI,MAAM,EAAV;AACA,MAAI,IAAJ,GAAW,OAAX;AACA,MAAI,MAAJ,GAAa,KAAb;AACA,MAAI,IAAJ,GAAW,IAAX;AACA,MAAI,KAAJ,GAAY,SAAZ;AACA,MAAI,OAAJ,GAAc,SAAd;;AAEA,MAAI,WAAJ,GAAkB,UAAS,KAAT,EAAgB;AAChC,QAAG,MAAM,OAAN,KAAkB,IAAI,IAAzB,EAA8B;AAC5B,UAAG,IAAI,IAAJ,IAAY,IAAI,KAAnB,EAA0B,IAAI,KAAJ;AAC1B,UAAI,MAAJ,GAAa,IAAb;AACA,UAAI,IAAJ,GAAW,KAAX;AACD;AACD,UAAM,cAAN;AACD,GAPD;;AASA,MAAI,SAAJ,GAAgB,UAAS,KAAT,EAAgB;AAC9B,QAAG,MAAM,OAAN,KAAkB,IAAI,IAAzB,EAA8B;AAC5B,UAAG,IAAI,MAAJ,IAAc,IAAI,OAArB,EAA8B,IAAI,OAAJ;AAC9B,UAAI,MAAJ,GAAa,KAAb;AACA,UAAI,IAAJ,GAAW,IAAX;AACD;AACD,UAAM,cAAN;AACD,GAPD;;AASA,SAAO,gBAAP,CAAwB,SAAxB,EAAmC,IAAI,WAAJ,CAAgB,IAAhB,CAAqB,GAArB,CAAnC,EAA8D,KAA9D;AACA,SAAO,gBAAP,CAAwB,OAAxB,EAAiC,IAAI,SAAJ,CAAc,IAAd,CAAmB,GAAnB,CAAjC,EAA0D,KAA1D;;AAEA,SAAO,GAAP;AACD;;;;;;;;;QCpXe,iB,GAAA,iB;;AARhB;;;;AACA;;AACA;;AACA;;;;AAEO,IAAI,8CAAmB,EAAvB;AACA,IAAI,4BAAU,EAAd;;AAEA,SAAS,iBAAT,GAA6B;AAClC,MAAI,SAAS,mBAAS,MAAtB;AACA,MAAI,aAAa,IAAjB;AAAA,MACE,cAAc,CADhB;AAAA,MAEE,cAAc,CAFhB;;AAIA,MAAI,eAAQ,MAAZ,EAAoB;AAClB,QAAI,eAAe,IAAnB,EAAyB;AACvB,WAAK,IAAI,IAAI,iBAAiB,MAAjB,GAA0B,CAAvC,EAA0C,IAAI,CAAC,CAA/C,EAAkD,GAAlD,EAAuD;AACrD,YAAI,SAAS,iBAAiB,CAAjB,CAAb;AACA,YAAI,eAAQ,aAAR,CAAsB,MAAtB,KAAiC,OAAO,SAA5C,EAAuD;AACrD,wBAAc,eAAQ,CAAR,GAAY,OAAO,EAAjC;AACA,wBAAc,eAAQ,CAAR,GAAY,OAAO,EAAjC;AACA,uBAAa,MAAb;AACA,cAAI,WAAW,OAAO,MAAP,CAAc,QAA7B;AACA,mBAAS,MAAT,CAAgB,SAAS,OAAT,CAAiB,MAAjB,CAAhB,EAA0C,CAA1C;AACA,mBAAS,IAAT,CAAc,MAAd;AACA;AACD;AACF;AACF,KAbD,MAaO;AACL,iBAAW,CAAX,GAAe,eAAQ,CAAR,GAAY,WAA3B;AACA,iBAAW,CAAX,GAAe,eAAQ,CAAR,GAAY,WAA3B;AACD;AACF;;AAED,MAAI,eAAQ,IAAZ,EAAkB;AAChB,iBAAa,IAAb;AACD;;AAED,mBAAiB,IAAjB,CAAsB,kBAAU;AAC9B,QAAI,eAAQ,aAAR,CAAsB,MAAtB,KAAiC,OAAO,SAA5C,EAAuD;AACrD,aAAO,KAAP,CAAa,MAAb,GAAsB,SAAtB;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAP,CAAa,MAAb,GAAsB,MAAtB;AACA,aAAO,KAAP;AACD;AACF,GARD;AASD;;AAED,SAAS,eAAT,CAAyB,CAAzB,EAA4B;AAC1B,IAAE,KAAF,GAAU,EAAE,KAAF,IAAW,SAArB;AACA,IAAE,OAAF,GAAY,EAAE,OAAF,IAAa,SAAzB;AACA,IAAE,IAAF,GAAS,EAAE,IAAF,IAAU,SAAnB;AACA,IAAE,GAAF,GAAQ,EAAE,GAAF,IAAS,SAAjB;AACA,IAAE,GAAF,GAAQ,EAAE,GAAF,IAAS,SAAjB;;AAEA,IAAE,KAAF,GAAU,IAAV;AACA,IAAE,MAAF,GAAW,EAAX;AACA,IAAE,OAAF,GAAY,KAAZ;AACA,IAAE,SAAF,GAAc,KAAd;;AAEE;AACF,MAAG,EAAE,MAAL,EACE,EAAE,SAAF,GAAc,EAAE,MAAhB;;AAEF,IAAE,MAAF,GAAW,UAAC,EAAD,EAAQ;AACjB;AACA,QAAG,EAAE,SAAL,EACE,EAAE,SAAF,CAAY,EAAZ;;AAEF,QAAI,SAAS,mBAAS,MAAtB;AACA;AACA,QAAI,EAAE,OAAF,IAAa,KAAjB,EAAwB;AACxB,QAAI,MAAM,eAAQ,aAAR,CAAsB,CAAtB,CAAV;;AAEA,QAAI,eAAQ,IAAZ,EAAkB;AAChB,QAAE,KAAF,GAAU,IAAV;AACA,UAAI,2BAAJ,EAAyB,EAAE,WAAF,CAAc,CAAd;AAC1B;;AAED,QAAI,GAAJ,EAAS;AACP,QAAE,KAAF,GAAU,MAAV;AACA,UAAI,EAAE,MAAF,IAAY,EAAE,MAAF,CAAS,MAAT,KAAoB,CAAhC,IAAqC,2BAAzC,EAA8D;AAC5D,UAAE,WAAF,CAAc,CAAd;AACD;;AAED,UAAI,eAAQ,MAAZ,EAAoB;AAClB,UAAE,KAAF,GAAU,MAAV;AACA,YAAI,2BAAJ,EAAyB;AACvB,cAAI,EAAE,MAAF,CAAS,MAAT,KAAoB,CAAxB,EAA2B;AACzB,cAAE,WAAF,CAAc,CAAd;AACD,WAFD,MAEO;AACL,cAAE,WAAF,CAAc,CAAd;AACD;AACF;AACF;AACF;;AAED,QAAI,EAAE,KAAF,KAAY,MAAhB,EAAwB;AACtB,UAAI,CAAC,EAAE,OAAP,EAAgB;AACd,YAAI,EAAE,KAAN,EAAa,EAAE,KAAF;AACb,UAAE,OAAF,GAAY,IAAZ;AACA,UAAE,MAAF,GAAW,SAAX;AACD;AACF;;AAED,QAAI,EAAE,KAAF,KAAY,MAAhB,EAAwB;AACtB,UAAI,EAAE,OAAN,EAAe;AACb,YAAI,EAAE,OAAN,EAAe,EAAE,OAAF;AACf,UAAE,OAAF,GAAY,KAAZ;AACA,UAAE,MAAF,GAAW,UAAX;AACA,YAAI,eAAQ,MAAR,IAAkB,EAAE,GAAxB,EAA6B,EAAE,GAAF;AAC9B;;AAED,UAAI,CAAC,EAAE,SAAP,EAAkB;AAChB,YAAI,EAAE,IAAN,EAAY,EAAE,IAAF;AACZ,UAAE,SAAF,GAAc,IAAd;AACD;AACF;;AAED,QAAI,EAAE,KAAF,KAAY,IAAhB,EAAsB;AACpB,UAAI,EAAE,OAAN,EAAe;AACb,YAAI,EAAE,OAAN,EAAe,EAAE,OAAF;AACf,UAAE,OAAF,GAAY,KAAZ;AACA,UAAE,MAAF,GAAW,UAAX;AACD;;AAED,UAAI,EAAE,SAAN,EAAiB;AACf,YAAI,EAAE,GAAN,EAAW,EAAE,GAAF;AACX,UAAE,SAAF,GAAc,KAAd;AACD;AACF;;AAED;AACA,QAAI,EAAE,KAAF,KAAY,MAAZ,IAAsB,EAAE,KAAF,KAAY,MAAtC,EAA8C;AAC1C,yBAAS,MAAT,CAAgB,KAAhB,CAAsB,MAAtB,GAA+B,SAA/B;AACH;AAEF,GAzED;AA0ED;;AAED,OAAO,gBAAP,CAAwB,wBAAc,SAAtC,EAAiD;AAC/C,eAAa;AACX,OADW,iBACL;AACJ,aAAO,KAAK,YAAZ;AACD,KAHU;AAIX,OAJW,eAIP,KAJO,EAIA;AACT,UAAI,UAAU,IAAd,EAAoB;AAClB,wBAAgB,IAAhB;AACA;AACA,aAAK,YAAL,GAAoB,IAApB;AACD;AACD,UAAI,UAAU,KAAd,EAAqB;AACnB;AACA,aAAK,YAAL,GAAoB,KAApB;AACD;AACF,KAdU;;AAeX,gBAAY,IAfD;AAgBX,kBAAc;AAhBH,GADkC;AAmB/C,aAAW;AACT,OADS,iBACH;AACJ,aAAO,KAAK,UAAZ;AACD,KAHQ;AAIT,OAJS,eAIL,KAJK,EAIE;AACT,UAAI,UAAU,IAAd,EAAoB;AAClB,yBAAiB,IAAjB,CAAsB,IAAtB;AACA,aAAK,UAAL,GAAkB,IAAlB;AACD;AACD,UAAI,UAAU,KAAd,EAAqB;AACnB,yBAAiB,MAAjB,CAAwB,iBAAiB,OAAjB,CAAyB,IAAzB,CAAxB,EAAwD,CAAxD;AACD;AACF,KAZQ;;AAaT,gBAAY,IAbH;AAcT,kBAAc;AAdL;AAnBoC,CAAjD;;;;;;;;QC3IgB,U,GAAA,U;QAoBA,a,GAAA,a;QA8BA,O,GAAA,O;QA0CA,Q,GAAA,Q;QAMA,U,GAAA,U;QAWA,c,GAAA,c;QAWA,K,GAAA,K;QAOA,Y,GAAA,Y;QAUA,W,GAAA,W;QAOA,S,GAAA,S;QAIA,W,GAAA,W;;AAtJhB;;;;;;AAEO,SAAS,UAAT,CAAoB,KAApB,EACa,MADb,EAKwC;AAAA,MAH3B,IAG2B,uEAHpB,IAGoB;AAAA,MAD3B,MAC2B,uEADlB,EACkB;AAAA,MAA3B,eAA2B,uEAAT,OAAS;;;AAE7C,MAAI,SAAS,MAAM,QAAN,CAAb;AACA,SAAO,KAAP,GAAe,KAAf;AACA,SAAO,MAAP,GAAgB,MAAhB;AACA,SAAO,KAAP,CAAa,MAAb,GAAsB,MAAtB;AACA,SAAO,KAAP,CAAa,eAAb,GAA+B,eAA/B;AACA;;AAEA,SAAO,GAAP,GAAa,OAAO,UAAP,CAAkB,IAAlB,CAAb;;AAEA,SAAO,MAAP;AACD;;AAGM,SAAS,aAAT,CAAuB,MAAvB,EAA+B,MAA/B,EAAyD;AAAA,MAAlB,KAAkB,uEAAV,SAAU;;;AAE9D,MAAI,IAAI,OAAO,CAAf;AAAA,MACI,IAAI,OAAO,CADf;AAAA,MAEI,QAAQ,OAAO,KAFnB;AAAA,MAGI,SAAS,OAAO,MAHpB;;AAKA,MAAI,kBAAJ;;AAEA,MAAI,OAAO,CAAP,GAAW,IAAI,OAAO,KAA1B,EAAiC;AAC/B,gBAAY,MAAZ;AACD;AACD;AACA,MAAI,OAAO,CAAP,GAAW,IAAI,OAAO,MAA1B,EAAkC;AAChC,gBAAY,KAAZ;AACD;AACD;AACA,MAAI,OAAO,CAAP,GAAW,KAAf,EAAsB;AACpB,gBAAY,OAAZ;AACD;AACD;AACA,MAAI,OAAO,CAAP,GAAW,MAAf,EAAuB;AACrB,gBAAY,QAAZ;AACD;;AAED,MAAI,aAAa,KAAjB,EAAwB,MAAM,SAAN;;AAExB,SAAO,SAAP;AACD;;AAEM,SAAS,OAAT,CAAiB,MAAjB,EAAyB,MAAzB,EAAoE;AAAA,MAAnC,MAAmC,uEAA1B,KAA0B;AAAA,MAAnB,KAAmB,uEAAX,SAAW;;AACzE,MAAI,IAAI,OAAO,CAAf;AAAA,MACE,IAAI,OAAO,CADb;AAAA,MAEE,QAAQ,OAAO,KAFjB;AAAA,MAGE,SAAS,OAAO,MAHlB;;AAKA,MAAI,kBAAJ;;AAEA;AACA,MAAI,OAAO,CAAP,GAAW,CAAf,EAAkB;AAChB,QAAI,MAAJ,EAAY,OAAO,EAAP,IAAa,CAAC,CAAd;AACZ,QAAI,OAAO,IAAX,EAAiB,OAAO,EAAP,IAAa,OAAO,IAApB;AACjB,WAAO,CAAP,GAAW,CAAX;AACA,gBAAY,MAAZ;AACD;AACD;AACA,MAAI,OAAO,CAAP,GAAW,CAAf,EAAkB;AAChB,QAAI,MAAJ,EAAY,OAAO,EAAP,IAAa,CAAC,CAAd;AACZ,QAAI,OAAO,IAAX,EAAiB,OAAO,EAAP,IAAa,OAAO,IAApB;AACjB,WAAO,CAAP,GAAW,CAAX;AACA,gBAAY,KAAZ;AACD;AACD;AACA,MAAI,OAAO,CAAP,GAAW,OAAO,KAAlB,GAA0B,KAA9B,EAAqC;AACnC,QAAI,MAAJ,EAAY,OAAO,EAAP,IAAa,CAAC,CAAd;AACZ,QAAI,OAAO,IAAX,EAAiB,OAAO,EAAP,IAAa,OAAO,IAApB;AACjB,WAAO,CAAP,GAAW,QAAQ,OAAO,KAA1B;AACA,gBAAY,OAAZ;AACD;AACD;AACA,MAAI,OAAO,CAAP,GAAW,OAAO,MAAlB,GAA2B,MAA/B,EAAuC;AACrC,QAAI,MAAJ,EAAY,OAAO,EAAP,IAAa,CAAC,CAAd;AACZ,QAAI,OAAO,IAAX,EAAiB,OAAO,EAAP,IAAa,OAAO,IAApB;AACjB,WAAO,CAAP,GAAW,SAAS,OAAO,MAA3B;AACA,gBAAY,QAAZ;AACD;;AAED,MAAI,aAAa,KAAjB,EAAwB,MAAM,SAAN;;AAExB,SAAO,SAAP;AACD;;AAEM,SAAS,QAAT,CAAkB,EAAlB,EAAsB,EAAtB,EAA0B;AAC/B,MAAI,KAAK,GAAG,OAAH,GAAa,GAAG,OAAzB;AACA,MAAI,KAAK,GAAG,OAAH,GAAa,GAAG,OAAzB;AACA,SAAO,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAAP;AACD;;AAEM,SAAS,UAAT,CAAoB,QAApB,EAA8B,MAA9B,EAAsC,KAAtC,EAA6C;AAClD,MAAI,KAAK,OAAO,OAAP,GAAiB,SAAS,OAAnC;AACA,MAAI,KAAK,OAAO,OAAP,GAAiB,SAAS,OAAnC;AACA,MAAI,WAAW,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAAf;;AAEA,MAAI,YAAY,CAAhB,EAAmB;AACjB,aAAS,CAAT,IAAc,KAAK,KAAnB;AACA,aAAS,CAAT,IAAc,KAAK,KAAnB;AACD;AACF;;AAEM,SAAS,cAAT,CAAwB,QAAxB,EAAkC,MAAlC,EAA0C,KAA1C,EAAiD;AACtD,MAAI,KAAK,OAAO,OAAP,GAAiB,SAAS,OAAnC;AACA,MAAI,KAAK,OAAO,OAAP,GAAiB,SAAS,OAAnC;AACA,MAAI,WAAW,KAAK,IAAL,CAAU,KAAK,EAAL,GAAU,KAAK,EAAzB,CAAf;;AAEA,MAAI,YAAY,KAAhB,EAAuB;AACrB,aAAS,CAAT,IAAe,KAAK,QAAN,GAAkB,KAAhC;AACA,aAAS,CAAT,IAAe,KAAK,QAAN,GAAkB,KAAhC;AACD;AACF;;AAEM,SAAS,KAAT,CAAe,EAAf,EAAmB,EAAnB,EAAuB;AAC5B,SAAO,KAAK,KAAL,CACL,GAAG,OAAH,GAAa,GAAG,OADX,EAEL,GAAG,OAAH,GAAa,GAAG,OAFX,CAAP;AAID;;AAEM,SAAS,YAAT,CAAsB,cAAtB,EAAsC,YAAtC,EAAoD,QAApD,EAA8D,KAA9D,EAAqE;AAC1E,iBAAe,CAAf,GAAmB,aAAa,OAAb,GAAuB,eAAe,MAAf,CAAsB,CAA7C,GAChB,WAAW,KAAK,GAAL,CAAS,KAAT,CADK,GAEjB,eAAe,SAFjB;;AAIA,iBAAe,CAAf,GAAmB,aAAa,OAAb,GAAuB,eAAe,MAAf,CAAsB,CAA7C,GAChB,WAAW,KAAK,GAAL,CAAS,KAAT,CADK,GAEjB,eAAe,UAFjB;AAGD;;AAEM,SAAS,WAAT,CAAqB,MAArB,EAA6B,MAA7B,EAAqC,SAArC,EAAgD,SAAhD,EAA2D,KAA3D,EAAkE;AACvE,MAAI,QAAQ,EAAZ;AACA,QAAM,CAAN,GAAU,SAAS,KAAK,GAAL,CAAS,KAAT,IAAkB,SAArC;AACA,QAAM,CAAN,GAAU,SAAS,KAAK,GAAL,CAAS,KAAT,IAAkB,SAArC;AACA,SAAO,KAAP;AACD;;AAEM,SAAS,SAAT,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B;AAClC,SAAO,KAAK,KAAL,CAAW,KAAK,MAAL,MAAiB,MAAM,GAAN,GAAY,CAA7B,CAAX,IAA8C,GAArD;AACD;;AAEM,SAAS,WAAT,CAAqB,GAArB,EAA0B,GAA1B,EAA+B;AACpC,SAAQ,KAAK,MAAL,MAAiB,MAAM,GAAvB,CAAD,GAAgC,GAAvC;AACD;;;;;ACtJD;;;;;;AAEA,iC,CAJA;AACA;;;;;;;;;;;kBCEwB,I;;AAHxB;;;;AACA;;;;AACA;;;;;;;;;;AACe,SAAS,IAAT,GAAgB,CAE9B;AACD,IAAI,SAAS,OAAO,MAAP,IAAiB,EAA9B;AACA,IAAI,SAAS,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CAAb,C,CAA+B;AAC/B,IAAI,SAAS,CAAb,C,CAAe;;AAEf,IAAI,SAAS,CAAb,C,CAAe;AACf,IAAI,SAAS,EAAb;;AAEA,IAAI,QAAQ,EAAZ,C,CAAgB;AAChB,IAAI,MAAM,EAAV,C,CAAc;AACd;AACA,IAAI,OAAO,EAAX,C,CAAc;AACd,IAAI,SAAS,OAAO,KAApB,C,CAA0B;;AAE1B,IAAI,kBAAJ;AACA,IAAG,UAAU,SAAV,CAAoB,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,EAAkC,WAAlC,GAAgD,OAAhD,CAAwD,WAAxD,KAAsE,IAAtE,GAA2E,KAA3E,GAAiF,IAApF,EAAyF;AACvF,cAAY,mBAAZ;AACD,CAFD,MAGI;AACF,cAAY,mBAAZ;AACD;;AAED,IAAI,IAAI,mBAAS,GAAT,EAAa,EAAb,EAAgB,IAAhB,EAAqB,CAAC,SAAD,EAAW,gBAAX,EAA4B,gBAA5B,CAArB,CAAR;;IAEM,M;;;AACJ,oBAAc;AAAA;;AAAA;;AAEZ,UAAK,KAAL,GAAa,SAAb;AACA,UAAK,OAAL,GAAe,SAAf;AACA,UAAK,OAAL,GAAe,SAAf;AACA,UAAK,OAAL,GAAe,EAAf;;AAEA;AACA,UAAK,EAAL,GAAU,IAAI,EAAE,MAAN,CAAa,EAAE,MAAF,CAAS,gBAAT,CAAb,CAAV;AACA,UAAK,GAAL,GAAW,IAAI,EAAE,MAAN,CAAa,EAAE,MAAF,CAAS,gBAAT,CAAb,CAAX;AACA,UAAK,GAAL,CAAS,CAAT,GAAa,EAAb;AACA,UAAK,GAAL,CAAS,CAAT,GAAa,CAAC,EAAd;AACA,UAAK,IAAL,GAAY,IAAI,EAAE,MAAN,CAAa,EAAE,MAAF,CAAS,gBAAT,CAAb,CAAZ;AACA,UAAK,IAAL,CAAU,CAAV,GAAc,EAAd;AACA,UAAK,IAAL,CAAU,CAAV,GAAc,EAAd;;AAEA;AACA,SAAI,IAAI,IAAE,CAAV,EAAY,IAAE,KAAd,EAAoB,GAApB,EAAwB;AACtB,UAAI,aAAJ;AACA,UAAI,KAAK,CAAT,EAAY;AACV,eAAO,eAAS,MAAM,CAAf,EAAiB,aAAjB,EAA+B,OAA/B,CAAP;AACD,OAFD,MAGI;AACF,eAAO,eAAS,CAAT,EAAW,aAAX,EAAyB,OAAzB,CAAP;AACD;AACD,WAAI,KAAJ,GAAY,EAAZ;AACA,YAAK,OAAL,CAAa,CAAb,IAAkB,IAAlB;AACA,YAAK,QAAL,CAAc,IAAd;AACD;AACD,UAAK,GAAL,CAAS,MAAK,GAAd,EAAkB,MAAK,IAAvB;AACA,UAAK,QAAL,CAAc,MAAK,EAAnB;AACA,UAAK,IAAL;AA/BY;AAgCb;;AAED;;;;;2BACM;AACJ,WAAI,IAAI,IAAG,CAAX,EAAc,IAAE,KAAhB,EAAsB,EAAE,CAAxB,EAA0B;AACxB,aAAK,EAAL,CAAQ,SAAR,CAAkB,KAAK,OAAL,CAAa,CAAb,CAAlB;AACA,aAAK,OAAL,CAAa,CAAb,EAAgB,CAAhB,GAAoB,OAAO,CAA3B;AACA,YAAG,KAAK,OAAL,CAAa,CAAb,EAAgB,OAAhB,IAA2B,EAA9B,EAAiC;AAC/B,eAAK,OAAL,CAAa,CAAb,EAAgB,CAAhB,GAAoB,EAApB;AACD;AACF;AAEF;;AAED;;;;yBACK,K,EAAM,O,EAAQ,O,EAAQ;AACzB,WAAK,KAAL,GAAa,KAAb;AACA,WAAK,OAAL,GAAe,OAAf;AACA,WAAK,OAAL,GAAe,OAAf;AACD;;AAED;;;;6BACQ;AACN;AACA;AACA,UAAG,KAAK,KAAL,GAAa,CAAhB,EAAkB;AAChB,aAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,KAAnB,EAA0B,GAA1B,EAA8B;AAC5B,eAAK,OAAL,CAAa,CAAb,EAAgB,CAAhB,IAAqB,KAAK,KAA1B;AACA,cAAI,UAAU,EAAd;AACA,cAAG,KAAK,OAAL,CAAa,CAAb,EAAgB,CAAhB,IAAqB,OAAxB,EAAgC;AAC9B,iBAAK,OAAL,CAAa,CAAb,EAAgB,CAAhB,GAAoB,KAAK,OAAL,CAAa,CAAb,EAAgB,CAAhB,GAAoB,MAAxC;AACA,gBAAG,MAAM,KAAK,OAAd,EACE,KAAK,OAAL;AACH;AACF;AACD;AACA,YAAG,KAAK,OAAL,KAAiB,CAApB,EAAsB;AACpB,cAAI,YAAJ;AACA,cAAG,UAAU,SAAV,CAAoB,OAApB,CAA4B,QAA5B,KAAuC,CAAC,CAA3C,EAA6C;AAC3C,kBAAO,KAAM,KAAK,OAAL,CAAa,KAAK,OAAlB,EAA2B,CAAxC;AACD,WAFD,MAEM,IAAG,UAAU,SAAV,CAAoB,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,EAAkC,WAAlC,GAAgD,OAAhD,CAAwD,WAAxD,KAAsE,IAAtE,GAA2E,KAA3E,GAAiF,IAApF,EAA0F;AAC9F,kBAAO,KAAM,KAAK,OAAL,CAAa,KAAK,OAAlB,EAA2B,CAAxC;AACD,WAFK,MAGF;AACF,kBAAO,KAAM,KAAK,OAAL,CAAa,KAAK,OAAlB,EAA2B,CAAxC;AACD;AACD,cAAG,MAAM,KAAK,KAAd,EAAoB;AAClB,iBAAI,IAAI,KAAI,CAAZ,EAAe,KAAI,KAAnB,EAA0B,IAA1B,EAA+B;AAC7B,mBAAK,OAAL,CAAa,EAAb,EAAgB,CAAhB,IAAqB,GAArB;AACD;AACD,iBAAK,KAAL,GAAa,CAAb;AACD;AACF;AACF;AACF;;;;;;AAKH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,EAAT,CAAY,MAAZ,EAAmB;AACjB,MAAG,UAAU,SAAb,EAAuB;AACrB,SAAK,GAAL,GAAW,CAAX;AACD,GAFD,MAGI;AACF,SAAK,GAAL,GAAW,MAAX;AACD;AACD,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAG,MAAlB,EAAyB,EAAE,CAA3B,EAA8B;AAC5B,WAAO,CAAP,EAAU,IAAV,CAAe,OAAO,CAAP,CAAf,EAAyB,MAAzB,EAAgC,KAAK,GAAL,CAAS,CAAT,CAAhC;AACD;AACF;;AAED,SAAS,IAAT,GAAgB;AACd;AACA,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAG,MAAlB,EAAyB,EAAE,CAA3B,EAA8B;AAC5B,WAAO,CAAP,IAAY,IAAI,MAAJ,EAAZ;AACA,MAAE,KAAF,CAAQ,QAAR,CAAiB,OAAO,CAAP,CAAjB;AACA,WAAO,CAAP,EAAU,CAAV,GAAc,IAAI,GAAlB;AACD;AACD;AACA;AACA,SAAO,KAAP,GAAe,EAAf;AACD;;AAED,EAAE,KAAF","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {buttons} from './DisplayObject.js';\r\nimport {Sprite} from './Sprite.js';\r\nimport {stage} from './Stage.js';\r\n\r\nexport class Button extends Sprite {\r\n  constructor(source, x = 0, y = 0) {\r\n    super(source, x, y);\r\n    this.interactive = true;\r\n  }\r\n}\r\n\r\nexport function button(source,x,y) {\r\n  let sprite = new Button(source,x,y);\r\n  stage.addChild(sprite);\r\n  return sprite;\r\n}\r\n\r\n","import {EventEmitter} from './EventEmitter.js';\r\nimport {makeCanvas} from './util.js';\r\n\r\nexport default class DisplayObject extends EventEmitter{\r\n  constructor() {\r\n    super();\r\n    //  position and size\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.lastX = 0;\r\n    this.lastY = 0;\r\n    this.width = 0;\r\n    this.height = 0;\r\n\r\n    // rotation alpha visible and scale properties\r\n    this.rotation = 0;\r\n    this.alpha = 1;\r\n    this.visible = true;\r\n    this.scaleX = 1;\r\n    this.scaleY = 1;\r\n\r\n    //  pivot let you set the sprite's axis of rotation\r\n    this.pivotX = 0.5;\r\n    this.pivotY = 0.5;\r\n\r\n    // // 物理相关\r\n    // this.vel = {x: 0, y: 0};\r\n    // this.maxVel = {x:100,y:100};\r\n    // this.accel = {x: 0, y: 0};\r\n    // this.friction = {x: 0, y: 0};\r\n    // this.gravityFactor = 1;\r\n\r\n    // 显示容器相关 \r\n    this._layer = 0;\r\n    this.children = [];\r\n    this.parent = undefined;\r\n\r\n    // image states and animation\r\n    this.frames = [];\r\n    this._currentFrame = 0;\r\n\r\n    // 拖动\r\n    this._draggable = undefined;\r\n\r\n    this._circular = false;\r\n\r\n    this._interactive = false;\r\n  }\r\n\r\n  get gx() {\r\n    if (this.parent)\r\n      return this.x + this.parent.gx;\r\n    else\r\n      return this.x;\r\n  }\r\n\r\n  get gy() {\r\n    if (this.parent)\r\n      return this.y + this.parent.gy;\r\n    else\r\n      return this.y;\r\n  }\r\n\r\n  get layer() {\r\n    return this._layer;\r\n  }\r\n  set layer(value) {\r\n    this._layer = value;\r\n    if (this.parent)\r\n      this.parent.children.sort((a, b) => a._layer - b._layer);\r\n  }\r\n\r\n  addChild(sprite) {\r\n    if (sprite.parent)\r\n      sprite.parent.removeChild(sprite);\r\n    sprite.parent = this;\r\n    this.children.push(sprite);\r\n  }\r\n\r\n  removeChild(sprite) {\r\n    if (this.hasChild(sprite)) {\r\n      this.children.splice(this.children.indexOf(sprite), 1);\r\n      sprite.parent = undefined;\r\n    } else\r\n      throw new Error(sprite + 'is not a child of' + this);\r\n  }\r\n\r\n  hasChild(sprite) {\r\n    return (this.children.indexOf(sprite) !== -1);\r\n  }\r\n\r\n  get halfWidth() {\r\n    return this.width >> 1;\r\n  }\r\n\r\n  get halfHeight() {\r\n    return this.height >> 1;\r\n  }\r\n\r\n  // TODO: 相对于 pivot 不是 0.5 的中心点\r\n  get centerX() {\r\n    return this.x + this.halfWidth;\r\n  }\r\n\r\n  get centerY() {\r\n    return this.y + this.halfHeight;\r\n  }\r\n  get center() {\r\n    return {\r\n      x: this.centerX,\r\n      y: this.centerY\r\n    };\r\n  }\r\n\r\n  get gCenter() {\r\n    if (this.parent)\r\n      return {x:this.centerX + this.parent.gx,\r\n              y:this.centerY + this.parent.gy};\r\n    else\r\n      return this.center;\r\n\r\n  }\r\n\r\n  get position() {\r\n    return {\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n  }\r\n\r\n  set postion(pos) {\r\n    this.x = pos.x;\r\n    this.y = pos.y;\r\n  }\r\n\r\n  setPosition(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  get scale() {\r\n    return {x:this.scaleX,\r\n            y:this.scaleY};\r\n  }\r\n  set scale(scale) {\r\n    if(scale instanceof Object) {\r\n    } else {\r\n      this.scaleX = this.scaleY = scale;\r\n    }\r\n  }\r\n\r\n  get localBounds() {\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      width: this.width,\r\n      height: this.height\r\n    };\r\n  }\r\n\r\n  get globalBounds() {\r\n    return {\r\n      x: this.gx,\r\n      y: this.gy,\r\n      width: this.gx + this.width,\r\n      height: this.gy + this.height\r\n    };\r\n  }\r\n\r\n  get isEmpty() {\r\n    if (this.children.length === 0)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  putCenter(b, offsetX = 0, offsetY = 0) {\r\n    let a = this;\r\n    b.x = (a.x + a.halfWidth - b.halfWidth) + offsetX;\r\n    b.y = (a.y + a.halfHeight - b.halfHeight) + offsetY;\r\n  }\r\n\r\n  putTop(b, offsetX = 0, offsetY = 0) {\r\n    let a = this;\r\n    b.x = (a.x + a.halfWidth - b.halfWidth) + offsetX;\r\n    b.y = (a.y - b.height) + offsetY;\r\n  }\r\n\r\n  putRight(b, offsetX = 0, offsetY = 0) {\r\n    let a = this;\r\n    b.x = (a.x + a.width) + offsetX;\r\n    b.y = (a.y + a.halfHeight - b.halfHeight) + offsetY;\r\n  }\r\n\r\n  putBottom(b, offsetX = 0, offsetY = 0) {\r\n    let a = this;\r\n    b.x = (a.x + a.halfWidth - b.halfWidth) + offsetX;\r\n    b.y = (a.y + a.height) + offsetY;\r\n  }\r\n\r\n  putLeft(b, offsetX = 0, offsetY = 0) {\r\n    let a = this;\r\n    b.x = (a.x - b.width) + offsetX;\r\n    b.y = (a.y + a.halfHeight - b.halfHeight) + offsetY;\r\n  }\r\n\r\n  swapChildren(child1, child2) {\r\n    let index1 = this.children.indexOf(child1);\r\n    let index2 = this.children.indexOf(child2);\r\n    if (index1 !== -1 && index2 !== -1) {\r\n      this.children[index1] = child2;\r\n      this.children[index2] = child1;\r\n    } else {\r\n      throw new Error(`Both objects must be a child of the caller ${this}`);\r\n    }\r\n  }\r\n\r\n  add(...sprites) {\r\n    sprites.forEach(sprite => this.addChild(sprite));\r\n  }\r\n\r\n  remove(...sprites) {\r\n    sprites.forEach(sprite => {\r\n      console.log('remove: ' + sprite.constructor.name);\r\n      this.removeChild(sprite);\r\n    });\r\n  }\r\n\r\n  get currentFrame() {\r\n    return this._currentFrame;\r\n  }\r\n\r\n  get circular() {\r\n    return this._circular;\r\n  }\r\n\r\n  set circular(value) {\r\n    if (value === true && this._circular === false) {\r\n      Object.defineProperties(this, {\r\n        diameter: {\r\n          get() {\r\n            return this.width;\r\n          },\r\n          set(value) {\r\n            this.width = this.height = value;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n        },\r\n        radius: {\r\n          get() {\r\n            return this.halfWidth;\r\n          },\r\n          set(vlaue) {\r\n            this.width = this.height = value << 1;\r\n          },\r\n          enumerable: true,\r\n          configurable: true\r\n        }\r\n      });\r\n      this._circular = true;\r\n    }\r\n\r\n    if (value === false && this._circular === true) {\r\n      delete this.diameter;\r\n      delete this.radius;\r\n      this._circular = false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nlet canvas =  makeCanvas();\r\nif(canvas && canvas.ctx) {\r\n  DisplayObject.hitTestCanvas = canvas;\r\n  canvas.width = canvas.height = 1;\r\n  // canvas.width = 512;\r\n  // canvas.height = 256;\r\n}\r\n\r\n// document.body.appendChild(canvas);\r\n","export class EventEmitter {\r\n  constructor() {\r\n    // console.info('EventEmitter  constructing');\r\n    this._listeners = {};\r\n  }\r\n\r\n  on(event, listener) {\r\n    if (typeof listener !== 'function')\r\n      throw \"Listener must be a function\";\r\n\r\n    this._listeners[event] = this._listeners[event] || [];\r\n    this._listeners[event].push(listener);\r\n  }\r\n\r\n  emit(event, data) {\r\n    let listener = this._listeners[event];\r\n    if (listener) {\r\n      for (var i = 0; i < listener.length; i++) {\r\n        listener[i].call(this, data);\r\n      }\r\n    }\r\n  }\r\n\r\n  hasListener(event, listenr) {\r\n    let listeners = this._listeners[event];\r\n    for (var i = 0; i < listeners.length; i++) {\r\n      if (!listenr || listenr == listeners[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removeListener(event, listener) {\r\n    if (typeof listener !== 'function')\r\n      throw \"Listener must be a function\";\r\n\r\n\r\n    let listeners = this._listeners[event];\r\n    let position = this._listeners[event].indexOf(listener);\r\n    if (position != -1)\r\n      this._listeners[event].splice(position, 1);\r\n  }\r\n\r\n  removeAllListeners(event) {\r\n    if(event){\r\n      this._listeners[event] = [];\r\n    } else {\r\n      this._listeners = {};\r\n    }\r\n  }\r\n}\r\n","import DisplayObject from './DisplayObject.js';\r\nimport {\r\n  stage\r\n} from './Stage.js';\r\n\r\nexport class Group extends DisplayObject {\r\n  constructor(...sprites) {\r\n    super();\r\n    sprites.forEach(sprite => this.addChild(sprite));\r\n  }\r\n\r\n  addChild(sprite) {\r\n    super.addChild(sprite);\r\n    Group.calculateSize(this);\r\n  }\r\n\r\n  removeChild(sprite) {\r\n    if (sprite.parent === this) {\r\n      this.children.splice(this.children.indexOf(sprite), 1);\r\n      Group.calculateSize(this);\r\n    } else {\r\n      throw new Error(`${sprite} is not a child of ${this}`);\r\n    }\r\n  }\r\n\r\n  static calculateSize(group) {\r\n    if (group.children.length > 0) {\r\n      let newWidth = 0;\r\n      let newHeight = 0;\r\n\r\n      group.children.forEach(child => {\r\n        if (child.x + child.width > newWidth)\r\n          newWidth = child.x + child.width;\r\n        if (child.y + child.height > newHeight)\r\n          newHeight = child.y + child.height;\r\n      });\r\n\r\n      group.width = newWidth;\r\n      group.height = newHeight;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function group(...sprites) {\r\n  let sprite = new Group(...sprites);\r\n  stage.addChild(sprite);\r\n  return sprite;\r\n}\r\n\r\nexport function grid(columns = 0, rows = 0, cellWidth = 32, cellHeight = 32,\r\n  centerCell = false, xOffset = 0, yOffset = 0,\r\n  makeSprite = undefined,\r\n  extra = undefined) {\r\n\r\n  let container = group();\r\n\r\n  let createGrid = () => {\r\n    let length = columns * rows;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      let x = (i % columns) * cellWidth;\r\n      let y = Math.floor(i / columns) * cellHeight;\r\n      let sprite = makeSprite();\r\n\r\n      if (!sprite)\r\n        console.warn('grid makeSprite return: ' + sprite);\r\n\r\n      container.addChild(sprite);\r\n\r\n      if (!centerCell) {\r\n        sprite.x = x + xOffset;\r\n        sprite.y = y + yOffset;\r\n      } else {\r\n        sprite.x = x + (cellWidth / 2) -\r\n          sprite.halfWidth + xOffset;\r\n        sprite.y = y + (cellHeight / 2) -\r\n          sprite.halfHeight + yOffset;\r\n      }\r\n\r\n      if (extra) extra(sprite);\r\n    }\r\n  };\r\n\r\n  createGrid();\r\n\r\n  return container;\r\n}\r\n","import common from './common.js';\r\nimport {makeCanvas} from './util.js';\r\n\r\nconst DEFAULT_RENDER_WIDTH = 640;\r\nconst DEFAULT_RENDER_HEIGHT = 480;\r\n\r\nexport let renderer = undefined;\r\n\r\nexport default class Renderer {\r\n  constructor(width = DEFAULT_RENDER_WIDTH, height = DEFAULT_RENDER_HEIGHT, stage = undefined) {\r\n    if(renderer) {\r\n      console.error('renderer already instantiated');\r\n      return renderer;\r\n    }\r\n    this.canvas = makeCanvas(width, height);\r\n    document.body.appendChild(this.canvas);\r\n    this.stage = stage;\r\n    renderer = this;\r\n    return renderer;\r\n  }\r\n\r\n  get backgroundColor() {\r\n    return this.canvas.style.backgroundColor;\r\n  }\r\n\r\n  set backgroundColor(color){\r\n    this.canvas.style.backgroundColor = color;\r\n  }\r\n\r\n  render() {\r\n    let canvas = this.canvas;\r\n    let ctx = canvas.ctx;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    if(this.stage){\r\n      this.stage.children.forEach(sprite => {\r\n        render.call(this, sprite);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction render(sprite) {\r\n  let canvas = this.canvas;\r\n  let ctx = canvas.ctx;\r\n  if (sprite.visible &&\r\n      sprite.gx < canvas.width + sprite.width &&\r\n      sprite.gx + sprite.width >= -sprite.width &&\r\n      sprite.gy < canvas.height + sprite.height &&\r\n      sprite.gy + sprite.height >= -sprite.height) {\r\n\r\n    ctx.save();\r\n\r\n    // // 变换\r\n    ctx.translate(\r\n      sprite.x + (sprite.width * sprite.pivotX),\r\n      sprite.y + (sprite.height * sprite.pivotY)\r\n      // sprite.x,\r\n      // sprite.y\r\n      // 0,0\r\n    );\r\n    ctx.rotate(sprite.rotation);\r\n    ctx.scale(sprite.scaleX, sprite.scaleY);\r\n    // ctx.setTransform(sprite.scaleX, 0, 0, sprite.scaleY, sprite.x, sprite.y);\r\n    // ctx.setTransform(1, 0, 0, 1, sprite.x, sprite.y);\r\n\r\n    // 效果\r\n    ctx.globalAlpha = sprite.alpha * sprite.parent.alpha;\r\n\r\n    // TODO: 其他效果 --- 阴影 混合模式\r\n\r\n    if (sprite.render) sprite.render(ctx);\r\n\r\n    if (sprite.children && sprite.children.length > 0) {\r\n      ctx.translate(-sprite.width * sprite.pivotX, -sprite.height * sprite.pivotY);\r\n      // ctx.translate(-sprite.pivotX, -sprite.pivotY);\r\n      // ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n      sprite.children.forEach(child => {\r\n        render.call(this, child);\r\n      });\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import DisplayObject from './DisplayObject.js';\r\nimport {\r\n  stage\r\n} from './Stage.js';\r\n\r\n// TODO: 用不同方式重新 create 时 删除不再使用的属性\r\nexport class Sprite extends DisplayObject {\r\n  constructor(source, x = 0, y = 0) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    if(!source)\r\n      console.error(`Error: Sprite's source: ${source}`);\r\n\r\n    if (source instanceof Image) {\r\n      this.createFromImage(source);\r\n    } else if (source.frame) {\r\n      this.createFromAtlas(source);\r\n    } else if (source.image && !source.data) {\r\n      this.createFromTileset(source);\r\n    } else if (source.image && source.data) {\r\n      this.createFromTilesetFrames(source);\r\n    } else if (source instanceof Array) {\r\n      if (source[0] && source[0].source) {\r\n        this.createFromAtlasFrames(source);\r\n      } else if (source[0] instanceof Image) {\r\n        this.createFromImages(source);\r\n      } else {\r\n        throw new Error(`The image sources in ${source} are not recognized`);\r\n      }\r\n    } else {\r\n      throw new Error(`The image source ${source} is not recognized`);\r\n    }\r\n  }\r\n\r\n  createFromImage(source) {\r\n    if (!(source instanceof Image)) {\r\n      throw new Error(`${source} is not an image object`);\r\n    } else {\r\n      this.source = source;\r\n      this.sourceX = 0;\r\n      this.sourceY = 0;\r\n      this.width = source.width;\r\n      this.height = source.height;\r\n      this.sourceWidth = source.width;\r\n      this.sourceHeight = source.height;\r\n    }\r\n  }\r\n\r\n  createFromAtlas(source) {\r\n    this.tilesetFrame = source;\r\n    this.source = this.tilesetFrame.source;\r\n    this.sourceX = this.tilesetFrame.frame.x;\r\n    this.sourceY = this.tilesetFrame.frame.y;\r\n    this.width = this.sourceWidth = this.tilesetFrame.frame.w;\r\n    this.height = this.sourceHeight = this.tilesetFrame.frame.h;\r\n  }\r\n\r\n  createFromTileset(source) {\r\n    if (!(source.image instanceof Image)) {\r\n      throw new Error(`${source.image} is not an image object`);\r\n    } else {\r\n      this.source = source.image;\r\n      this.sourceX = source.x;\r\n      this.sourceY = source.y;\r\n      this.width = source.width;\r\n      this.height = source.height;\r\n      this.sourceWidth = source.width;\r\n      this.sourceHeight = source.height;\r\n    }\r\n  }\r\n\r\n  createFromTilesetFrames(source) {\r\n    if (!(source.image instanceof Image)) {\r\n      throw new Error(`${source.image} is not an image object`);\r\n    } else {\r\n      this.source = source.image;\r\n      this.frames = source.data;\r\n\r\n      this.sourceX = this.frames[0][0];\r\n      this.sourceY = this.frames[0][1];\r\n      this.width = source.width;\r\n      this.height = source.height;\r\n      this.sourceWidth = source.width;\r\n      this.sourceHeight = source.height;\r\n    }\r\n  }\r\n\r\n  createFromAtlasFrames(source) {\r\n    this.frames = source;\r\n    this.source = source[0].source;\r\n    this.sourceX = source[0].frame.x;\r\n    this.sourceY = source[0].frame.y;\r\n    this.width = source[0].frame.w;\r\n    this.height = source[0].frame.h;\r\n    this.sourceWidth = source[0].frame.w;\r\n    this.sourceHeight = source[0].frame.h;\r\n  }\r\n\r\n  createFromImages(source) {\r\n    this.frames = source;\r\n    this.source = source[0];\r\n    this.sourceX = 0;\r\n    this.sourceY = 0;\r\n    this.width = source[0].width;\r\n    this.height = source[0].width;\r\n    this.sourceWidth = source[0].width;\r\n    this.sourceHeight = source[0].height;\r\n  }\r\n\r\n  gotoAndStop(frameNumber) {\r\n    if (this.frames.length > 0 && frameNumber < this.frames.length) {\r\n      if (this.frames[0] instanceof Array) {\r\n        this.sourceX = this.frames[frameNumber][0];\r\n        this.sourceY = this.frames[frameNumber][1];\r\n      } else if (this.frames[frameNumber].frame) {\r\n        this.sourceX = this.frames[frameNumber].frame.x;\r\n        this.sourceY = this.frames[frameNumber].frame.y;\r\n        this.sourceWidth = this.frames[frameNumber].frame.w;\r\n        this.sourceHeight = this.frames[frameNumber].frame.h;\r\n      } else {\r\n        this.source = this.frames[frameNumber];\r\n        this.sourceX = 0;\r\n        this.sourceY = 0;\r\n        this.sourceWidth = this.source.width;\r\n        this.sourceHeight = this.source.height;\r\n      }\r\n      this._currentFrame = frameNumber;\r\n    } else {\r\n      throw new Error(`Frame number ${frameNumber} does not exist`);\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.drawImage(\r\n      this.source,\r\n      this.sourceX, this.sourceY,\r\n      this.sourceWidth, this.sourceHeight,\r\n      -this.width * this.pivotX, -this.height * this.pivotY,\r\n      this.width, this.height\r\n    );\r\n  }\r\n\r\n  static frame(source, x, y, width, height) {\r\n    let o = {};\r\n    o.image = source;\r\n    o.x = x;\r\n    o.y = y;\r\n    o.width = width;\r\n    o.height = height;\r\n    return o;\r\n  }\r\n\r\n  static frames(source, arrayOfPositions, width, height) {\r\n    let o = {};\r\n    o.image = source;\r\n    o.data = arrayOfPositions;\r\n    o.width = width;\r\n    o.height = height;\r\n    return o;\r\n  }\r\n\r\n  static filmstrip(image, frameWidth, frameHeight, spacing = 0) {\r\n    if (!(image instanceof Image)) {\r\n      throw new Error(`${image} is not an image object`);\r\n    } else {\r\n      let positions = [];\r\n      let columns = image.width / frameWidth,\r\n        rows = image.height / frameHeight;\r\n      let numberOfFrames = columns * rows;\r\n\r\n      for (let i = 0; i < numberOfFrames; ++i) {\r\n        let ix = (i % columns);\r\n        let iy = Math.floor(i / columns);\r\n        let x = ix * frameWidth,\r\n          y = iy * frameHeight;\r\n\r\n        if (spacing && spacing > 0) {\r\n          x += spacing + (spacing * ix);\r\n          y += spacing + (spacing * iy);\r\n        }\r\n        positions.push([x, y]);\r\n      }\r\n      return Sprite.frames(image, positions, frameWidth, frameHeight);\r\n    }\r\n  }\r\n\r\n  static addStatePlayer(sprite) {\r\n    let frameCounter = 0,\r\n      numberOfFrames = 0,\r\n      startFrame = 0,\r\n      endFrame = 0,\r\n      timerInterval = undefined;\r\n\r\n    function show(frameNumber) {\r\n      reset();\r\n      sprite.gotoAndStop(frameNumber);\r\n    }\r\n\r\n    function play() {\r\n      if (!sprite.playing) {\r\n        playSequence([0, sprite.frames.length - 1]);\r\n      }\r\n    }\r\n\r\n    function stop() {\r\n      if (sprite.playing) {\r\n        reset();\r\n        sprite.gotAndStop(sprite.currentFrame);\r\n      }\r\n    }\r\n\r\n    function playSequence(sequenceArray) {\r\n      reset();\r\n      startFrame = sequenceArray[0];\r\n      endFrame = sequenceArray[1];\r\n      numberOfFrames = endFrame - startFrame;\r\n      if (startFrame === 0) {\r\n        numberOfFrames++;\r\n        frameCounter++;\r\n      }\r\n      if (numberOfFrames === 1) {\r\n        numberOfFrames = 2;\r\n        frameCounter++;\r\n      }\r\n\r\n      if (!sprite.fps) sprite.fps = 12;\r\n      let frameRate = 1000 / sprite.fps;\r\n      sprite.gotoAndStop(startFrame);\r\n\r\n      if (!sprite.playing) {\r\n        timerInterval = setInterval(advanceFrame.bind(this), frameRate);\r\n        sprite.playing = true;\r\n      }\r\n    }\r\n\r\n    function advanceFrame( ) {\r\n      if(frameCounter < numberOfFrames){\r\n        sprite.gotoAndStop(sprite.currentFrame+1);\r\n        frameCounter++;\r\n      } else {\r\n        if(sprite.loop){\r\n          sprite.gotoAndStop(startFrame);\r\n          frameCounter = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    function reset( ) {\r\n      if(timerInterval !== undefined && sprite.playing === true){\r\n        sprite.playing = false;\r\n        frameCounter =0;\r\n        startFrame = 0;\r\n        endFrame =0;\r\n        numberOfFrames =0;\r\n        clearInterval(timerInterval);\r\n      }\r\n    }\r\n\r\n    sprite.loop = true;\r\n    sprite.playing = false;\r\n\r\n    sprite.show = show;\r\n    sprite.play = play;\r\n    sprite.stop = stop;\r\n    sprite.playSequence = playSequence;\r\n  }\r\n\r\n}\r\n\r\nexport function sprite(source, x, y) {\r\n  let sprite = new Sprite(source, x, y);\r\n  if (sprite.frames.length > 0) Sprite.addStatePlayer(sprite);\r\n  stage.addChild(sprite);\r\n  return sprite;\r\n}\r\n","import DisplayObject from './DisplayObject.js';\r\n\r\n\r\n\r\nfunction update(dt) {\r\n  if (this.children && this.children.length > 0) {\r\n    this.children.forEach(sprite => {\r\n      if(sprite && sprite.update)\r\n        sprite.update(dt);\r\n      update.call(sprite, dt);\r\n    });\r\n  }\r\n}\r\n\r\nclass Stage extends DisplayObject {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  update(dt) {\r\n    update.call(this,dt);\r\n  }\r\n}\r\n\r\nexport let stage = new Stage();\r\n","import DisplayObject from './DisplayObject.js';\r\nimport {\r\n  stage\r\n} from './Stage.js';\r\n\r\n\r\nexport class Text extends DisplayObject {\r\n  constructor(content = 'Hello!',\r\n    font = '16px sans-serif', fillStyle = 'red',\r\n    x = 0, y = 0) {\r\n    super();\r\n\r\n    this.content = content;\r\n    this.font = font;\r\n    this.fillStyle = fillStyle;\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.textBaseline = 'top';\r\n    this.strokeText = 'none';\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.font = this.font;\r\n    ctx.strokeStyle = this.strokeStyle;\r\n    ctx.lineWidth = this.lineWidth;\r\n    ctx.fillStyle = this.fillStyle;\r\n\r\n    if (this.width === 0) this.width = ctx.measureText(this.content).width;\r\n    if (this.height === 0) this.height = ctx.measureText(\"M\").width;\r\n    ctx.translate(-this.width * this.pivotX, -this.height * this.pivotY);\r\n    ctx.textBaseline = this.textBaseline;\r\n    ctx.fillText(\r\n      this.content,\r\n      0, 0\r\n    );\r\n    if (this.strokeText !== \"none\") ctx.strokeText();\r\n  }\r\n}\r\n\r\nexport function text(content, font, fillStyle, x, y) {\r\n  let sprite = new Text(content, font, fillStyle, x, y);\r\n  stage.addChild(sprite);\r\n  return sprite;\r\n}\r\n\r\n","import * as assets from './assets.js';\r\nimport * as EventEmitter from './EventEmitter.js';\r\nimport * as DisplayObject from './DisplayObject.js';\r\nimport * as Sprite from './Sprite.js';\r\nimport * as Stage from './Stage.js';\r\nimport * as Group from './Group.js';\r\nimport * as graphical from './graphical.js';\r\nimport * as Text from './Text.js';\r\nimport * as Button from './Button.js';\r\nimport * as interactive from './interactive.js';\r\nimport * as input from './input.js';\r\nimport * as collision from './collision.js';\r\nimport * as util from './util.js';\r\n//import * as sound from './sound.js';\r\nimport Renderer from './Renderer.js';\r\n\r\nconst DEFAULT_WIDTH = 640;\r\nconst DEFAULT_HEIGHT = 480;\r\n\r\nconst DEFAULT_BACKGROUND_COLOR = '#2C3539';\r\ndocument.body.style.backgroundColor = DEFAULT_BACKGROUND_COLOR;\r\n\r\nexport default class Tina {\r\n  constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT,\r\n              setup, assetsToLoad, load) {\r\n    Object.assign = Object.assign || function(dest = {}, source) {\r\n        if (!source) return dest;\r\n        for (let prop in source) {\r\n          dest[prop] = source[prop];\r\n        }\r\n        return dest;\r\n      };\r\n    // 导入所有模块\r\n    Object.assign(this, assets);\r\n    Object.assign(this, EventEmitter);\r\n    Object.assign(this, DisplayObject);\r\n    Object.assign(this, Sprite);\r\n    Object.assign(this, Stage);\r\n    Object.assign(this, Group);\r\n    Object.assign(this, graphical);\r\n    Object.assign(this, Text);\r\n    Object.assign(this, Button);\r\n    Object.assign(this, interactive);\r\n    Object.assign(this, input);\r\n    Object.assign(this, collision);\r\n    Object.assign(this, util);\r\n    //Object.assign(this, sound);\r\n\r\n    this.renderer = new Renderer(width, height, this.stage);\r\n    this.stage.width = this.renderer.canvas.width;\r\n    this.stage.height = this.renderer.canvas.height;\r\n\r\n    this.pointer = this.makePointer(this.renderer.canvas);\r\n    this.scale = 1;\r\n\r\n    this.state = undefined;\r\n\r\n    this.load = load;\r\n    this.setup = setup;\r\n\r\n    this.assetsToLoad = assetsToLoad;\r\n\r\n    this.paused = false;\r\n\r\n    // for game loop\r\n    this._fps = 36;\r\n    this._mpf = 1000 / this._fps;\r\n    this._previousTime = 0;\r\n    this._elapsedTime = 0;\r\n    this._lagTime = 0;\r\n    this._lagOffset = 0;\r\n    this._correctTime = 1000;\r\n    this._shouldRepaint = true;\r\n    \r\n\r\n\r\n    if (!this.setup)\r\n      throw new Error('please supply the setup function in the constructor');\r\n  }\r\n\r\n  set fps(fps) {\r\n    this._fps = fps;\r\n    this._mpf = 1000 / fps;\r\n  }\r\n  get fps(){\r\n    return this._fps;\r\n  }\r\n\r\n  get mpf() {\r\n    return this._mpf;\r\n  }\r\n\r\n  gameLoop(dt) {\r\n    requestAnimationFrame(this.gameLoop.bind(this));\r\n    // if(this.paused)return;\r\n\r\n    this._elapsedTime = dt - this._previousTime;\r\n    this._previousTime = dt;\r\n    if(this._elapsedTime > this._correctTime)\r\n      this._elapsedTime = this._mpf;\r\n    this._lagTime += this._elapsedTime;\r\n    \r\n    while((this._lagTime >= this._mpf)) {\r\n      // console.log('update');\r\n      // Update all the buttons\r\n\r\n      // TODO: 单独的按钮更新频率,改变一组(两个)按钮状态后,不再i进行检测\r\n      // TODO: 放入到场景update里，不再在这里处理\r\n      this.renderer.canvas.style.cursor = \"auto\";\r\n      if (this.buttons.length > 0) {\r\n        this.buttons.forEach(button => {\r\n          button.update(this.pointer, this.renderer.canvas);\r\n          if (button.state === \"over\" || button.state === \"down\") {\r\n            if (button.parent !== undefined) {\r\n              this.renderer.canvas.style.cursor = \"pointer\";\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      // TODO: Update all the particles\r\n      // TODO: Update all the tweens\r\n\r\n      // TODO: 放入到场景update里，不再在这里处理\r\n      if (this.draggableSprites) {\r\n        this.pointer.updateDragAndDrop(this.draggableSprites);\r\n      }\r\n\r\n      // if (this.state && !this.paused) {\r\n      //   // this.state(dt);\r\n      // }\r\n      this.stage.update(dt);\r\n\r\n      // Update\r\n      // this.stage.update();\r\n\r\n\r\n      this._lagTime -= this._mpf;\r\n      // Render\r\n      this.renderer.render();\r\n    }\r\n    this._lagOffset = this._lagTime / this._mpf;\r\n  }\r\n\r\n  start() {\r\n    if (this.assetsToLoad) {\r\n      this.assets.load(this.assetsToLoad).then(() => {\r\n        this.state = undefined;\r\n        this.setup();\r\n      });\r\n\r\n      // 资源加载时执行\r\n      if (this.load) {\r\n        this.state = this.load;\r\n      }\r\n    } else {\r\n      this.setup();\r\n    }\r\n\r\n    this.gameLoop(0);\r\n  }\r\n\r\n  pause() {\r\n    this.paused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.paused = false;\r\n  }\r\n\r\n\r\n  // \r\n  // scaleToWindow(backgroundColor = DEFAULT_BACKGROUND_COLOR) {\r\n  //   console.log('scaleToWindow');\r\n  //   let scaleX, scaleY, scale, center;\r\n    \r\n  //   //1. Scale the canvas to the correct size\r\n  //   //Figure out the scale amount on each axis\r\n  //   scaleX = window.innerWidth / this.renderer.canvas.width;\r\n  //   scaleY = window.innerHeight / this.renderer.canvas.height;\r\n\r\n  //   //Scale the canvas based on whichever value is less: `scaleX` or `scaleY`\r\n  //   scale = Math.min(scaleX, scaleY);\r\n  //   this.renderer.canvas.style.transformOrigin = \"0 0\";\r\n  //   this.renderer.canvas.style.transform = \"scale(\" + scale + \")\";\r\n\r\n  //   //2. Center the canvas.\r\n  //   //Decide whether to center the canvas vertically or horizontally.\r\n  //   //Wide canvases should be centered vertically, and \r\n  //   //square or tall canvases should be centered horizontally\r\n\r\n  //   if (this.renderer.canvas.width > this.renderer.canvas.height) {\r\n  //     center = \"vertically\";\r\n  //   } else {\r\n  //     center = \"horizontally\";\r\n  //   }\r\n    \r\n  //   //Center horizontally (for square or tall canvases)\r\n  //   if (center === \"horizontally\") {\r\n  //     let margin = (window.innerWidth - this.renderer.canvas.width * scaleY) / 2;\r\n  //     this.renderer.canvas.style.marginLeft = margin + \"px\";\r\n  //     this.renderer.canvas.style.marginRight = margin + \"px\";\r\n  //   }\r\n\r\n  //   //Center vertically (for wide canvases) \r\n  //   if (center === \"vertically\") {\r\n  //     let margin = (window.innerHeight - this.renderer.canvas.height * scaleX) / 2;\r\n  //     this.renderer.canvas.style.marginTop = margin + \"px\";\r\n  //     this.renderer.canvas.style.marginBottom = margin + \"px\";\r\n  //   }\r\n\r\n  //   //3. Remove any padding from the canvas and set the canvas\r\n  //   //display style to \"block\"\r\n  //   // this.renderer.canvas.style.paddingLeft = 0;\r\n  //   // this.renderer.canvas.style.paddingRight = 0;\r\n  //   this.renderer.canvas.style.display = \"block\";\r\n    \r\n  //   //4. Set the color of the HTML body background\r\n  //   // document.body.style.backgroundColor = backgroundColor;\r\n    \r\n  //   //5. Set the game engine and pointer to the correct scale. \r\n  //   //This is important for correct hit testing between the pointer and sprites\r\n  //   this.pointer.scale = scale;\r\n  //   this.scale = scale;\r\n\r\n  //   //Fix some quirkiness in scaling for Safari\r\n  //   /*\r\n  //     let ua = navigator.userAgent.toLowerCase(); \r\n  //     if (ua.indexOf('safari') != -1) { \r\n  //     if (ua.indexOf('chrome') > -1) {\r\n  //     // Chrome\r\n  //     } else {\r\n  //     // Safari\r\n  //     this.renderer.canvas.style.maxHeight = \"100%\";\r\n  //     this.renderer.canvas.style.minHeight = \"100%\";\r\n  //     }\r\n  //     }\r\n  //   */\r\n  //   this.stage.width = this.renderer.canvas.width;\r\n  //   this.stage.height = this.renderer.canvas.height;\r\n  // }\r\n\r\n  scaleToWindow(canvas=this.renderer.canvas, backgroundColor) {\r\n\r\n    backgroundColor = backgroundColor || \"#2C3539\";\r\n    let scaleX, scaleY, scale, center;\r\n    \r\n    //1. Scale the canvas to the correct size\r\n    //Figure out the scale amount on each axis\r\n    scaleX = window.innerWidth / canvas.width;\r\n    scaleY = window.innerHeight / canvas.height;\r\n\r\n    //Scale the canvas based on whichever value is less: `scaleX` or `scaleY`\r\n    scale = Math.min(scaleX, scaleY);\r\n    canvas.style.transformOrigin = \"0 0\";\r\n    canvas.style.transform = \"scale(\" + scale + \")\";\r\n\r\n    //2. Center the canvas.\r\n    //Decide whether to center the canvas vertically or horizontally.\r\n    //Wide canvases should be centered vertically, and \r\n    //square or tall canvases should be centered horizontally\r\n    if (canvas.width > canvas.height) {\r\n      if (canvas.width * scale < window.innerWidth) {\r\n        center = \"horizontally\";\r\n      } else { \r\n        center = \"vertically\";\r\n      }\r\n    } else {\r\n      if (canvas.height * scale < window.innerHeight) {\r\n        center = \"vertically\";\r\n      } else { \r\n        center = \"horizontally\";\r\n      }\r\n    }\r\n    \r\n    //Center horizontally (for square or tall canvases)\r\n    let margin;\r\n    if (center === \"horizontally\") {\r\n      margin = (window.innerWidth - canvas.width * scale) / 2;\r\n      canvas.style.marginLeft = margin + \"px\";\r\n      canvas.style.marginRight = margin + \"px\";\r\n    }\r\n\r\n    //Center vertically (for wide canvases) \r\n    if (center === \"vertically\") {\r\n      margin = (window.innerHeight - canvas.height * scale) / 2;\r\n      canvas.style.marginTop = margin + \"px\";\r\n      canvas.style.marginBottom = margin + \"px\";\r\n    }\r\n\r\n    //3. Remove any padding from the canvas  and body and set the canvas\r\n    //display style to \"block\"\r\n    canvas.style.paddingLeft = 0;\r\n    canvas.style.paddingRight = 0;\r\n    canvas.style.paddingTop = 0;\r\n    canvas.style.paddingBottom = 0;\r\n    canvas.style.display = \"block\";\r\n    \r\n    //4. Set the color of the HTML body background\r\n    document.body.style.backgroundColor = backgroundColor;\r\n\r\n    this.pointer.scale = scale;\r\n    this.scale = scale;\r\n    \r\n    //Fix some quirkiness in scaling for Safari\r\n    let ua = navigator.userAgent.toLowerCase(); \r\n    if (ua.indexOf(\"safari\") != -1) { \r\n      if (ua.indexOf(\"chrome\") > -1) {\r\n        // Chrome\r\n      } else {\r\n        // Safari\r\n        canvas.style.maxHeight = \"100%\";\r\n        canvas.style.minHeight = \"100%\";\r\n      }\r\n    }\r\n\r\n    //5. Return the `scale` value. This is important, because you'll nee this value \r\n    //for correct hit testing between the pointer and sprites\r\n\tconsole.log('scale: '+scale)\r\n    return scale;\r\n  };\r\n\r\n}\r\n\r\nexport function tina(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT,\r\n  setup, assetsToLoad, load) {\r\n  return new Tina(width, height, setup, assetsToLoad, load);\r\n}\r\n\r\n\r\n","import common from './common.js';\r\n//import {makeSound} from './sound.js';\r\n\r\nexport let assets = {\r\n  toLoad: 0,\r\n  loaded: 0,\r\n\r\n  imageExtensions: ['png', 'jpg', 'gif'],\r\n  fontExtensions: ['ttf', 'otf', 'ttc', 'woff'],\r\n  jsonExtensions: ['json'],\r\n  audioExtensions: ['mp3', 'ogg', 'wav', 'webm'],\r\n\r\n  // TODO: 提示载入的文件名字\r\n  load: function(sources = []) {\r\n    return new Promise(resolve => {\r\n      let loadHandler = () => {\r\n        this.loaded++;\r\n        console.log(this.loaded);\r\n        if (this.toLoad === this.loaded) {\r\n          this.loaded = this.toLoad = 0;\r\n          console.info('Assets finished loading');\r\n          resolve();\r\n        }\r\n      };\r\n      if (!sources || sources.length < 1) {\r\n        console.error('no assets need to load');\r\n        return;\r\n      }\r\n      console.info('Loading assets...');\r\n\r\n      this.toLoad = sources.length;\r\n      sources.forEach(source => {\r\n        let extension = source.split('.').pop();\r\n        // Load images\r\n        if (this.imageExtensions.has(extension)) {\r\n          this.loadImage(source, loadHandler);\r\n        }\r\n        // Load fonts \r\n        else if (this.fontExtensions.has(extension)) {\r\n          this.loadFont(source, loadHandler);\r\n        }\r\n        // Load JSON files  \r\n        else if (this.jsonExtensions.has(extension)) {\r\n          this.loadJson(source, loadHandler);\r\n        }\r\n        // Load audio files  \r\n        else if (this.audioExtensions.has(extension)) {\r\n          this.loadSound(source, loadHandler);\r\n        }\r\n        // Display a message if a file type isn't recognized\r\n        else {\r\n          console.log(\"File type not recognized: \" + source);\r\n        }\r\n      });\r\n    });\r\n  },\r\n\r\n  loadImage: function(source, loadHandler) {\r\n    let image = new Image();\r\n    image.addEventListener('load', loadHandler, false);\r\n    this[source] = image;\r\n    image.src = source;\r\n  },\r\n\r\n  loadFont: function(source, loadHandler) {\r\n    let fontFamily = source.split('/').pop().split('.')[0];\r\n    let newStyle = $$new('style');\r\n    let fontFace = \"@font-face {font-family: '\" + fontFamily +\r\n      \"'; src: url('\" + source + \"');}\";\r\n    newStyle.appendChild(document.createTextNode(fontFace));\r\n    document.head.appendChild(newStyle);\r\n    loadHandler();\r\n  },\r\n\r\n  loadJson: function(source, loadHandler) {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open('GET', source, true);\r\n    xhr.responseType = 'text';\r\n    xhr.onload = event => {\r\n      if (xhr.status === 200) {\r\n        let file = JSON.parse(xhr.responseText);\r\n        file.name = source;\r\n        this[file.name] = file;\r\n        if (file.frames)\r\n          this.createTilesetFrames(file, source, loadHandler);\r\n        else\r\n          loadHandler();\r\n      }\r\n    };\r\n    xhr.send();\r\n  },\r\n\r\n  createTilesetFrames: function(file, source, loadHandler) {\r\n    let baseUrl = source.replace(/[^\\/]*$/, '');\r\n    let imageSource = baseUrl + file.meta.image;\r\n    let image = new Image();\r\n    let imageLoadHandler = () => {\r\n      this[imageSource] = image;\r\n      _.keys(file.frames).forEach(frame => {\r\n        this[frame] = file.frames[frame];\r\n        this[frame].source = image;\r\n      });\r\n      loadHandler();\r\n    };\r\n    image.addEventListener('load', imageLoadHandler, false);\r\n    image.src = imageSource;\r\n  },\r\n\r\n  loadSound: function(source, loadHandler) {\r\n    //let sound = makeSound(source,loadHandler);\r\n    //sound.name = source;\r\n    //this[sound.name] = sound;\r\n  }\r\n};\r\n","export function hitTestPoint(point, sprite) {\r\n  let shape, left, right, top, bottom, vx, vy, magnitude, hit;\r\n\r\n  if (sprite.radius) {\r\n    shape = 'circle';\r\n  } else {\r\n    shape = 'rectangle';\r\n  }\r\n\r\n  if (shape === 'rectangle') {\r\n    left = sprite.gx;\r\n    right = sprite.gx + sprite.width;\r\n    top = sprite.gy;\r\n    bottom = sprite.gy + sprite.height;\r\n    hit = point.x > left && point.x < right && point.y > top && point.y < bottom;\r\n  }\r\n\r\n  if (shape === 'circle') {\r\n    vx = point.x - sprite.centerX;\r\n    vy = point.y - sprite.centerY;\r\n    magnitude = Math.sqrt(vx * vx + vy * vy);\r\n    hit = magnitude < sprite.radius;\r\n  }\r\n  return hit;\r\n}\r\n\r\nexport function hitTestCircle(c1, c2, global = false) {\r\n  let vx, vy, magnitude, combinedRadii, hit;\r\n\r\n  if (global) {\r\n    vx = (c2.gx + c2.radius) - (c1.gx + c1.radius);\r\n    vy = (c2.gy + c2.radius) - (c1.gy + c1.radius);\r\n  } else {\r\n    vx = c2.centerX - c1.centerX;\r\n    vy = c2.centerY - c1.centerY;\r\n  }\r\n\r\n  magnitude = Math.sqrt(vx * vx + vy * vy);\r\n  combinedRadii = c1.radius + c2.radius;\r\n  hit = magnitude < combinedRadii;\r\n\r\n  return hit;\r\n};\r\n\r\nexport function circleCollision(c1, c2, bounce = false, global = false) {\r\n  let magnitude, combinedRadii, overlap,\r\n    vx, vy, dx, dy, s = {},\r\n    hit = false;\r\n\r\n  if (global) {\r\n    vx = (c2.gx + c2.radius) - (c1.gx + c1.radius);\r\n    vy = (c2.gy + c2.radius) - (c1.gy + c1.radius);\r\n  } else {\r\n    vx = c2.centerX - c1.centerX;\r\n    vy = c2.centerY - c1.centerY;\r\n  }\r\n\r\n  magnitude = Math.sqrt(vx * vx + vy * vy);\r\n  combinedRadii = c1.radius + c2.radius;\r\n\r\n  if (magnitude < combinedRadii) {\r\n    hit = true;\r\n    overlap = combinedRadii - magnitude;\r\n    let quantumPadding = 0.3;\r\n    overlap += quantumPadding;\r\n\r\n    dx = vx / magnitude;\r\n    dy = vy / magnitude;\r\n    c1.x -= overlap * dx;\r\n    c1.y -= overlap * dy;\r\n\r\n    if (bounce) {\r\n      s.x = vy;\r\n      s.y = -vx;\r\n      bounceOffSurface(c1, s);\r\n    }\r\n  }\r\n  return hit;\r\n}\r\n\r\nexport function movingCircleCollision(c1, c2, global = false) {\r\n  let combinedRadii, overlap, xSide, ySide,\r\n    s = {},\r\n    p1A = {},\r\n    p1B = {},\r\n    p2A = {},\r\n    p2B = {},\r\n    hit = false;\r\n\r\n  c1.mass = c1.mass || 1;\r\n  c2.mass = c2.mass || 1;\r\n\r\n  if (global) {\r\n    s.vx = (c2.gx + c2.radius) - (c1.gx + c1.radius);\r\n    s.vy = (c2.gy + c2.radius) - (c1.gy + c1.radius);\r\n  } else {\r\n    s.vx = c2.centerX - c1.centerX;\r\n    s.vy = c2.centerY - c1.centerY;\r\n  }\r\n\r\n  s.magnitude = Math.sqrt(s.vx * s.vx + s.vy * s.vy);\r\n  combinedRadii = c1.radius + c2.radius;\r\n\r\n  if (s.magnitude < combinedRadii) {\r\n    hit = true;\r\n\r\n    overlap = combinedRadii - s.magnitude;\r\n\r\n    overlap += 0.3;\r\n\r\n    s.dx = s.vx / s.magnitude;\r\n    s.dy = s.vy / s.magnitude;\r\n\r\n    s.vxHalf = Math.abs(s.dx * overlap / 2);\r\n    s.vyHalf = Math.abs(s.dy * overlap / 2);\r\n\r\n    (c1.x > c2.x) ? xSide = 1: xSide = -1;\r\n    (c1.y > c2.y) ? ySide = 1: ySide = -1;\r\n\r\n    c1.x = c1.x + (s.vxHalf * xSide);\r\n    c1.y = c1.y + (s.vyHalf * ySide);\r\n\r\n    c2.x = c2.x + (s.vxHalf * -xSide);\r\n    c2.y = c2.y + (s.vyHalf * -ySide);\r\n\r\n    s.lx = s.vy;\r\n    s.ly = -s.vx;\r\n\r\n    let dp1 = c1.vx * s.dx + c1.vy * s.dy;\r\n\r\n    p1A.x = dp1 * s.dx;\r\n    p1A.y = dp1 * s.dy;\r\n\r\n    let dp2 = c1.vx * (s.lx / s.magnitude) + c1.vy * (s.ly / s.magnitude);\r\n\r\n    p1B.x = dp2 * (s.lx / s.magnitude);\r\n    p1B.y = dp2 * (s.ly / s.magnitude);\r\n\r\n    let dp3 = c2.vx * s.dx + c2.vy * s.dy;\r\n\r\n    p2A.x = dp3 * s.dx;\r\n    p2A.y = dp3 * s.dy;\r\n\r\n    let dp4 = c2.vx * (s.lx / s.magnitude) + c2.vy * (s.ly / s.magnitude);\r\n\r\n    p2B.x = dp4 * (s.lx / s.magnitude);\r\n    p2B.y = dp4 * (s.ly / s.magnitude);\r\n\r\n    c1.bounce = {};\r\n    c1.bounce.x = p1B.x + p2A.x;\r\n    c1.bounce.y = p1B.y + p2A.y;\r\n\r\n    c2.bounce = {};\r\n    c2.bounce.x = p1A.x + p2B.x;\r\n    c2.bounce.y = p1A.y + p2B.y;\r\n\r\n    c1.vx = c1.bounce.x / c1.mass;\r\n    c1.vy = c1.bounce.y / c1.mass;\r\n    c2.vx = c2.bounce.x / c2.mass;\r\n    c2.vy = c2.bounce.y / c2.mass;\r\n  }\r\n  return hit;\r\n}\r\n\r\nexport function multipleCircleCollision(arrayOfCircles, global = false) {\r\n  for (let i = 0; i < arrayOfCircles.length; i++) {\r\n    var c1 = arrayOfCircles[i];\r\n    for (let j = i + 1; j < arrayOfCircles.length; j++) {\r\n      let c2 = arrayOfCircles[j];\r\n      movingCircleCollision(c1, c2, global);\r\n    }\r\n  }\r\n}\r\n\r\nexport function hitTestRectangle(r1, r2, global = false) {\r\n  let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\r\n  hit = false;\r\n\r\n  if (global) {\r\n    vx = (r1.gx + r1.halfWidth) - (r2.gx + r2.halfWidth);\r\n    vy = (r1.gy + r1.halfHeight) - (r2.gy + r2.halfHeight);\r\n  } else {\r\n    vx = r1.centerX - r2.centerX;\r\n    vy = r1.centerY - r2.centerY;\r\n  }\r\n\r\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\r\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\r\n\r\n  if (Math.abs(vx) < combinedHalfWidths) {\r\n    if (Math.abs(vy) < combinedHalfHeights) {\r\n      hit = true;\r\n    } else {\r\n      hit = false;\r\n    }\r\n  } else {\r\n    hit = false;\r\n  }\r\n\r\n  return hit;\r\n}\r\n\r\nexport function rectangleCollision(r1, r2, bounce = false, global = true) {\r\n  let collision, combinedHalfWidths, combinedHalfHeights,\r\n    overlapX, overlapY, vx, vy;\r\n\r\n  if (global) {\r\n    vx = (r1.gx + r1.halfWidth) - (r2.gx + r2.halfWidth);\r\n    vy = (r1.gy + r1.halfHeight) - (r2.gy + r2.halfHeight);\r\n  } else {\r\n    vx = r1.centerX - r2.centerX;\r\n    vy = r1.centerY - r2.centerY;\r\n  }\r\n\r\n  combinedHalfWidths = r1.halfWidth + r2.halfWidth;\r\n  combinedHalfHeights = r1.halfHeight + r2.halfHeight;\r\n\r\n  if (Math.abs(vx) < combinedHalfWidths) {\r\n    if (Math.abs(vy) < combinedHalfHeights) {\r\n      overlapX = combinedHalfWidths - Math.abs(vx);\r\n      overlapY = combinedHalfHeights - Math.abs(vy);\r\n\r\n      if (overlapX >= overlapY) {\r\n        if (vy > 0) {\r\n          collision = \"top\";\r\n          r1.y = r1.y + overlapY;\r\n        } else {\r\n          collision = \"bottom\";\r\n          r1.y = r1.y - overlapY;\r\n        }\r\n\r\n        if (bounce) {\r\n          r1.vy *= -1;\r\n        }\r\n      } else {\r\n        if (vx > 0) {\r\n          collision = \"left\";\r\n          r1.x = r1.x + overlapX;\r\n        } else {\r\n          collision = \"right\";\r\n          r1.x = r1.x - overlapX;\r\n        }\r\n\r\n        if (bounce) {\r\n          r1.vx *= -1;\r\n        }\r\n      }\r\n    } else {\r\n      //No collision\r\n    }\r\n  } else {\r\n    //No collision\r\n  }\r\n  // 返回碰撞方向 top | right | bottom | left\r\n  return collision;\r\n}\r\n\r\nexport function hitTestCircleRectangle(c1, r1, global = false) {\r\n  let region, collision, c1x, c1y, r1x, r1y;\r\n\r\n  if (global) {\r\n    c1x = c1.gx;\r\n    c1y = c1.gy;\r\n    r1x = r1.gx;\r\n    r1y = r1.gy;\r\n  } else {\r\n    c1x = c1.x;\r\n    c1y = c1.y;\r\n    r1x = r1.x;\r\n    r1y = r1.y;\r\n  }\r\n\r\n  if (c1y < r1y - r1.halfHeight) {\r\n    if (c1x < r1x - 1 - r1.halfWidth) {\r\n      region = \"topLeft\";\r\n    } else if (c1x > r1x + 1 + r1.halfWidth) {\r\n      region = \"topRight\";\r\n    } else {\r\n      region = \"topMiddle\";\r\n    }\r\n  } else if (c1y > r1y + r1.halfHeight) {\r\n    if (c1x < r1x - 1 - r1.halfWidth) {\r\n      region = \"bottomLeft\";\r\n    } else if (c1x > r1x + 1 + r1.halfWidth) {\r\n      region = \"bottomRight\";\r\n    } else {\r\n      region = \"bottomMiddle\";\r\n    }\r\n  } else {\r\n    if (c1x < r1x - r1.halfWidth) {\r\n      region = \"leftMiddle\";\r\n    } else {\r\n      region = \"rightMiddle\";\r\n    }\r\n  }\r\n\r\n  if (region === \"topMiddle\" || region === \"bottomMiddle\" ||\r\n      region === \"leftMiddle\" || region === \"rightMiddle\") {\r\n    collision = hitTestRectangle(c1, r1, global);\r\n  } else {\r\n    let point = {};\r\n\r\n    switch (region) {\r\n    case \"topLeft\":\r\n      point.x = r1x;\r\n      point.y = r1y;\r\n      break;\r\n    case \"topRight\":\r\n      point.x = r1x + r1.width;\r\n      point.y = r1y;\r\n      break;\r\n    case \"bottomLeft\":\r\n      point.x = r1x;\r\n      point.y = r1y + r1.height;\r\n      break;\r\n    case \"bottomRight\":\r\n      point.x = r1x + r1.width;\r\n      point.y = r1y + r1.height;\r\n    }\r\n\r\n    collision = hitTestCirclePoint(c1, point, global);\r\n  }\r\n\r\n  if (collision) {\r\n    return region;\r\n  } else {\r\n    return collision;\r\n  }\r\n}\r\n\r\n\r\nexport function hitTestCirclePoint(c1, point, global = false) {\r\n  point.diameter = 1;\r\n  point.radius = 0.5;\r\n  point.centerX = point.x;\r\n  point.centerY = point.y;\r\n  point.gx = point.x;\r\n  point.gy = point.y;\r\n  return hitTestCircle(c1, point, global);\r\n}\r\n\r\nexport function circleRectangleCollision(c1, r1, bounce = false, global = false) {\r\n  let region, collision, c1x, c1y, r1x, r1y;\r\n\r\n  if (global) {\r\n    c1x = c1.gx;\r\n    c1y = c1.gy;\r\n    r1x = r1.gx;\r\n    r1y = r1.gy;\r\n  } else {\r\n    c1x = c1.x;\r\n    c1y = c1.y;\r\n    r1x = r1.x;\r\n    r1y = r1.y;\r\n  }\r\n\r\n  if (c1y < r1y - r1.halfHeight) {\r\n    if (c1x < r1x - 1 - r1.halfWidth) {\r\n      region = \"topLeft\";\r\n    } else if (c1x > r1x + 1 + r1.halfWidth) {\r\n      region = \"topRight\";\r\n    } else {\r\n      region = \"topMiddle\";\r\n    }\r\n  } else if (c1y > r1y + r1.halfHeight) {\r\n    if (c1x < r1x - 1 - r1.halfWidth) {\r\n      region = \"bottomLeft\";\r\n    } else if (c1x > r1x + 1 + r1.halfWidth) {\r\n      region = \"bottomRight\";\r\n    } else {\r\n      region = \"bottomMiddle\";\r\n    }\r\n  } else {\r\n    if (c1x < r1x - r1.halfWidth) {\r\n      region = \"leftMiddle\";\r\n    } else {\r\n      region = \"rightMiddle\";\r\n    }\r\n  }\r\n\r\n  if (region === \"topMiddle\" || region === \"bottomMiddle\" ||\r\n      region === \"leftMiddle\" || region === \"rightMiddle\") {\r\n    collision = rectangleCollision(c1, r1, bounce, global);\r\n  } else {\r\n    let point = {};\r\n\r\n    switch (region) {\r\n      case \"topLeft\":\r\n        point.x = r1x;\r\n        point.y = r1y;\r\n        break;\r\n      case \"topRight\":\r\n        point.x = r1x + r1.width;\r\n        point.y = r1y;\r\n        break;\r\n      case \"bottomLeft\":\r\n        point.x = r1x;\r\n        point.y = r1y + r1.height;\r\n        break;\r\n      case \"bottomRight\":\r\n        point.x = r1x + r1.width;\r\n        point.y = r1y + r1.height;\r\n    }\r\n\r\n    collision = circlePointCollision(c1, point, bounce, global);\r\n  }\r\n\r\n  if (collision) {\r\n    return region;\r\n  } else {\r\n    return collision;\r\n  }\r\n}\r\n\r\nexport function circlePointCollision(c1, point, bounce = false, global = false) {\r\n  point.diameter = 1;\r\n  point.radius = 0.5;\r\n  point.centerX = point.x;\r\n  point.centerY = point.y;\r\n  point.gx = point.x;\r\n  point.gy = point.y;\r\n  return circleCollision(c1, point, bounce, global);\r\n}\r\n\r\nfunction bounceOffSurface(o, s) {\r\n  let dp1, dp2,\r\n    p1 = {},\r\n    p2 = {},\r\n    bounce = {},\r\n    mass = o.mass || 1;\r\n\r\n  s.lx = s.y;\r\n  s.ly = -s.x;\r\n\r\n  s.magnitude = Math.sqrt(s.x * s.x + s.y * s.y);\r\n  s.dx = s.x / s.magnitude;\r\n  s.dy = s.y / s.magnitude;\r\n  dp1 = o.vx * s.dx + o.vy * s.dy;\r\n\r\n  p1.vx = dp1 * s.dx;\r\n  p1.vy = dp1 * s.dy;\r\n\r\n  dp2 = o.vx * (s.lx / s.magnitude) + o.vy * (s.ly / s.magnitude);\r\n\r\n  p2.vx = dp2 * (s.lx / s.magnitude);\r\n  p2.vy = dp2 * (s.ly / s.magnitude);\r\n\r\n  p2.vx *= -1;\r\n  p2.vy *= -1;\r\n\r\n  bounce.x = p1.vx + p2.vx;\r\n  bounce.y = p1.vy + p2.vy;\r\n\r\n  o.vx = bounce.x / mass;\r\n  o.vy = bounce.y / mass;\r\n}\r\n\r\nexport function hit(a, b, react = false, bounce = false, global, extra = undefined) {\r\n  let collision,\r\n      aIsASprite = a.parent !== undefined,\r\n      bIsASprite = b.parent !== undefined;\r\n\r\n  if (aIsASprite && b instanceof Array || bIsASprite && a instanceof Array) {\r\n    spriteVsArray();\r\n  } else {\r\n    collision = findCollisionType(a, b);\r\n    if (collision && extra) extra(collision);\r\n  }\r\n\r\n  return collision;\r\n\r\n  function findCollisionType(a, b) {\r\n    let aIsASprite = a.parent !== undefined;\r\n    let bIsASprite = b.parent !== undefined;\r\n\r\n    if (aIsASprite && bIsASprite) {\r\n      if (a.diameter && b.diameter) {\r\n        return circleVsCircle(a, b);\r\n      } else if (a.diameter && !b.diameter) {\r\n        return circleVsRectangle(a, b);\r\n      } else {\r\n        return rectangleVsRectangle(a, b);\r\n      }\r\n    } else if (bIsASprite && !(a.x === undefined) && !(a.y === undefined)) {\r\n      return hitTestPoint(a, b);\r\n    } else {\r\n      throw new Error(`${a} and ${b} cannot be use together in a collision test.'`);\r\n    }\r\n  }\r\n\r\n  function spriteVsArray() {\r\n    if (a instanceof Array) {\r\n      let [a, b] = [b, a];\r\n    }\r\n    for (let i = b.length - 1; i >= 0; i--) {\r\n      let sprite = b[i];\r\n      collision = findCollisionType(a, sprite);\r\n      if (collision && extra) extra(collision, sprite);\r\n    }\r\n  }\r\n\r\n  function circleVsCircle(a, b) {\r\n    if (!react) {\r\n      return hitTestCircle(a, b);\r\n    } else {\r\n      if (a.vx + a.vy !== 0 && b.vx + b.vy !== 0) {\r\n        return movingCircleCollision(a, b, global);\r\n      } else {\r\n        return circleCollision(a, b, bounce, global);\r\n      }\r\n    }\r\n  }\r\n\r\n  function rectangleVsRectangle(a, b) {\r\n    if (!react) {\r\n      return hitTestRectangle(a, b, global);\r\n    } else {\r\n      return rectangleCollision(a, b, bounce, global);\r\n    }\r\n  }\r\n\r\n  function circleVsRectangle(a, b) {\r\n    if (!react) {\r\n      return hitTestCircleRectangle(a, b, global);\r\n    } else {\r\n      return circleRectangleCollision(a, b, bounce, global);\r\n    }\r\n  }\r\n}\r\n","//-------------------------------------------------------------------------------------\r\n// Native Object extensions\r\n//-------------------------------------------------------------------------------------\r\n\r\nNumber.prototype.map = function(istart, istop, ostart, ostop) {\r\n  return ostart + (ostop - ostart) * ((this - istart) / (istop - istart));\r\n};\r\n\r\nNumber.prototype.limit = function(min, max) {\r\n  return Math.min(max, Math.max(min, this));\r\n};\r\n\r\nNumber.prototype.round = function(precision) {\r\n  precision = Math.pow(10, precision || 0);\r\n  return Math.round(this * precision) / precision;\r\n};\r\n\r\nNumber.prototype.toInt = function() {\r\n  return (this | 0);\r\n};\r\n\r\nNumber.prototype.toRad = function() {\r\n  return (this / 180) * Math.PI;\r\n};\r\n\r\nNumber.prototype.toDeg = function() {\r\n  return (this * 180) / Math.PI;\r\n};\r\n\r\nArray.prototype.erase = function(item) {\r\n  for (let i = this.length; i--;) {\r\n    if (this[i] == item) {\r\n      this.splice(i, 1);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nArray.prototype.has = function(item){\r\n  return (this.indexOf(item) !== -1);\r\n};\r\n\r\nArray.prototype.random = function() {\r\n  return this[Math.floor(Math.random() * this.length)];\r\n};\r\n\r\nArray.prototype.shuffle = function() {\r\n  for (let j, x, i = this.length; i;) {\r\n    j = parseInt(Math.random() * i);\r\n    x = this[--i];\r\n    this[i] = this[j];\r\n    this[j] = x;\r\n  }\r\n  return this;\r\n};\r\n\r\n(function(window) {\r\n  let idIndex = 0;\r\n\r\n  top.$$ = function(selector) {\r\n    return selector.charAt(0) == '#' ?\r\n      document.getElementById(selector.substr(1)) :\r\n      document.getElementsByTagName(selector);\r\n  };\r\n\r\n  top.$$new = function(name) {\r\n    return document.createElement(name);\r\n  };\r\n\r\n  top._ = {\r\n    extend: function(dest = {}, source) {\r\n      if (!source) return dest;\r\n      for (let prop in source) {\r\n        dest[prop] = source[prop];\r\n      }\r\n      return dest;\r\n    },\r\n\r\n    clone: function(obj) {\r\n      return _.extend({}, obj);\r\n    },\r\n\r\n    copy: function(obj) {\r\n      if (!obj || typeof(obj) != 'object' ||\r\n        obj instanceof HTMLElement) {\r\n        return obj;\r\n      } else if (obj instanceof Array) {\r\n        let c = [];\r\n        for (let i = 0, l = obj.length; i < l; ++i) {\r\n          c[i] = _.copy(obj[i]);\r\n        }\r\n        return c;\r\n      } else {\r\n        let c = {};\r\n        for (let i in obj) {\r\n          c[i] = _.copy(obj[i]);\r\n        }\r\n        return c;\r\n      }\r\n    },\r\n\r\n    defaults: function(dest = {}, source) {\r\n      if (!source) return dest;\r\n      for (let prop in source) {\r\n        if (dest[prop] === void 0) {\r\n          dest[prop] = source[prop];\r\n        }\r\n      }\r\n      return dest;\r\n    },\r\n\r\n    modify: function(dest = {}, source) {\r\n      if (!source) return dest;\r\n      for (let prop in source) {\r\n        if (!(dest[prop] === void 0)) {\r\n          dest[prop] = source[prop];\r\n        }\r\n      }\r\n      return dest;\r\n    },\r\n\r\n    has: function(obj, key) {\r\n      return Object.prototype.hasOwnProperty(obj, key);\r\n    },\r\n\r\n    isString: function(obj) {\r\n      return typeof obj === 'string';\r\n    },\r\n\r\n    isNumber: function(obj) {\r\n      return Object.prototype.toString.call(obj) === '[object Number]';\r\n    },\r\n\r\n    isFunction: function(obj) {\r\n      return Object.prototype.toString.call(obj) === '[object Function]';\r\n    },\r\n\r\n    isObject: function(obj) {\r\n      return Object.prototype.toString.call(obj) === '[object Object]';\r\n    },\r\n\r\n    isArray: function(obj) {\r\n      return Object.prototype.toString.call(obj) === '[object Array]';\r\n    },\r\n\r\n    isUndefined: function(obj) {\r\n      return obj === void 0;\r\n    },\r\n\r\n    popProperty: function(obj, property) {\r\n      let val = obj[property];\r\n      delete obj[property];\r\n      return val;\r\n    },\r\n\r\n    each: function(obj, iterator, context) {\r\n      if (obj == null) return;\r\n      if (obj.forEach) {\r\n        obj.forEach(iterator, context);\r\n      } else if (obj.length === +obj.length) {\r\n        for (let i = 0, l = obj.length; i < l; ++i) {\r\n          iterator.call(context, obj[i], i, obj);\r\n        }\r\n      } else {\r\n        for (let key in obj) {\r\n          iterator.call(context, obj[key], key, obj);\r\n        }\r\n      }\r\n    },\r\n\r\n    invoke: function(arr, property, arg1, arg2) {\r\n      if (arr == null) return;\r\n      for (let i = 0, l = arr.length; i < l; ++i) {\r\n        arr[i][property](arg1, arg2);\r\n      }\r\n    },\r\n\r\n    detect: function(obj, iterator, context, arg1, arg2) {\r\n      let result;\r\n      if (obj == null) return false;\r\n      if (obj.length === +obj.length) {\r\n        for (let i = 0, l = obj.length; i < l; ++i) {\r\n          result = iterator.call(context, obj[i], i, arg1, arg2);\r\n          if (result) return result;\r\n        }\r\n        return false;\r\n      } else {\r\n        for (let key in obj) {\r\n          result = iterator.call(context, obj[key], key, arg1, arg2);\r\n          if (result) return result;\r\n        }\r\n        return false;\r\n      }\r\n    },\r\n\r\n    filter: function(obj, iterator, context, arg1, arg2) {\r\n      let result = [];\r\n      let item;\r\n      if (obj == null) return false;\r\n      if (obj.length === +obj.length) {\r\n        for (let i = 0, l = obj.length; i < l; ++i) {\r\n          item = iterator.call(context, obj[i], i, arg1, arg2);\r\n          if (item) result.push(item);\r\n        }\r\n        return result;\r\n      } else {\r\n        for (let key in obj) {\r\n          result = iterator.call(context, obj[key], key, arg1, arg2);\r\n          if (item) result.push(item);\r\n        }\r\n        return result;\r\n      }\r\n    },\r\n\r\n    map: function(obj, iterator, context) {\r\n      let results = [];\r\n      if (obj == null) return results;\r\n      if (!_.isNumber(obj) && obj.map) return obj.map(iterator, context);\r\n      _.each(obj, function(value, index, list) {\r\n        results[results.length] = iterator.call(context, value, index, list);\r\n      });\r\n      if (obj.length === +obj.length) results.length = obj.length;\r\n      return results;\r\n    },\r\n\r\n    uniq: function(arr) {\r\n      arr = arr.slice().sort();\r\n      let output = [];\r\n\r\n      let last = null;\r\n      for (let i = 0; i < arr.length; ++i) {\r\n        if (arr[i] != void 0 && last !== arr[i])\r\n          output.push(arr[i]);\r\n        last = arr[i];\r\n      }\r\n      return output;\r\n    },\r\n\r\n    keys: Object.keys || function(obj) {\r\n      if (_.isObject(obj))\r\n        throw new TypeError('Invalid object');\r\n      let keys = [];\r\n      for (let key in obj) {\r\n        if (_.has(obj, key)) keys[keys.length] = key;\r\n      }\r\n    },\r\n\r\n    range: function(start, stop, step = 1) {\r\n      let len = Math.max(Math.ceil(Math.abs(stop - start) / step), 0);\r\n      let idx = 0;\r\n      let range = new Array(len);\r\n\r\n      while (idx < len) {\r\n        range[idx++] = start;\r\n        if (start > stop)\r\n          start -= step;\r\n        else\r\n          start += step;\r\n      }\r\n      return range;\r\n    },\r\n\r\n    uniqueId: function() {\r\n      return idIndex++;\r\n    }\r\n  };\r\n\r\n})(window);\r\n\r\n\r\nfunction normalizeArg(arg) {\r\n  if (_.isString(arg))\r\n    arg = arg.replace(/\\s+/g, '').split(',');\r\n  if (!_.isArray(arg))\r\n    arg = [arg];\r\n  return arg;\r\n}\r\n\r\nexport {\r\n  normalizeArg\r\n};\r\n\r\nexport default {};\r\n\r\n\r\nconsole.log('load common module');\r\n","import DisplayObject from './DisplayObject.js';\r\nimport {stage} from './Stage.js';\r\n\r\nexport class Rectangle extends DisplayObject {\r\n  constructor(width = 32, height = 32,\r\n              fillStyle = 'gray', strokeStyle = 'none',\r\n              lineWidth = 0,\r\n              x = 0, y = 0) {\r\n    super();\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.fillStyle = fillStyle;\r\n    this.strokeStyle = strokeStyle;\r\n    this.lineWidth = lineWidth;\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.mask = false;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.strokeStyle = this.strokeStyle;\r\n    ctx.lineWidth = this.lineWidth;\r\n    ctx.fillStyle = this.fillStyle;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      -this.width * this.pivotX,\r\n      -this.height * this.pivotY,\r\n      this.width,\r\n      this.height\r\n    );\r\n    if(this.strokeStyle !== 'none') ctx.stroke();\r\n    if(this.fillStyle !== 'none') ctx.fill();\r\n    if(this.mask && this.mask === true) ctx.clip();\r\n  }\r\n}\r\n\r\nexport class RoundedRectangle extends DisplayObject {\r\n  constructor(width = 32, height = 32, radius = 30,\r\n              fillStyle = 'gray', strokeStyle = 'none',\r\n              lineWidth = 0,\r\n              x = 0, y = 0) {\r\n    super();\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n    this.radius = radius;\r\n    this.fillStyle = fillStyle;\r\n    this.strokeStyle = strokeStyle;\r\n    this.lineWidth = lineWidth;\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.mask = false;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.strokeStyle = this.strokeStyle;\r\n    ctx.lineWidth = this.lineWidth;\r\n    ctx.fillStyle = this.fillStyle;\r\n    ctx.beginPath();\r\n\r\n    let x = -this.width * this.pivotX;\r\n    let y = -this.height * this.pivotY;\r\n    let width = this.width;\r\n    let height = this.height;\r\n    let radius = this.radius;\r\n    ctx.arc(x + radius, y + radius, radius, Math.PI, Math.PI * 3 / 2);   \r\n    ctx.lineTo(width - radius + x, y);   \r\n    ctx.arc(width - radius + x, radius + y, radius, Math.PI * 3 / 2, Math.PI * 2);   \r\n    ctx.lineTo(width + x, height + y - radius);   \r\n    ctx.arc(width - radius + x, height - radius + y, radius, 0, Math.PI * 1 / 2);   \r\n    ctx.lineTo(radius + x, height +y);   \r\n    ctx.arc(radius + x, height - radius + y, radius, Math.PI * 1 / 2, Math.PI);   \r\n\r\n    if(this.strokeStyle !== 'none') ctx.stroke();\r\n    if(this.fillStyle !== 'none') ctx.fill();\r\n    if(this.mask && this.mask === true) ctx.clip();\r\n  }\r\n}\r\n\r\nexport function rectangle(width, height,\r\n                          fillStyle, strokeStyle,\r\n                          lineWidth, x, y) {\r\n  let sprite = new Rectangle(width, height,\r\n                             fillStyle, strokeStyle,\r\n                             lineWidth, x, y);\r\n  stage.addChild(sprite);\r\n  return sprite;\r\n}\r\n\r\nexport class Circle extends DisplayObject {\r\n  constructor(diameter = 32,\r\n              fillStyle = 'gray', strokeStyle = 'none',\r\n              lineWidth = 0,\r\n              x = 0, y = 0) {\r\n    super();\r\n\r\n    this.circular = true;\r\n\r\n    this.diameter = diameter;\r\n    this.fillStyle = fillStyle;\r\n    this.strokeStyle = strokeStyle;\r\n    this.lineWidth = lineWidth;\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.mask = false;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.strokeStyle = this.strokeStyle;\r\n    ctx.lineWidth = this.lineWidth;\r\n    ctx.fillStyle = this.fillStyle;\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      this.radius + (-this.diameter * this.pivotX),\r\n      this.radius + (-this.diameter * this.pivotY),\r\n      this.radius,\r\n      0, 2 * Math.PI,\r\n      false\r\n    );\r\n    if(this.strokeStyle !== 'none') ctx.stroke();\r\n    if(this.fillStyle !== 'none') ctx.fill();\r\n    if(this.mask && this.mask === true) ctx.clip();\r\n  }\r\n}\r\n\r\nexport function circle(diameter,\r\n                       fillStyle, strokeStyle,\r\n                       lineWidth,\r\n                       x, y){\r\n  let sprite = new Circle(diameter,\r\n                          fillStyle, strokeStyle,\r\n                          lineWidth,\r\n                          x, y);\r\n  stage.addChild(sprite);\r\n  return sprite;\r\n}\r\n\r\nexport class Line extends DisplayObject{\r\n  constructor(\r\n    strokeStyle = 'none',\r\n    lineWidth = 0,\r\n    ax = 0,\r\n    ay = 0,\r\n    bx = 32,\r\n    by = 32\r\n  ) {\r\n    super();\r\n\r\n    this.strokeStyle = strokeStyle;\r\n    this.lineWidth = lineWidth;\r\n    this.ax = ax;\r\n    this.ay = ay;\r\n    this.bx = bx;\r\n    this.by = by;\r\n\r\n    this.lineJoin = 'round';\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.strokeStyle = this.strokeStyle;\r\n    ctx.lineWidth = this.lineWidth;\r\n    ctx.lineJoin = this.lineJoin;\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.ax, this.ay);\r\n    ctx.lineTo(this.bx, this.by);\r\n    if(this.strokeStyle !== 'none') ctx.stroke();\r\n  }\r\n}\r\n\r\nexport function line(strokeStyle, lineWidth,\r\n                     ax, ay,\r\n                     bx, by) {\r\n  let sprite = new Line(strokeStyle, lineWidth,\r\n                        ax, ay,\r\n                        bx, by);\r\n  stage.addChild(sprite);\r\n  return sprite;\r\n}\r\n","import DisplayObject from './DisplayObject.js';\r\n\r\nexport const keys = {\r\n\t'MOUSE1': -1,\r\n\t'MOUSE2': -3,\r\n\t'MWHEEL_UP': -4,\r\n\t'MWHEEL_DOWN': -5,\r\n\t\r\n\t'BACKSPACE': 8,\r\n\t'TAB': 9,\r\n\t'ENTER': 13,\r\n\t'PAUSE': 19,\r\n\t'CAPS': 20,\r\n\t'ESC': 27,\r\n\t'SPACE': 32,\r\n\t'PAGE_UP': 33,\r\n\t'PAGE_DOWN': 34,\r\n\t'END': 35,\r\n\t'HOME': 36,\r\n\t'LEFT_ARROW': 37,\r\n\t'UP_ARROW': 38,\r\n\t'RIGHT_ARROW': 39,\r\n\t'DOWN_ARROW': 40,\r\n\t'INSERT': 45,\r\n\t'DELETE': 46,\r\n\t'_0': 48,\r\n\t'_1': 49,\r\n\t'_2': 50,\r\n\t'_3': 51,\r\n\t'_4': 52,\r\n\t'_5': 53,\r\n\t'_6': 54,\r\n\t'_7': 55,\r\n\t'_8': 56,\r\n\t'_9': 57,\r\n\t'A': 65,\r\n\t'B': 66,\r\n\t'C': 67,\r\n\t'D': 68,\r\n\t'E': 69,\r\n\t'F': 70,\r\n\t'G': 71,\r\n\t'H': 72,\r\n\t'I': 73,\r\n\t'J': 74,\r\n\t'K': 75,\r\n\t'L': 76,\r\n\t'M': 77,\r\n\t'N': 78,\r\n\t'O': 79,\r\n\t'P': 80,\r\n\t'Q': 81,\r\n\t'R': 82,\r\n\t'S': 83,\r\n\t'T': 84,\r\n\t'U': 85,\r\n\t'V': 86,\r\n\t'W': 87,\r\n\t'X': 88,\r\n\t'Y': 89,\r\n\t'Z': 90,\r\n\t'NUMPAD_0': 96,\r\n\t'NUMPAD_1': 97,\r\n\t'NUMPAD_2': 98,\r\n\t'NUMPAD_3': 99,\r\n\t'NUMPAD_4': 100,\r\n\t'NUMPAD_5': 101,\r\n\t'NUMPAD_6': 102,\r\n\t'NUMPAD_7': 103,\r\n\t'NUMPAD_8': 104,\r\n\t'NUMPAD_9': 105,\r\n\t'MULTIPLY': 106,\r\n\t'ADD': 107,\r\n\t'SUBSTRACT': 109,\r\n\t'DECIMAL': 110,\r\n\t'DIVIDE': 111,\r\n\t'F1': 112,\r\n\t'F2': 113,\r\n\t'F3': 114,\r\n\t'F4': 115,\r\n\t'F5': 116,\r\n\t'F6': 117,\r\n\t'F7': 118,\r\n\t'F8': 119,\r\n\t'F9': 120,\r\n\t'F10': 121,\r\n\t'F11': 122,\r\n\t'F12': 123,\r\n\t'SHIFT': 16,\r\n\t'CTRL': 17,\r\n\t'ALT': 18,\r\n\t'PLUS': 187,\r\n\t'COMMA': 188,\r\n\t'MINUS': 189,\r\n\t'PERIOD': 190\r\n};\r\n\r\nfunction testHit(ctx) {\r\n  try{\r\n    return ctx.getImageData(0,0,1,1).data[3] > 1;\r\n  } catch(e) {\r\n    throw 'Error: when testHit';\r\n  }\r\n}\r\n\r\nexport let pointer = undefined;\r\n\r\nexport function makePointer(element, scale = 1) {\r\n  if(pointer) {\r\n    console.error('pointer already instantiated');\r\n    return pointer; \r\n  }\r\n  let _pointer = {\r\n    element: element,\r\n    scale: scale,\r\n    _x: 0,\r\n    _y: 0,\r\n    tappedTime: 200,\r\n\r\n    get x() {\r\n      return this._x / this.scale;\r\n    },\r\n    get y() {\r\n      return this._y / this.scale;\r\n    },\r\n\r\n    get centerX() {\r\n      return this.x;\r\n    },\r\n    get centerY() {\r\n      return this.y;\r\n    },\r\n\r\n    get position() {\r\n      return {\r\n        x: this.x,\r\n        y: this.y\r\n      };\r\n    },\r\n\r\n    isDown: false,\r\n    isUp: true,\r\n    tapped: false,\r\n\r\n    downTime: 0,\r\n    elapsedTime: 0,\r\n\r\n    press: undefined,\r\n    release: undefined,\r\n    tap: undefined,\r\n\r\n    dragSprite: null,\r\n    dragOffsetX: 0,\r\n    dragOffsetY: 0,\r\n\r\n    moveHandler(event) {\r\n      let element = event.target;\r\n      this._x = (event.pageX - element.offsetLeft);\r\n      this._y = (event.pageY - element.offsetTop);\r\n      event.preventDefault();\r\n    },\r\n\r\n    touchmoveHandler(event) {\r\n      let element = event.target;\r\n      this._x = (event.targetTouches[0].pageX -element.offsetLeft);\r\n      this._y = (event.targetTouches[0].pageY -element.offsetTop);\r\n      event.preventDefault();\r\n    },\r\n\r\n    downHandler(event) {\r\n      this.isDown = true;\r\n      this.isUp = false;\r\n      this.tapped = false;\r\n      this.downTime = Date.now();\r\n      if(this.press)\r\n        this.press();\r\n      event.preventDefault();\r\n    },\r\n\r\n    touchstartHandler(event) {\r\n      let element = event.target;\r\n      this._x = event.targetTouches[0].pageX - element.offsetLeft;\r\n      this._y = event.targetTouches[0].pageY - element.offsetTop;\r\n\r\n      this.isDown = true;\r\n      this.isUp = false;\r\n      this.isDown = false;\r\n      this.downTime = Date.now();\r\n      if(this.press) this.press();\r\n      event.preventDefault();\r\n    },\r\n\r\n    upHandler(event) {\r\n      this.elapsedTime = Math.abs(this.downTime - Date.now());\r\n      if(this.elapsedTime <= this.tappedTime && this.tapped === false) {\r\n        this.tapped = true;\r\n        if(this.tap) this.tap();\r\n      }\r\n      this.isUp = true;\r\n      this.isDown = false;\r\n      if(this.release) this.release();\r\n      event.preventDefault();\r\n    },\r\n\r\n    touchendHandler(event) {\r\n      this.elapsedTime = Math.abs(this.downTime - Date.now());\r\n      if(this.elapsedTime <= this.tappedTime && this.tapped === false) {\r\n        this.tapped = true;\r\n        if(this.tap) this.tap();\r\n      }\r\n      this.isUp = true;\r\n      this.isDown = false;\r\n      if(this.release) this.release();\r\n      event.preventDefault();\r\n    },\r\n\r\n    // FIXME: 多层变换没处理好，可能需要sprite保持一个变换矩阵(全局)才能达到( 参考：游戏编程模式 )\r\n    hitTestSpritePixel(sprite) {\r\n      let ctx = DisplayObject.hitTestCanvas.ctx;\r\n      // ctx.save();\r\n      ctx.setTransform(1, 0, 0, 1, -this.x, -this.y);\r\n      // ctx.transform(1,0,0,1,sprite.x,sprite.y);\r\n      ctx.translate(\r\n        sprite.gx + (sprite.width * sprite.pivotX),\r\n        sprite.gy + (sprite.height * sprite.pivotY)\r\n      );\r\n      ctx.rotate(sprite.rotation);\r\n      ctx.scale(sprite.scaleX, sprite.scaleY);\r\n\r\n      sprite.render(ctx);\r\n      let hit = testHit(ctx);\r\n      ctx.setTransform(1,0,0,1,0,0);\r\n      ctx.clearRect(0,0,1,1);\r\n      // ctx.clearRect(0,0,512,256);\r\n\r\n      // ctx.restore();\r\n      if(hit) console.log('pixel hit');\r\n      return hit;\r\n    },\r\n\r\n    // FIXME: 多层变换没处理好，可能需要sprite保持一个变换矩阵(全局)才能达到( 参考：游戏编程模式 )\r\n    hitTestSpriteScaled(sprite) {\r\n      let hit = false;\r\n      if(!sprite.circular) {\r\n        let center = sprite.gCenter;\r\n        let halfWidht = (sprite.width >> 1) * sprite.scaleX;\r\n        let halfHeight = (sprite.height >> 1) * sprite.scaleY;\r\n        let left =  center.x - halfWidht,\r\n            right = center.x + halfWidht,\r\n            top = center.y - halfHeight,\r\n            bottom = center.y + halfHeight;\r\n\r\n        hit = this.x > left && this.x < right\r\n          && this.y > top && this.y < bottom;\r\n      } else {\r\n        // FIXME: 还没有处理圆形\r\n        let vx = this.x - (sprite.gx + sprite.radius),\r\n        vy = this.y - (sprite.gy + sprite.radius),\r\n        distance = Math.sqrt(vx * vx + vy * vy);\r\n        hit = distance < sprite.radius;\r\n      }\r\n      // if(hit) console.log('scaled hit');\r\n      return hit;\r\n    },\r\n\r\n    hitTestSpriteNormal(sprite) {\r\n      let hit = false;\r\n      if(!sprite.circular) {\r\n        let left =  sprite.gx,\r\n            right = sprite.gx + sprite.width,\r\n            top = sprite.gy,\r\n            bottom = sprite.gy + sprite.height;\r\n\r\n        hit = this.x > left && this.x < right\r\n          && this.y > top && this.y < bottom;\r\n      } else {\r\n        let vx = this.x - (sprite.gx + sprite.radius),\r\n            vy = this.y - (sprite.gy + sprite.radius),\r\n            distance = Math.sqrt(vx * vx + vy * vy);\r\n        hit = distance < sprite.radius;\r\n      }\r\n      return hit;\r\n    },\r\n\r\n    // 可能需要sprite保持一个变换矩阵(全局),使用pixel检测\r\n    hitTestSprite(sprite) {\r\n      if(sprite.rotation != 0) {\r\n        return this.hitTestSpritePixel(sprite);\r\n      } else if(sprite.scaleX != 1 || sprite.scaleY != 1){\r\n        return this.hitTestSpriteScaled(sprite);\r\n      } else {\r\n        return this.hitTestSpriteNormal(sprite);\r\n      }\r\n    },\r\n\r\n    updateDragAndDrop(draggableSprites) {\r\n      if(this.isDown) {\r\n        if(this.dragSprite === null) {\r\n          for(let i = draggableSprites.length -1; i > -1; --i) {\r\n            let sprite = draggableSprites[i];\r\n            if(sprite.draggable && this.hitTestSprite(sprite)){\r\n              this.dragOffsetX = this.x - sprite.gx;\r\n              this.dragOffsetY = this.y - sprite.gy;\r\n              this.dragSprite = sprite;\r\n              let children = sprite.parent.children;\r\n              children.splice(children.indexOf(sprite), 1);\r\n              children.push(sprite);\r\n\r\n              draggableSprites.splice(draggableSprites.indexOf(sprite),1);\r\n              draggableSprites.push(sprite);\r\n\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          this.dragSprite.x = this.x - this.dragOffsetX;\r\n          this.dragSprite.y = this.y - this.dragOffsetY;\r\n        }\r\n      }\r\n\r\n      if(this.isUp)\r\n        this.dragSprite = null;\r\n\r\n      draggableSprites.some(sprite =>{\r\n        if(sprite.draggable && this.hitTestSprite(sprite)) {\r\n          this.element.style.cursor = 'pointer';\r\n          return true;\r\n        } else {\r\n          this.element.style.cursor = 'auto';\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  element.addEventListener('mousemove', _pointer.moveHandler.bind(_pointer), false);\r\n  element.addEventListener(\"mousedown\", _pointer.downHandler.bind(_pointer), false);\r\n  window.addEventListener(\"mouseup\", _pointer.upHandler.bind(_pointer), false);\r\n\r\n  element.addEventListener(\"touchmove\", _pointer.touchmoveHandler.bind(_pointer), false);\r\n  element.addEventListener(\"touchstart\", _pointer.touchstartHandler.bind(_pointer), false);\r\n  window.addEventListener(\"touchend\", _pointer.touchendHandler.bind(_pointer), false);\r\n\r\n  // Disable the default actions on the 'canvas'\r\n  element.style.touchAction = \"none\";\r\n\r\n  pointer = _pointer;\r\n  return _pointer;\r\n}\r\n\r\nexport function keyboard(keyCode) {\r\n  let key = {};\r\n  key.code = keyCode;\r\n  key.isDown = false;\r\n  key.isUp = true;\r\n  key.press = undefined;\r\n  key.release = undefined;\r\n\r\n  key.downHandler = function(event) {\r\n    if(event.keyCode === key.code){\r\n      if(key.isUp && key.press) key.press();\r\n      key.isDown = true;\r\n      key.isUp = false;\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  key.upHandler = function(event) {\r\n    if(event.keyCode === key.code){\r\n      if(key.isDown && key.release) key.release();\r\n      key.isDown = false;\r\n      key.isUp = true;\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  window.addEventListener('keydown', key.downHandler.bind(key), false);\r\n  window.addEventListener('keyup', key.upHandler.bind(key), false);\r\n\r\n  return key;\r\n}\r\n","import DisplayObject from './DisplayObject.js';\r\nimport {Button} from './Button.js';\r\nimport {renderer} from './Renderer.js';\r\nimport {pointer} from './input.js';\r\n\r\nexport let draggableSprites = [];\r\nexport let buttons = [];\r\n\r\nexport function updateDragAndDrop() {\r\n  let canvas = renderer.canvas;\r\n  let dragSprite = null,\r\n    dragOffsetX = 0,\r\n    dragOffsetY = 0;\r\n\r\n  if (pointer.isDown) {\r\n    if (dragSprite === null) {\r\n      for (var i = draggableSprites.length - 1; i > -1; i--) {\r\n        let sprite = draggableSprites[i];\r\n        if (pointer.hitTestSprite(sprite) && sprite.draggable) {\r\n          dragOffsetX = pointer.x - sprite.gx;\r\n          dragOffsetY = pointer.y - sprite.gy;\r\n          dragSprite = sprite;\r\n          let children = sprite.parent.children;\r\n          children.splice(children.indexOf(sprite), 1);\r\n          children.push(sprite);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      dragSprite.x = pointer.x - dragOffsetX;\r\n      dragSprite.y = pointer.y - dragOffsetY;\r\n    }\r\n  }\r\n\r\n  if (pointer.isUp) {\r\n    dragSprite = null;\r\n  }\r\n\r\n  draggableSprites.some(sprite => {\r\n    if (pointer.hitTestSprite(sprite) && sprite.draggable) {\r\n      canvas.style.cursor = \"pointer\";\r\n      return true;\r\n    } else {\r\n      canvas.style.cursor = \"auto\";\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nfunction makeInteractive(o) {\r\n  o.press = o.press || undefined;\r\n  o.release = o.release || undefined;\r\n  o.over = o.over || undefined;\r\n  o.out = o.out || undefined;\r\n  o.tap = o.tap || undefined;\r\n\r\n  o.state = \"up\";\r\n  o.action = \"\";\r\n  o.pressed = false;\r\n  o.hoverOver = false;\r\n\r\n    //  保持原始 update 到 preUpdate\r\n  if(o.update)\r\n    o.preUpdate = o.update;\r\n\r\n  o.update = (dt) => {\r\n    // 调用原始update\r\n    if(o.preUpdate)\r\n      o.preUpdate(dt);\r\n    \r\n    let canvas = renderer.canvas;\r\n    // console.log('interactive update');\r\n    if (o.visible == false) return;\r\n    let hit = pointer.hitTestSprite(o);\r\n\r\n    if (pointer.isUp) {\r\n      o.state = \"up\";\r\n      if (o instanceof Button) o.gotoAndStop(0);\r\n    }\r\n\r\n    if (hit) {\r\n      o.state = \"over\";\r\n      if (o.frames && o.frames.length === 3 && o instanceof Button) {\r\n        o.gotoAndStop(1);\r\n      }\r\n\r\n      if (pointer.isDown) {\r\n        o.state = \"down\";\r\n        if (o instanceof Button) {\r\n          if (o.frames.length === 3) {\r\n            o.gotoAndStop(2);\r\n          } else {\r\n            o.gotoAndStop(1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (o.state === \"down\") {\r\n      if (!o.pressed) {\r\n        if (o.press) o.press();\r\n        o.pressed = true;\r\n        o.action = \"pressed\";\r\n      }\r\n    }\r\n\r\n    if (o.state === \"over\") {\r\n      if (o.pressed) {\r\n        if (o.release) o.release();\r\n        o.pressed = false;\r\n        o.action = \"released\";\r\n        if (pointer.tapped && o.tap) o.tap();\r\n      }\r\n\r\n      if (!o.hoverOver) {\r\n        if (o.over) o.over();\r\n        o.hoverOver = true;\r\n      }\r\n    }\r\n\r\n    if (o.state === \"up\") {\r\n      if (o.pressed) {\r\n        if (o.release) o.release();\r\n        o.pressed = false;\r\n        o.action = \"released\";\r\n      }\r\n\r\n      if (o.hoverOver) {\r\n        if (o.out) o.out();\r\n        o.hoverOver = false;\r\n      }\r\n    }\r\n\r\n    // 鼠标效果\r\n    if (o.state === \"over\" || o.state === \"down\") {\r\n        renderer.canvas.style.cursor = \"pointer\";\r\n    }\r\n\r\n  };\r\n}\r\n\r\nObject.defineProperties(DisplayObject.prototype, {\r\n  interactive: {\r\n    get() {\r\n      return this._interactive;\r\n    },\r\n    set(value) {\r\n      if (value === true) {\r\n        makeInteractive(this);\r\n        // buttons.push(this);\r\n        this._interactive = true;\r\n      }\r\n      if (value === false) {\r\n        // buttons.splice(buttons.indexOf(this), 1);\r\n        this._interactive = false;\r\n      }\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  },\r\n  draggable: {\r\n    get() {\r\n      return this._draggable;\r\n    },\r\n    set(value) {\r\n      if (value === true) {\r\n        draggableSprites.push(this);\r\n        this._draggable = true;\r\n      }\r\n      if (value === false) {\r\n        draggableSprites.splice(draggableSprites.indexOf(this), 1);\r\n      }\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  }\r\n});\r\n","import comment from './common.js';\r\n\r\nexport function makeCanvas(width,\r\n                    height,\r\n                    type = '2d',\r\n                    // border = '1px dashed black',\r\n                    border = '',\r\n                    backgroundColor = 'white') {\r\n\r\n  let canvas = $$new('canvas');\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  canvas.style.border = border;\r\n  canvas.style.backgroundColor = backgroundColor;\r\n  // document.body.appendChild(canvas);\r\n\r\n  canvas.ctx = canvas.getContext(type);\r\n\r\n  return canvas;\r\n}\r\n\r\n\r\nexport function outsideBounds(sprite, bounds, extra = undefined){\r\n\r\n  let x = bounds.x,\r\n      y = bounds.y,\r\n      width = bounds.width,\r\n      height = bounds.height;\r\n\r\n  let collision;\r\n\r\n  if (sprite.x < x - sprite.width) {\r\n    collision = \"left\";\r\n  }\r\n  //Top\r\n  if (sprite.y < y - sprite.height) {\r\n    collision = \"top\";\r\n  }\r\n  //Right\r\n  if (sprite.x > width) {\r\n    collision = \"right\";\r\n  }\r\n  //Bottom\r\n  if (sprite.y > height) {\r\n    collision = \"bottom\";\r\n  }\r\n\r\n  if (collision && extra) extra(collision);\r\n\r\n  return collision;\r\n}\r\n\r\nexport function contain(sprite, bounds, bounce = false, extra = undefined) {\r\n  let x = bounds.x,\r\n    y = bounds.y,\r\n    width = bounds.width,\r\n    height = bounds.height;\r\n\r\n  let collision;\r\n\r\n  //Left\r\n  if (sprite.x < x) {\r\n    if (bounce) sprite.vx *= -1;\r\n    if (sprite.mass) sprite.vx /= sprite.mass;\r\n    sprite.x = x;\r\n    collision = \"left\";\r\n  }\r\n  //Top\r\n  if (sprite.y < y) {\r\n    if (bounce) sprite.vy *= -1;\r\n    if (sprite.mass) sprite.vy /= sprite.mass;\r\n    sprite.y = y;\r\n    collision = \"top\";\r\n  }\r\n  //Right\r\n  if (sprite.x + sprite.width > width) {\r\n    if (bounce) sprite.vx *= -1;\r\n    if (sprite.mass) sprite.vx /= sprite.mass;\r\n    sprite.x = width - sprite.width;\r\n    collision = \"right\";\r\n  }\r\n  //Bottom\r\n  if (sprite.y + sprite.height > height) {\r\n    if (bounce) sprite.vy *= -1;\r\n    if (sprite.mass) sprite.vy /= sprite.mass;\r\n    sprite.y = height - sprite.height;\r\n    collision = \"bottom\";\r\n  }\r\n\r\n  if (collision && extra) extra(collision);\r\n\r\n  return collision;\r\n}\r\n\r\nexport function distance(s1, s2) {\r\n  let vx = s2.centerX - s1.centerX;\r\n  let vy = s2.centerY - s1.centerY;\r\n  return Math.sqrt(vx * vx + vy * vy);\r\n}\r\n\r\nexport function followEase(follower, leader, speed) {\r\n  let vx = leader.centerX - follower.centerX;\r\n  let vy = leader.centerY - follower.centerY;\r\n  let distance = Math.sqrt(vx * vx + vy * vy);\r\n\r\n  if (distance >= 1) {\r\n    follower.x += vx * speed;\r\n    follower.y += vy * speed;\r\n  }\r\n}\r\n\r\nexport function followConstant(follower, leader, speed) {\r\n  let vx = leader.centerX - follower.centerX;\r\n  let vy = leader.centerY - follower.centerY;\r\n  let distance = Math.sqrt(vx * vx + vy * vy);\r\n\r\n  if (distance >= speed) {\r\n    follower.x += (vx / distance) * speed;\r\n    follower.y += (vy / distance) * speed;\r\n  }\r\n}\r\n\r\nexport function angle(s1, s2) {\r\n  return Math.atan2(\r\n    s2.centerY - s1.centerY,\r\n    s2.centerX - s1.centerX\r\n  );\r\n}\r\n\r\nexport function rotateSprite(rotatingSprite, centerSprite, distance, angle) {\r\n  rotatingSprite.x = centerSprite.centerX - rotatingSprite.parent.x +\r\n    (distance * Math.cos(angle)) -\r\n    rotatingSprite.halfWidth;\r\n\r\n  rotatingSprite.y = centerSprite.centerY - rotatingSprite.parent.y +\r\n    (distance * Math.sin(angle)) -\r\n    rotatingSprite.halfHeight;\r\n}\r\n\r\nexport function rotatePoint(pointX, pointY, distanceX, distanceY, angle) {\r\n  let point = {};\r\n  point.x = pointX + Math.cos(angle) * distanceX;\r\n  point.y = pointY + Math.sin(angle) * distanceY;\r\n  return point;\r\n}\r\n\r\nexport function randomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function randomFloat(min, max) {\r\n  return (Math.random() * (max - min)) + min;\r\n}\r\n","// import main from './test/gua_buy.js';\r\n// import main from './test/gua_list.js';\r\nimport main from './src/Lottery_Animate.js';\r\n\r\nmain();\r\n","import Tina from '../libs/tina/Tina.js';\r\nimport DisplayObject from '../libs/tina/DisplayObject.js';\r\nimport {Text} from '../libs/tina/Text.js';\r\nexport default function main() {\r\n\r\n}\r\nlet lotNum = window.lotNum || [];\r\nlet speeds = [15,13,14,13,15]; //每个球的速度\r\nlet circle = 2;//要转多少圈\r\n\r\nlet qiuNum = 5;// 球的数量\r\nlet qiumen = [];\r\n\r\nlet count = 12; //有几个数字\r\nlet num = []; //排列数组\r\n//let numX = 35;//数字的间距\r\nlet numH = 90;//排列数字的间距\r\nlet totalH = numH * count;//排列数字的 总长度\r\n\r\nlet assetseot;\r\nif(navigator.userAgent.split(\";\")[1].toLowerCase().indexOf(\"msie 10.0\")==\"-1\"?false:true){\r\n  assetseot = 'assets/impact.ttf'\r\n}\r\nelse{\r\n  assetseot = 'assets/impact.ttf'\r\n}\r\n\r\nlet t = new Tina(580,96,game,[assetseot,'assets/qiu.png','assets/bai.png']);\r\n\r\nclass Qiuqiu extends DisplayObject{\r\n  constructor() {\r\n    super();\r\n    this.speed = undefined;\r\n    this.loopNum = undefined;\r\n    this.showNum = undefined;\r\n    this.numbers = [];\r\n\r\n    //定义背景\r\n    this.bg = new t.Sprite(t.assets['assets/qiu.png']);\r\n    this.bai = new t.Sprite(t.assets['assets/bai.png']);\r\n    this.bai.x = 16;\r\n    this.bai.y = -55;\r\n    this.bai2 = new t.Sprite(t.assets['assets/bai.png']);\r\n    this.bai2.x = 16;\r\n    this.bai2.y = 70;\r\n\r\n    //定义数字图片\r\n    for(let i=0;i<count;i++){\r\n      let num;\r\n      if( i <= 9 ){\r\n        num =  new Text('0' + i,'35px impact','black');\r\n      }\r\n      else{\r\n        num =  new Text(i,'35px impact','black');\r\n      }\r\n      num.width = 36;\r\n      this.numbers[i] = num;\r\n      this.addChild(num);\r\n    }\r\n    this.add(this.bai,this.bai2);\r\n    this.addChild(this.bg);\r\n    this.init();\r\n  }\r\n\r\n  // 数字排版\r\n  init(){\r\n    for(let i =0; i<count;++i){\r\n      this.bg.putCenter(this.numbers[i]);\r\n      this.numbers[i].y = numH * i;\r\n      if(this.numbers[i].content == 11){\r\n        this.numbers[i].x = 34;\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  // 速度定义\r\n  play(speed,loopNum,showNum){\r\n    this.speed = speed;\r\n    this.loopNum = loopNum;\r\n    this.showNum = showNum;\r\n  }\r\n\r\n  //特效\r\n  update(){\r\n    //当速度 speed 等于零的时候 把 要停的字母排位到最上面\r\n    //并且让他旋转几圈\r\n    if(this.speed > 0){\r\n      for(let i = 0; i < count; i++){\r\n        this.numbers[i].y += this.speed;\r\n        var bottomY = 52;\r\n        if(this.numbers[i].y >= bottomY){\r\n          this.numbers[i].y = this.numbers[i].y - totalH;\r\n          if(i === this.showNum)\r\n            this.loopNum--;\r\n        }\r\n      }\r\n      //当旋转完结以后，要停的数字在以旋转的方式停下来。\r\n      if(this.loopNum === 0){\r\n        let tmp;\r\n        if(navigator.userAgent.indexOf(\"Chrome\")!=-1){\r\n          tmp = (21 -  this.numbers[this.showNum].y);\r\n        }else if(navigator.userAgent.split(\";\")[1].toLowerCase().indexOf(\"msie 10.0\")==\"-1\"?false:true) {\r\n          tmp = (22 -  this.numbers[this.showNum].y);\r\n        }\r\n        else{\r\n          tmp = (26 -  this.numbers[this.showNum].y);\r\n        }\r\n        if(tmp < this.speed){\r\n          for(let i = 0; i < count; i++) {\r\n            this.numbers[i].y += tmp;\r\n          }\r\n          this.speed = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n//window.kaisi = function(lotNum){\r\n//  if(lotNum == undefined){\r\n//    this.num = 1;\r\n//  }\r\n//  else{\r\n//    this.num = lotNum;\r\n//  }\r\n//  for(let i = 0; i< qiuNum;++i) {\r\n//    qiumen[i].play(speeds[i],circle,this.num[i]);\r\n//    console.log(this.num[i]);\r\n//  }\r\n//}\r\n\r\nfunction go(lotNum){\r\n  if(lotNum == undefined){\r\n    this.num = 1;\r\n  }\r\n  else{\r\n    this.num = lotNum;\r\n  }\r\n  for(let i = 0; i< qiuNum;++i) {\r\n    qiumen[i].play(speeds[i],circle,this.num[i]);\r\n  }\r\n}\r\n\r\nfunction game() {\r\n  //循环添加球\r\n  for(let i = 0; i< qiuNum;++i) {\r\n    qiumen[i] = new Qiuqiu();\r\n    t.stage.addChild(qiumen[i]);\r\n    qiumen[i].x = i * 120;\r\n  };\r\n  //要循环的特效\r\n  //window.kaisi();\r\n  window.kaisi = go;\r\n}\r\n\r\nt.start();\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJsaWJzXFx0aW5hXFxCdXR0b24uanMiLCJsaWJzXFx0aW5hXFxEaXNwbGF5T2JqZWN0LmpzIiwibGlic1xcdGluYVxcRXZlbnRFbWl0dGVyLmpzIiwibGlic1xcdGluYVxcR3JvdXAuanMiLCJsaWJzXFx0aW5hXFxSZW5kZXJlci5qcyIsImxpYnNcXHRpbmFcXFNwcml0ZS5qcyIsImxpYnNcXHRpbmFcXFN0YWdlLmpzIiwibGlic1xcdGluYVxcVGV4dC5qcyIsImxpYnNcXHRpbmFcXFRpbmEuanMiLCJsaWJzXFx0aW5hXFxhc3NldHMuanMiLCJsaWJzXFx0aW5hXFxjb2xsaXNpb24uanMiLCJsaWJzXFx0aW5hXFxjb21tb24uanMiLCJsaWJzXFx0aW5hXFxncmFwaGljYWwuanMiLCJsaWJzXFx0aW5hXFxpbnB1dC5qcyIsImxpYnNcXHRpbmFcXGludGVyYWN0aXZlLmpzIiwibGlic1xcdGluYVxcdXRpbC5qcyIsIm1haW4uanMiLCJzcmNcXExvdHRlcnlfQW5pbWF0ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztRQ1dnQixNLEdBQUEsTTs7QUFYaEI7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0lBRWEsTSxXQUFBLE07OztBQUNYLGtCQUFZLE1BQVosRUFBa0M7QUFBQSxRQUFkLENBQWMsdUVBQVYsQ0FBVTtBQUFBLFFBQVAsQ0FBTyx1RUFBSCxDQUFHOztBQUFBOztBQUFBLGdIQUMxQixNQUQwQixFQUNsQixDQURrQixFQUNmLENBRGU7O0FBRWhDLFVBQUssV0FBTCxHQUFtQixJQUFuQjtBQUZnQztBQUdqQzs7Ozs7QUFHSSxTQUFTLE1BQVQsQ0FBZ0IsTUFBaEIsRUFBdUIsQ0FBdkIsRUFBeUIsQ0FBekIsRUFBNEI7QUFDakMsTUFBSSxTQUFTLElBQUksTUFBSixDQUFXLE1BQVgsRUFBa0IsQ0FBbEIsRUFBb0IsQ0FBcEIsQ0FBYjtBQUNBLGVBQU0sUUFBTixDQUFlLE1BQWY7QUFDQSxTQUFPLE1BQVA7QUFDRDs7Ozs7Ozs7Ozs7QUNmRDs7QUFDQTs7Ozs7Ozs7SUFFcUIsYTs7O0FBQ25CLDJCQUFjO0FBQUE7O0FBRVo7QUFGWTs7QUFHWixVQUFLLENBQUwsR0FBUyxDQUFUO0FBQ0EsVUFBSyxDQUFMLEdBQVMsQ0FBVDtBQUNBLFVBQUssS0FBTCxHQUFhLENBQWI7QUFDQSxVQUFLLEtBQUwsR0FBYSxDQUFiO0FBQ0EsVUFBSyxLQUFMLEdBQWEsQ0FBYjtBQUNBLFVBQUssTUFBTCxHQUFjLENBQWQ7O0FBRUE7QUFDQSxVQUFLLFFBQUwsR0FBZ0IsQ0FBaEI7QUFDQSxVQUFLLEtBQUwsR0FBYSxDQUFiO0FBQ0EsVUFBSyxPQUFMLEdBQWUsSUFBZjtBQUNBLFVBQUssTUFBTCxHQUFjLENBQWQ7QUFDQSxVQUFLLE1BQUwsR0FBYyxDQUFkOztBQUVBO0FBQ0EsVUFBSyxNQUFMLEdBQWMsR0FBZDtBQUNBLFVBQUssTUFBTCxHQUFjLEdBQWQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsVUFBSyxNQUFMLEdBQWMsQ0FBZDtBQUNBLFVBQUssUUFBTCxHQUFnQixFQUFoQjtBQUNBLFVBQUssTUFBTCxHQUFjLFNBQWQ7O0FBRUE7QUFDQSxVQUFLLE1BQUwsR0FBYyxFQUFkO0FBQ0EsVUFBSyxhQUFMLEdBQXFCLENBQXJCOztBQUVBO0FBQ0EsVUFBSyxVQUFMLEdBQWtCLFNBQWxCOztBQUVBLFVBQUssU0FBTCxHQUFpQixLQUFqQjs7QUFFQSxVQUFLLFlBQUwsR0FBb0IsS0FBcEI7QUExQ1k7QUEyQ2I7Ozs7NkJBeUJRLE0sRUFBUTtBQUNmLFVBQUksT0FBTyxNQUFYLEVBQ0UsT0FBTyxNQUFQLENBQWMsV0FBZCxDQUEwQixNQUExQjtBQUNGLGFBQU8sTUFBUCxHQUFnQixJQUFoQjtBQUNBLFdBQUssUUFBTCxDQUFjLElBQWQsQ0FBbUIsTUFBbkI7QUFDRDs7O2dDQUVXLE0sRUFBUTtBQUNsQixVQUFJLEtBQUssUUFBTCxDQUFjLE1BQWQsQ0FBSixFQUEyQjtBQUN6QixhQUFLLFFBQUwsQ0FBYyxNQUFkLENBQXFCLEtBQUssUUFBTCxDQUFjLE9BQWQsQ0FBc0IsTUFBdEIsQ0FBckIsRUFBb0QsQ0FBcEQ7QUFDQSxlQUFPLE1BQVAsR0FBZ0IsU0FBaEI7QUFDRCxPQUhELE1BSUUsTUFBTSxJQUFJLEtBQUosQ0FBVSxTQUFTLG1CQUFULEdBQStCLElBQXpDLENBQU47QUFDSDs7OzZCQUVRLE0sRUFBUTtBQUNmLGFBQVEsS0FBSyxRQUFMLENBQWMsT0FBZCxDQUFzQixNQUF0QixNQUFrQyxDQUFDLENBQTNDO0FBQ0Q7OztnQ0E4Q1csQyxFQUFHLEMsRUFBRztBQUNoQixXQUFLLENBQUwsR0FBUyxDQUFUO0FBQ0EsV0FBSyxDQUFMLEdBQVMsQ0FBVDtBQUNEOzs7OEJBc0NTLEMsRUFBNkI7QUFBQSxVQUExQixPQUEwQix1RUFBaEIsQ0FBZ0I7QUFBQSxVQUFiLE9BQWEsdUVBQUgsQ0FBRzs7QUFDckMsVUFBSSxJQUFJLElBQVI7QUFDQSxRQUFFLENBQUYsR0FBTyxFQUFFLENBQUYsR0FBTSxFQUFFLFNBQVIsR0FBb0IsRUFBRSxTQUF2QixHQUFvQyxPQUExQztBQUNBLFFBQUUsQ0FBRixHQUFPLEVBQUUsQ0FBRixHQUFNLEVBQUUsVUFBUixHQUFxQixFQUFFLFVBQXhCLEdBQXNDLE9BQTVDO0FBQ0Q7OzsyQkFFTSxDLEVBQTZCO0FBQUEsVUFBMUIsT0FBMEIsdUVBQWhCLENBQWdCO0FBQUEsVUFBYixPQUFhLHVFQUFILENBQUc7O0FBQ2xDLFVBQUksSUFBSSxJQUFSO0FBQ0EsUUFBRSxDQUFGLEdBQU8sRUFBRSxDQUFGLEdBQU0sRUFBRSxTQUFSLEdBQW9CLEVBQUUsU0FBdkIsR0FBb0MsT0FBMUM7QUFDQSxRQUFFLENBQUYsR0FBTyxFQUFFLENBQUYsR0FBTSxFQUFFLE1BQVQsR0FBbUIsT0FBekI7QUFDRDs7OzZCQUVRLEMsRUFBNkI7QUFBQSxVQUExQixPQUEwQix1RUFBaEIsQ0FBZ0I7QUFBQSxVQUFiLE9BQWEsdUVBQUgsQ0FBRzs7QUFDcEMsVUFBSSxJQUFJLElBQVI7QUFDQSxRQUFFLENBQUYsR0FBTyxFQUFFLENBQUYsR0FBTSxFQUFFLEtBQVQsR0FBa0IsT0FBeEI7QUFDQSxRQUFFLENBQUYsR0FBTyxFQUFFLENBQUYsR0FBTSxFQUFFLFVBQVIsR0FBcUIsRUFBRSxVQUF4QixHQUFzQyxPQUE1QztBQUNEOzs7OEJBRVMsQyxFQUE2QjtBQUFBLFVBQTFCLE9BQTBCLHVFQUFoQixDQUFnQjtBQUFBLFVBQWIsT0FBYSx1RUFBSCxDQUFHOztBQUNyQyxVQUFJLElBQUksSUFBUjtBQUNBLFFBQUUsQ0FBRixHQUFPLEVBQUUsQ0FBRixHQUFNLEVBQUUsU0FBUixHQUFvQixFQUFFLFNBQXZCLEdBQW9DLE9BQTFDO0FBQ0EsUUFBRSxDQUFGLEdBQU8sRUFBRSxDQUFGLEdBQU0sRUFBRSxNQUFULEdBQW1CLE9BQXpCO0FBQ0Q7Ozs0QkFFTyxDLEVBQTZCO0FBQUEsVUFBMUIsT0FBMEIsdUVBQWhCLENBQWdCO0FBQUEsVUFBYixPQUFhLHVFQUFILENBQUc7O0FBQ25DLFVBQUksSUFBSSxJQUFSO0FBQ0EsUUFBRSxDQUFGLEdBQU8sRUFBRSxDQUFGLEdBQU0sRUFBRSxLQUFULEdBQWtCLE9BQXhCO0FBQ0EsUUFBRSxDQUFGLEdBQU8sRUFBRSxDQUFGLEdBQU0sRUFBRSxVQUFSLEdBQXFCLEVBQUUsVUFBeEIsR0FBc0MsT0FBNUM7QUFDRDs7O2lDQUVZLE0sRUFBUSxNLEVBQVE7QUFDM0IsVUFBSSxTQUFTLEtBQUssUUFBTCxDQUFjLE9BQWQsQ0FBc0IsTUFBdEIsQ0FBYjtBQUNBLFVBQUksU0FBUyxLQUFLLFFBQUwsQ0FBYyxPQUFkLENBQXNCLE1BQXRCLENBQWI7QUFDQSxVQUFJLFdBQVcsQ0FBQyxDQUFaLElBQWlCLFdBQVcsQ0FBQyxDQUFqQyxFQUFvQztBQUNsQyxhQUFLLFFBQUwsQ0FBYyxNQUFkLElBQXdCLE1BQXhCO0FBQ0EsYUFBSyxRQUFMLENBQWMsTUFBZCxJQUF3QixNQUF4QjtBQUNELE9BSEQsTUFHTztBQUNMLGNBQU0sSUFBSSxLQUFKLGlEQUF3RCxJQUF4RCxDQUFOO0FBQ0Q7QUFDRjs7OzBCQUVlO0FBQUE7O0FBQUEsd0NBQVQsT0FBUztBQUFULGVBQVM7QUFBQTs7QUFDZCxjQUFRLE9BQVIsQ0FBZ0I7QUFBQSxlQUFVLE9BQUssUUFBTCxDQUFjLE1BQWQsQ0FBVjtBQUFBLE9BQWhCO0FBQ0Q7Ozs2QkFFa0I7QUFBQTs7QUFBQSx5Q0FBVCxPQUFTO0FBQVQsZUFBUztBQUFBOztBQUNqQixjQUFRLE9BQVIsQ0FBZ0Isa0JBQVU7QUFDeEIsZ0JBQVEsR0FBUixDQUFZLGFBQWEsT0FBTyxXQUFQLENBQW1CLElBQTVDO0FBQ0EsZUFBSyxXQUFMLENBQWlCLE1BQWpCO0FBQ0QsT0FIRDtBQUlEOzs7d0JBakxRO0FBQ1AsVUFBSSxLQUFLLE1BQVQsRUFDRSxPQUFPLEtBQUssQ0FBTCxHQUFTLEtBQUssTUFBTCxDQUFZLEVBQTVCLENBREYsS0FHRSxPQUFPLEtBQUssQ0FBWjtBQUNIOzs7d0JBRVE7QUFDUCxVQUFJLEtBQUssTUFBVCxFQUNFLE9BQU8sS0FBSyxDQUFMLEdBQVMsS0FBSyxNQUFMLENBQVksRUFBNUIsQ0FERixLQUdFLE9BQU8sS0FBSyxDQUFaO0FBQ0g7Ozt3QkFFVztBQUNWLGFBQU8sS0FBSyxNQUFaO0FBQ0QsSztzQkFDUyxLLEVBQU87QUFDZixXQUFLLE1BQUwsR0FBYyxLQUFkO0FBQ0EsVUFBSSxLQUFLLE1BQVQsRUFDRSxLQUFLLE1BQUwsQ0FBWSxRQUFaLENBQXFCLElBQXJCLENBQTBCLFVBQUMsQ0FBRCxFQUFJLENBQUo7QUFBQSxlQUFVLEVBQUUsTUFBRixHQUFXLEVBQUUsTUFBdkI7QUFBQSxPQUExQjtBQUNIOzs7d0JBcUJlO0FBQ2QsYUFBTyxLQUFLLEtBQUwsSUFBYyxDQUFyQjtBQUNEOzs7d0JBRWdCO0FBQ2YsYUFBTyxLQUFLLE1BQUwsSUFBZSxDQUF0QjtBQUNEOztBQUVEOzs7O3dCQUNjO0FBQ1osYUFBTyxLQUFLLENBQUwsR0FBUyxLQUFLLFNBQXJCO0FBQ0Q7Ozt3QkFFYTtBQUNaLGFBQU8sS0FBSyxDQUFMLEdBQVMsS0FBSyxVQUFyQjtBQUNEOzs7d0JBQ1k7QUFDWCxhQUFPO0FBQ0wsV0FBRyxLQUFLLE9BREg7QUFFTCxXQUFHLEtBQUs7QUFGSCxPQUFQO0FBSUQ7Ozt3QkFFYTtBQUNaLFVBQUksS0FBSyxNQUFULEVBQ0UsT0FBTyxFQUFDLEdBQUUsS0FBSyxPQUFMLEdBQWUsS0FBSyxNQUFMLENBQVksRUFBOUI7QUFDQyxXQUFFLEtBQUssT0FBTCxHQUFlLEtBQUssTUFBTCxDQUFZLEVBRDlCLEVBQVAsQ0FERixLQUlFLE9BQU8sS0FBSyxNQUFaO0FBRUg7Ozt3QkFFYztBQUNiLGFBQU87QUFDTCxXQUFHLEtBQUssQ0FESDtBQUVMLFdBQUcsS0FBSztBQUZILE9BQVA7QUFJRDs7O3NCQUVXLEcsRUFBSztBQUNmLFdBQUssQ0FBTCxHQUFTLElBQUksQ0FBYjtBQUNBLFdBQUssQ0FBTCxHQUFTLElBQUksQ0FBYjtBQUNEOzs7d0JBT1c7QUFDVixhQUFPLEVBQUMsR0FBRSxLQUFLLE1BQVI7QUFDQyxXQUFFLEtBQUssTUFEUixFQUFQO0FBRUQsSztzQkFDUyxLLEVBQU87QUFDZixVQUFHLGlCQUFpQixNQUFwQixFQUE0QixDQUMzQixDQURELE1BQ087QUFDTCxhQUFLLE1BQUwsR0FBYyxLQUFLLE1BQUwsR0FBYyxLQUE1QjtBQUNEO0FBQ0Y7Ozt3QkFFaUI7QUFDaEIsYUFBTztBQUNMLFdBQUcsQ0FERTtBQUVMLFdBQUcsQ0FGRTtBQUdMLGVBQU8sS0FBSyxLQUhQO0FBSUwsZ0JBQVEsS0FBSztBQUpSLE9BQVA7QUFNRDs7O3dCQUVrQjtBQUNqQixhQUFPO0FBQ0wsV0FBRyxLQUFLLEVBREg7QUFFTCxXQUFHLEtBQUssRUFGSDtBQUdMLGVBQU8sS0FBSyxFQUFMLEdBQVUsS0FBSyxLQUhqQjtBQUlMLGdCQUFRLEtBQUssRUFBTCxHQUFVLEtBQUs7QUFKbEIsT0FBUDtBQU1EOzs7d0JBRWE7QUFDWixVQUFJLEtBQUssUUFBTCxDQUFjLE1BQWQsS0FBeUIsQ0FBN0IsRUFDRSxPQUFPLElBQVAsQ0FERixLQUdFLE9BQU8sS0FBUDtBQUNIOzs7d0JBc0RrQjtBQUNqQixhQUFPLEtBQUssYUFBWjtBQUNEOzs7d0JBRWM7QUFDYixhQUFPLEtBQUssU0FBWjtBQUNELEs7c0JBRVksSyxFQUFPO0FBQ2xCLFVBQUksVUFBVSxJQUFWLElBQWtCLEtBQUssU0FBTCxLQUFtQixLQUF6QyxFQUFnRDtBQUM5QyxlQUFPLGdCQUFQLENBQXdCLElBQXhCLEVBQThCO0FBQzVCLG9CQUFVO0FBQ1IsZUFEUSxpQkFDRjtBQUNKLHFCQUFPLEtBQUssS0FBWjtBQUNELGFBSE87QUFJUixlQUpRLGVBSUosS0FKSSxFQUlHO0FBQ1QsbUJBQUssS0FBTCxHQUFhLEtBQUssTUFBTCxHQUFjLEtBQTNCO0FBQ0QsYUFOTzs7QUFPUix3QkFBWSxJQVBKO0FBUVIsMEJBQWM7QUFSTixXQURrQjtBQVc1QixrQkFBUTtBQUNOLGVBRE0saUJBQ0E7QUFDSixxQkFBTyxLQUFLLFNBQVo7QUFDRCxhQUhLO0FBSU4sZUFKTSxlQUlGLEtBSkUsRUFJSztBQUNULG1CQUFLLEtBQUwsR0FBYSxLQUFLLE1BQUwsR0FBYyxTQUFTLENBQXBDO0FBQ0QsYUFOSzs7QUFPTix3QkFBWSxJQVBOO0FBUU4sMEJBQWM7QUFSUjtBQVhvQixTQUE5QjtBQXNCQSxhQUFLLFNBQUwsR0FBaUIsSUFBakI7QUFDRDs7QUFFRCxVQUFJLFVBQVUsS0FBVixJQUFtQixLQUFLLFNBQUwsS0FBbUIsSUFBMUMsRUFBZ0Q7QUFDOUMsZUFBTyxLQUFLLFFBQVo7QUFDQSxlQUFPLEtBQUssTUFBWjtBQUNBLGFBQUssU0FBTCxHQUFpQixLQUFqQjtBQUNEO0FBQ0Y7Ozs7OztrQkF6UWtCLGE7OztBQTZRckIsSUFBSSxTQUFVLHVCQUFkO0FBQ0EsSUFBRyxVQUFVLE9BQU8sR0FBcEIsRUFBeUI7QUFDdkIsZ0JBQWMsYUFBZCxHQUE4QixNQUE5QjtBQUNBLFNBQU8sS0FBUCxHQUFlLE9BQU8sTUFBUCxHQUFnQixDQUEvQjtBQUNBO0FBQ0E7QUFDRDs7QUFFRDs7Ozs7Ozs7Ozs7OztJQ3hSYSxZLFdBQUEsWTtBQUNYLDBCQUFjO0FBQUE7O0FBQ1o7QUFDQSxTQUFLLFVBQUwsR0FBa0IsRUFBbEI7QUFDRDs7Ozt1QkFFRSxLLEVBQU8sUSxFQUFVO0FBQ2xCLFVBQUksT0FBTyxRQUFQLEtBQW9CLFVBQXhCLEVBQ0UsTUFBTSw2QkFBTjs7QUFFRixXQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsSUFBeUIsS0FBSyxVQUFMLENBQWdCLEtBQWhCLEtBQTBCLEVBQW5EO0FBQ0EsV0FBSyxVQUFMLENBQWdCLEtBQWhCLEVBQXVCLElBQXZCLENBQTRCLFFBQTVCO0FBQ0Q7Ozt5QkFFSSxLLEVBQU8sSSxFQUFNO0FBQ2hCLFVBQUksV0FBVyxLQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsQ0FBZjtBQUNBLFVBQUksUUFBSixFQUFjO0FBQ1osYUFBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLFNBQVMsTUFBN0IsRUFBcUMsR0FBckMsRUFBMEM7QUFDeEMsbUJBQVMsQ0FBVCxFQUFZLElBQVosQ0FBaUIsSUFBakIsRUFBdUIsSUFBdkI7QUFDRDtBQUNGO0FBQ0Y7OztnQ0FFVyxLLEVBQU8sTyxFQUFTO0FBQzFCLFVBQUksWUFBWSxLQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsQ0FBaEI7QUFDQSxXQUFLLElBQUksSUFBSSxDQUFiLEVBQWdCLElBQUksVUFBVSxNQUE5QixFQUFzQyxHQUF0QyxFQUEyQztBQUN6QyxZQUFJLENBQUMsT0FBRCxJQUFZLFdBQVcsVUFBVSxDQUFWLENBQTNCLEVBQXlDO0FBQ3ZDLGlCQUFPLElBQVA7QUFDRDtBQUNGO0FBQ0QsYUFBTyxLQUFQO0FBQ0Q7OzttQ0FFYyxLLEVBQU8sUSxFQUFVO0FBQzlCLFVBQUksT0FBTyxRQUFQLEtBQW9CLFVBQXhCLEVBQ0UsTUFBTSw2QkFBTjs7QUFHRixVQUFJLFlBQVksS0FBSyxVQUFMLENBQWdCLEtBQWhCLENBQWhCO0FBQ0EsVUFBSSxXQUFXLEtBQUssVUFBTCxDQUFnQixLQUFoQixFQUF1QixPQUF2QixDQUErQixRQUEvQixDQUFmO0FBQ0EsVUFBSSxZQUFZLENBQUMsQ0FBakIsRUFDRSxLQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsRUFBdUIsTUFBdkIsQ0FBOEIsUUFBOUIsRUFBd0MsQ0FBeEM7QUFDSDs7O3VDQUVrQixLLEVBQU87QUFDeEIsVUFBRyxLQUFILEVBQVM7QUFDUCxhQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsSUFBeUIsRUFBekI7QUFDRCxPQUZELE1BRU87QUFDTCxhQUFLLFVBQUwsR0FBa0IsRUFBbEI7QUFDRDtBQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7UUNOYSxLLEdBQUEsSztRQU1BLEksR0FBQSxJOztBQWxEaEI7Ozs7QUFDQTs7Ozs7Ozs7OztJQUlhLEssV0FBQSxLOzs7QUFDWCxtQkFBd0I7QUFBQTs7QUFBQTs7QUFBQSxzQ0FBVCxPQUFTO0FBQVQsYUFBUztBQUFBOztBQUV0QixZQUFRLE9BQVIsQ0FBZ0I7QUFBQSxhQUFVLE1BQUssUUFBTCxDQUFjLE1BQWQsQ0FBVjtBQUFBLEtBQWhCO0FBRnNCO0FBR3ZCOzs7OzZCQUVRLE0sRUFBUTtBQUNmLDZHQUFlLE1BQWY7QUFDQSxZQUFNLGFBQU4sQ0FBb0IsSUFBcEI7QUFDRDs7O2dDQUVXLE0sRUFBUTtBQUNsQixVQUFJLE9BQU8sTUFBUCxLQUFrQixJQUF0QixFQUE0QjtBQUMxQixhQUFLLFFBQUwsQ0FBYyxNQUFkLENBQXFCLEtBQUssUUFBTCxDQUFjLE9BQWQsQ0FBc0IsTUFBdEIsQ0FBckIsRUFBb0QsQ0FBcEQ7QUFDQSxjQUFNLGFBQU4sQ0FBb0IsSUFBcEI7QUFDRCxPQUhELE1BR087QUFDTCxjQUFNLElBQUksS0FBSixDQUFhLE1BQWIsMkJBQXlDLElBQXpDLENBQU47QUFDRDtBQUNGOzs7a0NBRW9CLEssRUFBTztBQUMxQixVQUFJLE1BQU0sUUFBTixDQUFlLE1BQWYsR0FBd0IsQ0FBNUIsRUFBK0I7QUFBQTtBQUM3QixjQUFJLFdBQVcsQ0FBZjtBQUNBLGNBQUksWUFBWSxDQUFoQjs7QUFFQSxnQkFBTSxRQUFOLENBQWUsT0FBZixDQUF1QixpQkFBUztBQUM5QixnQkFBSSxNQUFNLENBQU4sR0FBVSxNQUFNLEtBQWhCLEdBQXdCLFFBQTVCLEVBQ0UsV0FBVyxNQUFNLENBQU4sR0FBVSxNQUFNLEtBQTNCO0FBQ0YsZ0JBQUksTUFBTSxDQUFOLEdBQVUsTUFBTSxNQUFoQixHQUF5QixTQUE3QixFQUNFLFlBQVksTUFBTSxDQUFOLEdBQVUsTUFBTSxNQUE1QjtBQUNILFdBTEQ7O0FBT0EsZ0JBQU0sS0FBTixHQUFjLFFBQWQ7QUFDQSxnQkFBTSxNQUFOLEdBQWUsU0FBZjtBQVo2QjtBQWE5QjtBQUNGOzs7Ozs7QUFJSSxTQUFTLEtBQVQsR0FBMkI7QUFBQSxxQ0FBVCxPQUFTO0FBQVQsV0FBUztBQUFBOztBQUNoQyxNQUFJLDRDQUFhLEtBQWIsZ0JBQXNCLE9BQXRCLEtBQUo7QUFDQSxlQUFNLFFBQU4sQ0FBZSxNQUFmO0FBQ0EsU0FBTyxNQUFQO0FBQ0Q7O0FBRU0sU0FBUyxJQUFULEdBR2M7QUFBQSxNQUhBLE9BR0EsdUVBSFUsQ0FHVjtBQUFBLE1BSGEsSUFHYix1RUFIb0IsQ0FHcEI7QUFBQSxNQUh1QixTQUd2Qix1RUFIbUMsRUFHbkM7QUFBQSxNQUh1QyxVQUd2Qyx1RUFIb0QsRUFHcEQ7QUFBQSxNQUZuQixVQUVtQix1RUFGTixLQUVNO0FBQUEsTUFGQyxPQUVELHVFQUZXLENBRVg7QUFBQSxNQUZjLE9BRWQsdUVBRndCLENBRXhCO0FBQUEsTUFEbkIsVUFDbUIsdUVBRE4sU0FDTTtBQUFBLE1BQW5CLEtBQW1CLHVFQUFYLFNBQVc7OztBQUVuQixNQUFJLFlBQVksT0FBaEI7O0FBRUEsTUFBSSxhQUFhLFNBQWIsVUFBYSxHQUFNO0FBQ3JCLFFBQUksU0FBUyxVQUFVLElBQXZCOztBQUVBLFNBQUssSUFBSSxJQUFJLENBQWIsRUFBZ0IsSUFBSSxNQUFwQixFQUE0QixHQUE1QixFQUFpQztBQUMvQixVQUFJLElBQUssSUFBSSxPQUFMLEdBQWdCLFNBQXhCO0FBQ0EsVUFBSSxJQUFJLEtBQUssS0FBTCxDQUFXLElBQUksT0FBZixJQUEwQixVQUFsQztBQUNBLFVBQUksU0FBUyxZQUFiOztBQUVBLFVBQUksQ0FBQyxNQUFMLEVBQ0UsUUFBUSxJQUFSLENBQWEsNkJBQTZCLE1BQTFDOztBQUVGLGdCQUFVLFFBQVYsQ0FBbUIsTUFBbkI7O0FBRUEsVUFBSSxDQUFDLFVBQUwsRUFBaUI7QUFDZixlQUFPLENBQVAsR0FBVyxJQUFJLE9BQWY7QUFDQSxlQUFPLENBQVAsR0FBVyxJQUFJLE9BQWY7QUFDRCxPQUhELE1BR087QUFDTCxlQUFPLENBQVAsR0FBVyxJQUFLLFlBQVksQ0FBakIsR0FDVCxPQUFPLFNBREUsR0FDVSxPQURyQjtBQUVBLGVBQU8sQ0FBUCxHQUFXLElBQUssYUFBYSxDQUFsQixHQUNULE9BQU8sVUFERSxHQUNXLE9BRHRCO0FBRUQ7O0FBRUQsVUFBSSxLQUFKLEVBQVcsTUFBTSxNQUFOO0FBQ1o7QUFDRixHQXpCRDs7QUEyQkE7O0FBRUEsU0FBTyxTQUFQO0FBQ0Q7Ozs7Ozs7Ozs7OztBQ3ZGRDs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNLHVCQUF1QixHQUE3QjtBQUNBLElBQU0sd0JBQXdCLEdBQTlCOztBQUVPLElBQUksOEJBQVcsU0FBZjs7SUFFYyxRO0FBQ25CLHNCQUE2RjtBQUFBLFFBQWpGLEtBQWlGLHVFQUF6RSxvQkFBeUU7QUFBQSxRQUFuRCxNQUFtRCx1RUFBMUMscUJBQTBDO0FBQUEsUUFBbkIsS0FBbUIsdUVBQVgsU0FBVzs7QUFBQTs7QUFDM0YsUUFBRyxRQUFILEVBQWE7QUFDWCxjQUFRLEtBQVIsQ0FBYywrQkFBZDtBQUNBLGFBQU8sUUFBUDtBQUNEO0FBQ0QsU0FBSyxNQUFMLEdBQWMsc0JBQVcsS0FBWCxFQUFrQixNQUFsQixDQUFkO0FBQ0EsYUFBUyxJQUFULENBQWMsV0FBZCxDQUEwQixLQUFLLE1BQS9CO0FBQ0EsU0FBSyxLQUFMLEdBQWEsS0FBYjtBQUNBLFlBWE8sUUFXUCxjQUFXLElBQVg7QUFDQSxXQUFPLFFBQVA7QUFDRDs7Ozs2QkFVUTtBQUFBOztBQUNQLFVBQUksU0FBUyxLQUFLLE1BQWxCO0FBQ0EsVUFBSSxNQUFNLE9BQU8sR0FBakI7O0FBRUEsVUFBSSxTQUFKLENBQWMsQ0FBZCxFQUFpQixDQUFqQixFQUFvQixPQUFPLEtBQTNCLEVBQWtDLE9BQU8sTUFBekM7O0FBRUEsVUFBRyxLQUFLLEtBQVIsRUFBYztBQUNaLGFBQUssS0FBTCxDQUFXLFFBQVgsQ0FBb0IsT0FBcEIsQ0FBNEIsa0JBQVU7QUFDcEMsa0JBQU8sSUFBUCxRQUFrQixNQUFsQjtBQUNELFNBRkQ7QUFHRDtBQUNGOzs7d0JBbkJxQjtBQUNwQixhQUFPLEtBQUssTUFBTCxDQUFZLEtBQVosQ0FBa0IsZUFBekI7QUFDRCxLO3NCQUVtQixLLEVBQU07QUFDeEIsV0FBSyxNQUFMLENBQVksS0FBWixDQUFrQixlQUFsQixHQUFvQyxLQUFwQztBQUNEOzs7Ozs7a0JBbkJrQixROzs7QUFtQ3JCLFNBQVMsT0FBVCxDQUFnQixNQUFoQixFQUF3QjtBQUFBOztBQUN0QixNQUFJLFNBQVMsS0FBSyxNQUFsQjtBQUNBLE1BQUksTUFBTSxPQUFPLEdBQWpCO0FBQ0EsTUFBSSxPQUFPLE9BQVAsSUFDQSxPQUFPLEVBQVAsR0FBWSxPQUFPLEtBQVAsR0FBZSxPQUFPLEtBRGxDLElBRUEsT0FBTyxFQUFQLEdBQVksT0FBTyxLQUFuQixJQUE0QixDQUFDLE9BQU8sS0FGcEMsSUFHQSxPQUFPLEVBQVAsR0FBWSxPQUFPLE1BQVAsR0FBZ0IsT0FBTyxNQUhuQyxJQUlBLE9BQU8sRUFBUCxHQUFZLE9BQU8sTUFBbkIsSUFBNkIsQ0FBQyxPQUFPLE1BSnpDLEVBSWlEOztBQUUvQyxRQUFJLElBQUo7O0FBRUE7QUFDQSxRQUFJLFNBQUosQ0FDRSxPQUFPLENBQVAsR0FBWSxPQUFPLEtBQVAsR0FBZSxPQUFPLE1BRHBDLEVBRUUsT0FBTyxDQUFQLEdBQVksT0FBTyxNQUFQLEdBQWdCLE9BQU87QUFDbkM7QUFDQTtBQUNBO0FBTEY7QUFPQSxRQUFJLE1BQUosQ0FBVyxPQUFPLFFBQWxCO0FBQ0EsUUFBSSxLQUFKLENBQVUsT0FBTyxNQUFqQixFQUF5QixPQUFPLE1BQWhDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQUksV0FBSixHQUFrQixPQUFPLEtBQVAsR0FBZSxPQUFPLE1BQVAsQ0FBYyxLQUEvQzs7QUFFQTs7QUFFQSxRQUFJLE9BQU8sTUFBWCxFQUFtQixPQUFPLE1BQVAsQ0FBYyxHQUFkOztBQUVuQixRQUFJLE9BQU8sUUFBUCxJQUFtQixPQUFPLFFBQVAsQ0FBZ0IsTUFBaEIsR0FBeUIsQ0FBaEQsRUFBbUQ7QUFDakQsVUFBSSxTQUFKLENBQWMsQ0FBQyxPQUFPLEtBQVIsR0FBZ0IsT0FBTyxNQUFyQyxFQUE2QyxDQUFDLE9BQU8sTUFBUixHQUFpQixPQUFPLE1BQXJFO0FBQ0E7QUFDQTtBQUNBLGFBQU8sUUFBUCxDQUFnQixPQUFoQixDQUF3QixpQkFBUztBQUMvQixnQkFBTyxJQUFQLFNBQWtCLEtBQWxCO0FBQ0QsT0FGRDtBQUdEOztBQUVELFFBQUksT0FBSjtBQUNEO0FBQ0Y7Ozs7Ozs7Ozs7OztRQ3lMZSxNLEdBQUEsTTs7QUE5UWhCOzs7O0FBQ0E7Ozs7Ozs7Ozs7QUFJQTtJQUNhLE0sV0FBQSxNOzs7QUFDWCxrQkFBWSxNQUFaLEVBQWtDO0FBQUEsUUFBZCxDQUFjLHVFQUFWLENBQVU7QUFBQSxRQUFQLENBQU8sdUVBQUgsQ0FBRzs7QUFBQTs7QUFBQTs7QUFFaEMsVUFBSyxDQUFMLEdBQVMsQ0FBVDtBQUNBLFVBQUssQ0FBTCxHQUFTLENBQVQ7QUFDQSxRQUFHLENBQUMsTUFBSixFQUNFLFFBQVEsS0FBUiwrQkFBeUMsTUFBekM7O0FBRUYsUUFBSSxrQkFBa0IsS0FBdEIsRUFBNkI7QUFDM0IsWUFBSyxlQUFMLENBQXFCLE1BQXJCO0FBQ0QsS0FGRCxNQUVPLElBQUksT0FBTyxLQUFYLEVBQWtCO0FBQ3ZCLFlBQUssZUFBTCxDQUFxQixNQUFyQjtBQUNELEtBRk0sTUFFQSxJQUFJLE9BQU8sS0FBUCxJQUFnQixDQUFDLE9BQU8sSUFBNUIsRUFBa0M7QUFDdkMsWUFBSyxpQkFBTCxDQUF1QixNQUF2QjtBQUNELEtBRk0sTUFFQSxJQUFJLE9BQU8sS0FBUCxJQUFnQixPQUFPLElBQTNCLEVBQWlDO0FBQ3RDLFlBQUssdUJBQUwsQ0FBNkIsTUFBN0I7QUFDRCxLQUZNLE1BRUEsSUFBSSxrQkFBa0IsS0FBdEIsRUFBNkI7QUFDbEMsVUFBSSxPQUFPLENBQVAsS0FBYSxPQUFPLENBQVAsRUFBVSxNQUEzQixFQUFtQztBQUNqQyxjQUFLLHFCQUFMLENBQTJCLE1BQTNCO0FBQ0QsT0FGRCxNQUVPLElBQUksT0FBTyxDQUFQLGFBQXFCLEtBQXpCLEVBQWdDO0FBQ3JDLGNBQUssZ0JBQUwsQ0FBc0IsTUFBdEI7QUFDRCxPQUZNLE1BRUE7QUFDTCxjQUFNLElBQUksS0FBSiwyQkFBa0MsTUFBbEMseUJBQU47QUFDRDtBQUNGLEtBUk0sTUFRQTtBQUNMLFlBQU0sSUFBSSxLQUFKLHVCQUE4QixNQUE5Qix3QkFBTjtBQUNEO0FBekIrQjtBQTBCakM7Ozs7b0NBRWUsTSxFQUFRO0FBQ3RCLFVBQUksRUFBRSxrQkFBa0IsS0FBcEIsQ0FBSixFQUFnQztBQUM5QixjQUFNLElBQUksS0FBSixDQUFhLE1BQWIsNkJBQU47QUFDRCxPQUZELE1BRU87QUFDTCxhQUFLLE1BQUwsR0FBYyxNQUFkO0FBQ0EsYUFBSyxPQUFMLEdBQWUsQ0FBZjtBQUNBLGFBQUssT0FBTCxHQUFlLENBQWY7QUFDQSxhQUFLLEtBQUwsR0FBYSxPQUFPLEtBQXBCO0FBQ0EsYUFBSyxNQUFMLEdBQWMsT0FBTyxNQUFyQjtBQUNBLGFBQUssV0FBTCxHQUFtQixPQUFPLEtBQTFCO0FBQ0EsYUFBSyxZQUFMLEdBQW9CLE9BQU8sTUFBM0I7QUFDRDtBQUNGOzs7b0NBRWUsTSxFQUFRO0FBQ3RCLFdBQUssWUFBTCxHQUFvQixNQUFwQjtBQUNBLFdBQUssTUFBTCxHQUFjLEtBQUssWUFBTCxDQUFrQixNQUFoQztBQUNBLFdBQUssT0FBTCxHQUFlLEtBQUssWUFBTCxDQUFrQixLQUFsQixDQUF3QixDQUF2QztBQUNBLFdBQUssT0FBTCxHQUFlLEtBQUssWUFBTCxDQUFrQixLQUFsQixDQUF3QixDQUF2QztBQUNBLFdBQUssS0FBTCxHQUFhLEtBQUssV0FBTCxHQUFtQixLQUFLLFlBQUwsQ0FBa0IsS0FBbEIsQ0FBd0IsQ0FBeEQ7QUFDQSxXQUFLLE1BQUwsR0FBYyxLQUFLLFlBQUwsR0FBb0IsS0FBSyxZQUFMLENBQWtCLEtBQWxCLENBQXdCLENBQTFEO0FBQ0Q7OztzQ0FFaUIsTSxFQUFRO0FBQ3hCLFVBQUksRUFBRSxPQUFPLEtBQVAsWUFBd0IsS0FBMUIsQ0FBSixFQUFzQztBQUNwQyxjQUFNLElBQUksS0FBSixDQUFhLE9BQU8sS0FBcEIsNkJBQU47QUFDRCxPQUZELE1BRU87QUFDTCxhQUFLLE1BQUwsR0FBYyxPQUFPLEtBQXJCO0FBQ0EsYUFBSyxPQUFMLEdBQWUsT0FBTyxDQUF0QjtBQUNBLGFBQUssT0FBTCxHQUFlLE9BQU8sQ0FBdEI7QUFDQSxhQUFLLEtBQUwsR0FBYSxPQUFPLEtBQXBCO0FBQ0EsYUFBSyxNQUFMLEdBQWMsT0FBTyxNQUFyQjtBQUNBLGFBQUssV0FBTCxHQUFtQixPQUFPLEtBQTFCO0FBQ0EsYUFBSyxZQUFMLEdBQW9CLE9BQU8sTUFBM0I7QUFDRDtBQUNGOzs7NENBRXVCLE0sRUFBUTtBQUM5QixVQUFJLEVBQUUsT0FBTyxLQUFQLFlBQXdCLEtBQTFCLENBQUosRUFBc0M7QUFDcEMsY0FBTSxJQUFJLEtBQUosQ0FBYSxPQUFPLEtBQXBCLDZCQUFOO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsYUFBSyxNQUFMLEdBQWMsT0FBTyxLQUFyQjtBQUNBLGFBQUssTUFBTCxHQUFjLE9BQU8sSUFBckI7O0FBRUEsYUFBSyxPQUFMLEdBQWUsS0FBSyxNQUFMLENBQVksQ0FBWixFQUFlLENBQWYsQ0FBZjtBQUNBLGFBQUssT0FBTCxHQUFlLEtBQUssTUFBTCxDQUFZLENBQVosRUFBZSxDQUFmLENBQWY7QUFDQSxhQUFLLEtBQUwsR0FBYSxPQUFPLEtBQXBCO0FBQ0EsYUFBSyxNQUFMLEdBQWMsT0FBTyxNQUFyQjtBQUNBLGFBQUssV0FBTCxHQUFtQixPQUFPLEtBQTFCO0FBQ0EsYUFBSyxZQUFMLEdBQW9CLE9BQU8sTUFBM0I7QUFDRDtBQUNGOzs7MENBRXFCLE0sRUFBUTtBQUM1QixXQUFLLE1BQUwsR0FBYyxNQUFkO0FBQ0EsV0FBSyxNQUFMLEdBQWMsT0FBTyxDQUFQLEVBQVUsTUFBeEI7QUFDQSxXQUFLLE9BQUwsR0FBZSxPQUFPLENBQVAsRUFBVSxLQUFWLENBQWdCLENBQS9CO0FBQ0EsV0FBSyxPQUFMLEdBQWUsT0FBTyxDQUFQLEVBQVUsS0FBVixDQUFnQixDQUEvQjtBQUNBLFdBQUssS0FBTCxHQUFhLE9BQU8sQ0FBUCxFQUFVLEtBQVYsQ0FBZ0IsQ0FBN0I7QUFDQSxXQUFLLE1BQUwsR0FBYyxPQUFPLENBQVAsRUFBVSxLQUFWLENBQWdCLENBQTlCO0FBQ0EsV0FBSyxXQUFMLEdBQW1CLE9BQU8sQ0FBUCxFQUFVLEtBQVYsQ0FBZ0IsQ0FBbkM7QUFDQSxXQUFLLFlBQUwsR0FBb0IsT0FBTyxDQUFQLEVBQVUsS0FBVixDQUFnQixDQUFwQztBQUNEOzs7cUNBRWdCLE0sRUFBUTtBQUN2QixXQUFLLE1BQUwsR0FBYyxNQUFkO0FBQ0EsV0FBSyxNQUFMLEdBQWMsT0FBTyxDQUFQLENBQWQ7QUFDQSxXQUFLLE9BQUwsR0FBZSxDQUFmO0FBQ0EsV0FBSyxPQUFMLEdBQWUsQ0FBZjtBQUNBLFdBQUssS0FBTCxHQUFhLE9BQU8sQ0FBUCxFQUFVLEtBQXZCO0FBQ0EsV0FBSyxNQUFMLEdBQWMsT0FBTyxDQUFQLEVBQVUsS0FBeEI7QUFDQSxXQUFLLFdBQUwsR0FBbUIsT0FBTyxDQUFQLEVBQVUsS0FBN0I7QUFDQSxXQUFLLFlBQUwsR0FBb0IsT0FBTyxDQUFQLEVBQVUsTUFBOUI7QUFDRDs7O2dDQUVXLFcsRUFBYTtBQUN2QixVQUFJLEtBQUssTUFBTCxDQUFZLE1BQVosR0FBcUIsQ0FBckIsSUFBMEIsY0FBYyxLQUFLLE1BQUwsQ0FBWSxNQUF4RCxFQUFnRTtBQUM5RCxZQUFJLEtBQUssTUFBTCxDQUFZLENBQVosYUFBMEIsS0FBOUIsRUFBcUM7QUFDbkMsZUFBSyxPQUFMLEdBQWUsS0FBSyxNQUFMLENBQVksV0FBWixFQUF5QixDQUF6QixDQUFmO0FBQ0EsZUFBSyxPQUFMLEdBQWUsS0FBSyxNQUFMLENBQVksV0FBWixFQUF5QixDQUF6QixDQUFmO0FBQ0QsU0FIRCxNQUdPLElBQUksS0FBSyxNQUFMLENBQVksV0FBWixFQUF5QixLQUE3QixFQUFvQztBQUN6QyxlQUFLLE9BQUwsR0FBZSxLQUFLLE1BQUwsQ0FBWSxXQUFaLEVBQXlCLEtBQXpCLENBQStCLENBQTlDO0FBQ0EsZUFBSyxPQUFMLEdBQWUsS0FBSyxNQUFMLENBQVksV0FBWixFQUF5QixLQUF6QixDQUErQixDQUE5QztBQUNBLGVBQUssV0FBTCxHQUFtQixLQUFLLE1BQUwsQ0FBWSxXQUFaLEVBQXlCLEtBQXpCLENBQStCLENBQWxEO0FBQ0EsZUFBSyxZQUFMLEdBQW9CLEtBQUssTUFBTCxDQUFZLFdBQVosRUFBeUIsS0FBekIsQ0FBK0IsQ0FBbkQ7QUFDRCxTQUxNLE1BS0E7QUFDTCxlQUFLLE1BQUwsR0FBYyxLQUFLLE1BQUwsQ0FBWSxXQUFaLENBQWQ7QUFDQSxlQUFLLE9BQUwsR0FBZSxDQUFmO0FBQ0EsZUFBSyxPQUFMLEdBQWUsQ0FBZjtBQUNBLGVBQUssV0FBTCxHQUFtQixLQUFLLE1BQUwsQ0FBWSxLQUEvQjtBQUNBLGVBQUssWUFBTCxHQUFvQixLQUFLLE1BQUwsQ0FBWSxNQUFoQztBQUNEO0FBQ0QsYUFBSyxhQUFMLEdBQXFCLFdBQXJCO0FBQ0QsT0FqQkQsTUFpQk87QUFDTCxjQUFNLElBQUksS0FBSixtQkFBMEIsV0FBMUIscUJBQU47QUFDRDtBQUNGOzs7MkJBRU0sRyxFQUFLO0FBQ1YsVUFBSSxTQUFKLENBQ0UsS0FBSyxNQURQLEVBRUUsS0FBSyxPQUZQLEVBRWdCLEtBQUssT0FGckIsRUFHRSxLQUFLLFdBSFAsRUFHb0IsS0FBSyxZQUh6QixFQUlFLENBQUMsS0FBSyxLQUFOLEdBQWMsS0FBSyxNQUpyQixFQUk2QixDQUFDLEtBQUssTUFBTixHQUFlLEtBQUssTUFKakQsRUFLRSxLQUFLLEtBTFAsRUFLYyxLQUFLLE1BTG5CO0FBT0Q7OzswQkFFWSxNLEVBQVEsQyxFQUFHLEMsRUFBRyxLLEVBQU8sTSxFQUFRO0FBQ3hDLFVBQUksSUFBSSxFQUFSO0FBQ0EsUUFBRSxLQUFGLEdBQVUsTUFBVjtBQUNBLFFBQUUsQ0FBRixHQUFNLENBQU47QUFDQSxRQUFFLENBQUYsR0FBTSxDQUFOO0FBQ0EsUUFBRSxLQUFGLEdBQVUsS0FBVjtBQUNBLFFBQUUsTUFBRixHQUFXLE1BQVg7QUFDQSxhQUFPLENBQVA7QUFDRDs7OzJCQUVhLE0sRUFBUSxnQixFQUFrQixLLEVBQU8sTSxFQUFRO0FBQ3JELFVBQUksSUFBSSxFQUFSO0FBQ0EsUUFBRSxLQUFGLEdBQVUsTUFBVjtBQUNBLFFBQUUsSUFBRixHQUFTLGdCQUFUO0FBQ0EsUUFBRSxLQUFGLEdBQVUsS0FBVjtBQUNBLFFBQUUsTUFBRixHQUFXLE1BQVg7QUFDQSxhQUFPLENBQVA7QUFDRDs7OzhCQUVnQixLLEVBQU8sVSxFQUFZLFcsRUFBMEI7QUFBQSxVQUFiLE9BQWEsdUVBQUgsQ0FBRzs7QUFDNUQsVUFBSSxFQUFFLGlCQUFpQixLQUFuQixDQUFKLEVBQStCO0FBQzdCLGNBQU0sSUFBSSxLQUFKLENBQWEsS0FBYiw2QkFBTjtBQUNELE9BRkQsTUFFTztBQUNMLFlBQUksWUFBWSxFQUFoQjtBQUNBLFlBQUksVUFBVSxNQUFNLEtBQU4sR0FBYyxVQUE1QjtBQUFBLFlBQ0UsT0FBTyxNQUFNLE1BQU4sR0FBZSxXQUR4QjtBQUVBLFlBQUksaUJBQWlCLFVBQVUsSUFBL0I7O0FBRUEsYUFBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLGNBQXBCLEVBQW9DLEVBQUUsQ0FBdEMsRUFBeUM7QUFDdkMsY0FBSSxLQUFNLElBQUksT0FBZDtBQUNBLGNBQUksS0FBSyxLQUFLLEtBQUwsQ0FBVyxJQUFJLE9BQWYsQ0FBVDtBQUNBLGNBQUksSUFBSSxLQUFLLFVBQWI7QUFBQSxjQUNFLElBQUksS0FBSyxXQURYOztBQUdBLGNBQUksV0FBVyxVQUFVLENBQXpCLEVBQTRCO0FBQzFCLGlCQUFLLFVBQVcsVUFBVSxFQUExQjtBQUNBLGlCQUFLLFVBQVcsVUFBVSxFQUExQjtBQUNEO0FBQ0Qsb0JBQVUsSUFBVixDQUFlLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBZjtBQUNEO0FBQ0QsZUFBTyxPQUFPLE1BQVAsQ0FBYyxLQUFkLEVBQXFCLFNBQXJCLEVBQWdDLFVBQWhDLEVBQTRDLFdBQTVDLENBQVA7QUFDRDtBQUNGOzs7bUNBRXFCLE0sRUFBUTtBQUM1QixVQUFJLGVBQWUsQ0FBbkI7QUFBQSxVQUNFLGlCQUFpQixDQURuQjtBQUFBLFVBRUUsYUFBYSxDQUZmO0FBQUEsVUFHRSxXQUFXLENBSGI7QUFBQSxVQUlFLGdCQUFnQixTQUpsQjs7QUFNQSxlQUFTLElBQVQsQ0FBYyxXQUFkLEVBQTJCO0FBQ3pCO0FBQ0EsZUFBTyxXQUFQLENBQW1CLFdBQW5CO0FBQ0Q7O0FBRUQsZUFBUyxJQUFULEdBQWdCO0FBQ2QsWUFBSSxDQUFDLE9BQU8sT0FBWixFQUFxQjtBQUNuQix1QkFBYSxDQUFDLENBQUQsRUFBSSxPQUFPLE1BQVAsQ0FBYyxNQUFkLEdBQXVCLENBQTNCLENBQWI7QUFDRDtBQUNGOztBQUVELGVBQVMsSUFBVCxHQUFnQjtBQUNkLFlBQUksT0FBTyxPQUFYLEVBQW9CO0FBQ2xCO0FBQ0EsaUJBQU8sVUFBUCxDQUFrQixPQUFPLFlBQXpCO0FBQ0Q7QUFDRjs7QUFFRCxlQUFTLFlBQVQsQ0FBc0IsYUFBdEIsRUFBcUM7QUFDbkM7QUFDQSxxQkFBYSxjQUFjLENBQWQsQ0FBYjtBQUNBLG1CQUFXLGNBQWMsQ0FBZCxDQUFYO0FBQ0EseUJBQWlCLFdBQVcsVUFBNUI7QUFDQSxZQUFJLGVBQWUsQ0FBbkIsRUFBc0I7QUFDcEI7QUFDQTtBQUNEO0FBQ0QsWUFBSSxtQkFBbUIsQ0FBdkIsRUFBMEI7QUFDeEIsMkJBQWlCLENBQWpCO0FBQ0E7QUFDRDs7QUFFRCxZQUFJLENBQUMsT0FBTyxHQUFaLEVBQWlCLE9BQU8sR0FBUCxHQUFhLEVBQWI7QUFDakIsWUFBSSxZQUFZLE9BQU8sT0FBTyxHQUE5QjtBQUNBLGVBQU8sV0FBUCxDQUFtQixVQUFuQjs7QUFFQSxZQUFJLENBQUMsT0FBTyxPQUFaLEVBQXFCO0FBQ25CLDBCQUFnQixZQUFZLGFBQWEsSUFBYixDQUFrQixJQUFsQixDQUFaLEVBQXFDLFNBQXJDLENBQWhCO0FBQ0EsaUJBQU8sT0FBUCxHQUFpQixJQUFqQjtBQUNEO0FBQ0Y7O0FBRUQsZUFBUyxZQUFULEdBQXlCO0FBQ3ZCLFlBQUcsZUFBZSxjQUFsQixFQUFpQztBQUMvQixpQkFBTyxXQUFQLENBQW1CLE9BQU8sWUFBUCxHQUFvQixDQUF2QztBQUNBO0FBQ0QsU0FIRCxNQUdPO0FBQ0wsY0FBRyxPQUFPLElBQVYsRUFBZTtBQUNiLG1CQUFPLFdBQVAsQ0FBbUIsVUFBbkI7QUFDQSwyQkFBZSxDQUFmO0FBQ0Q7QUFDRjtBQUNGOztBQUVELGVBQVMsS0FBVCxHQUFrQjtBQUNoQixZQUFHLGtCQUFrQixTQUFsQixJQUErQixPQUFPLE9BQVAsS0FBbUIsSUFBckQsRUFBMEQ7QUFDeEQsaUJBQU8sT0FBUCxHQUFpQixLQUFqQjtBQUNBLHlCQUFjLENBQWQ7QUFDQSx1QkFBYSxDQUFiO0FBQ0EscUJBQVUsQ0FBVjtBQUNBLDJCQUFnQixDQUFoQjtBQUNBLHdCQUFjLGFBQWQ7QUFDRDtBQUNGOztBQUVELGFBQU8sSUFBUCxHQUFjLElBQWQ7QUFDQSxhQUFPLE9BQVAsR0FBaUIsS0FBakI7O0FBRUEsYUFBTyxJQUFQLEdBQWMsSUFBZDtBQUNBLGFBQU8sSUFBUCxHQUFjLElBQWQ7QUFDQSxhQUFPLElBQVAsR0FBYyxJQUFkO0FBQ0EsYUFBTyxZQUFQLEdBQXNCLFlBQXRCO0FBQ0Q7Ozs7OztBQUlJLFNBQVMsTUFBVCxDQUFnQixNQUFoQixFQUF3QixDQUF4QixFQUEyQixDQUEzQixFQUE4QjtBQUNuQyxNQUFJLFNBQVMsSUFBSSxNQUFKLENBQVcsTUFBWCxFQUFtQixDQUFuQixFQUFzQixDQUF0QixDQUFiO0FBQ0EsTUFBSSxPQUFPLE1BQVAsQ0FBYyxNQUFkLEdBQXVCLENBQTNCLEVBQThCLE9BQU8sY0FBUCxDQUFzQixNQUF0QjtBQUM5QixlQUFNLFFBQU4sQ0FBZSxNQUFmO0FBQ0EsU0FBTyxNQUFQO0FBQ0Q7Ozs7Ozs7Ozs7OztBQ25SRDs7Ozs7Ozs7Ozs7O0FBSUEsU0FBUyxPQUFULENBQWdCLEVBQWhCLEVBQW9CO0FBQ2xCLE1BQUksS0FBSyxRQUFMLElBQWlCLEtBQUssUUFBTCxDQUFjLE1BQWQsR0FBdUIsQ0FBNUMsRUFBK0M7QUFDN0MsU0FBSyxRQUFMLENBQWMsT0FBZCxDQUFzQixrQkFBVTtBQUM5QixVQUFHLFVBQVUsT0FBTyxNQUFwQixFQUNFLE9BQU8sTUFBUCxDQUFjLEVBQWQ7QUFDRixjQUFPLElBQVAsQ0FBWSxNQUFaLEVBQW9CLEVBQXBCO0FBQ0QsS0FKRDtBQUtEO0FBQ0Y7O0lBRUssSzs7O0FBQ0osbUJBQWM7QUFBQTs7QUFBQTtBQUViOzs7OzJCQUVNLEUsRUFBSTtBQUNULGNBQU8sSUFBUCxDQUFZLElBQVosRUFBaUIsRUFBakI7QUFDRDs7Ozs7O0FBR0ksSUFBSSx3QkFBUSxJQUFJLEtBQUosRUFBWjs7Ozs7Ozs7Ozs7O1FDZ0JTLEksR0FBQSxJOztBQXhDaEI7Ozs7QUFDQTs7Ozs7Ozs7OztJQUthLEksV0FBQSxJOzs7QUFDWCxrQkFFZ0I7QUFBQSxRQUZKLE9BRUksdUVBRk0sUUFFTjtBQUFBLFFBRGQsSUFDYyx1RUFEUCxpQkFDTztBQUFBLFFBRFksU0FDWix1RUFEd0IsS0FDeEI7QUFBQSxRQUFkLENBQWMsdUVBQVYsQ0FBVTtBQUFBLFFBQVAsQ0FBTyx1RUFBSCxDQUFHOztBQUFBOztBQUFBOztBQUdkLFVBQUssT0FBTCxHQUFlLE9BQWY7QUFDQSxVQUFLLElBQUwsR0FBWSxJQUFaO0FBQ0EsVUFBSyxTQUFMLEdBQWlCLFNBQWpCO0FBQ0EsVUFBSyxDQUFMLEdBQVMsQ0FBVDtBQUNBLFVBQUssQ0FBTCxHQUFTLENBQVQ7O0FBRUEsVUFBSyxZQUFMLEdBQW9CLEtBQXBCO0FBQ0EsVUFBSyxVQUFMLEdBQWtCLE1BQWxCO0FBVmM7QUFXZjs7OzsyQkFFTSxHLEVBQUs7QUFDVixVQUFJLElBQUosR0FBVyxLQUFLLElBQWhCO0FBQ0EsVUFBSSxXQUFKLEdBQWtCLEtBQUssV0FBdkI7QUFDQSxVQUFJLFNBQUosR0FBZ0IsS0FBSyxTQUFyQjtBQUNBLFVBQUksU0FBSixHQUFnQixLQUFLLFNBQXJCOztBQUVBLFVBQUksS0FBSyxLQUFMLEtBQWUsQ0FBbkIsRUFBc0IsS0FBSyxLQUFMLEdBQWEsSUFBSSxXQUFKLENBQWdCLEtBQUssT0FBckIsRUFBOEIsS0FBM0M7QUFDdEIsVUFBSSxLQUFLLE1BQUwsS0FBZ0IsQ0FBcEIsRUFBdUIsS0FBSyxNQUFMLEdBQWMsSUFBSSxXQUFKLENBQWdCLEdBQWhCLEVBQXFCLEtBQW5DO0FBQ3ZCLFVBQUksU0FBSixDQUFjLENBQUMsS0FBSyxLQUFOLEdBQWMsS0FBSyxNQUFqQyxFQUF5QyxDQUFDLEtBQUssTUFBTixHQUFlLEtBQUssTUFBN0Q7QUFDQSxVQUFJLFlBQUosR0FBbUIsS0FBSyxZQUF4QjtBQUNBLFVBQUksUUFBSixDQUNFLEtBQUssT0FEUCxFQUVFLENBRkYsRUFFSyxDQUZMO0FBSUEsVUFBSSxLQUFLLFVBQUwsS0FBb0IsTUFBeEIsRUFBZ0MsSUFBSSxVQUFKO0FBQ2pDOzs7Ozs7QUFHSSxTQUFTLElBQVQsQ0FBYyxPQUFkLEVBQXVCLElBQXZCLEVBQTZCLFNBQTdCLEVBQXdDLENBQXhDLEVBQTJDLENBQTNDLEVBQThDO0FBQ25ELE1BQUksU0FBUyxJQUFJLElBQUosQ0FBUyxPQUFULEVBQWtCLElBQWxCLEVBQXdCLFNBQXhCLEVBQW1DLENBQW5DLEVBQXNDLENBQXRDLENBQWI7QUFDQSxlQUFNLFFBQU4sQ0FBZSxNQUFmO0FBQ0EsU0FBTyxNQUFQO0FBQ0Q7Ozs7Ozs7Ozs7QUMvQkQ7OztRQXVUZ0IsSSxHQUFBLEk7O0FBcFVoQjs7SUFBWSxNOztBQUNaOztJQUFZLFk7O0FBQ1o7O0lBQVksYTs7QUFDWjs7SUFBWSxNOztBQUNaOztJQUFZLEs7O0FBQ1o7O0lBQVksSzs7QUFDWjs7SUFBWSxTOztBQUNaOztJQUFZLEk7O0FBQ1o7O0lBQVksTTs7QUFDWjs7SUFBWSxXOztBQUNaOztJQUFZLEs7O0FBQ1o7O0lBQVksUzs7QUFDWjs7SUFBWSxJOztBQUVaOzs7Ozs7Ozs7O0FBRUEsSUFBTSxnQkFBZ0IsR0FBdEI7QUFDQSxJQUFNLGlCQUFpQixHQUF2Qjs7QUFFQSxJQUFNLDJCQUEyQixTQUFqQztBQUNBLFNBQVMsSUFBVCxDQUFjLEtBQWQsQ0FBb0IsZUFBcEIsR0FBc0Msd0JBQXRDOztJQUVxQixJO0FBQ25CLGtCQUN1QztBQUFBLFFBRDNCLEtBQzJCLHVFQURuQixhQUNtQjtBQUFBLFFBREosTUFDSSx1RUFESyxjQUNMO0FBQUEsUUFBM0IsS0FBMkI7QUFBQSxRQUFwQixZQUFvQjtBQUFBLFFBQU4sSUFBTTs7QUFBQTs7QUFDckMsV0FBTyxNQUFQLEdBQWdCLE9BQU8sTUFBUCxJQUFpQixZQUE0QjtBQUFBLFVBQW5CLElBQW1CLHVFQUFaLEVBQVk7QUFBQSxVQUFSLE1BQVE7O0FBQ3pELFVBQUksQ0FBQyxNQUFMLEVBQWEsT0FBTyxJQUFQO0FBQ2IsV0FBSyxJQUFJLElBQVQsSUFBaUIsTUFBakIsRUFBeUI7QUFDdkIsYUFBSyxJQUFMLElBQWEsT0FBTyxJQUFQLENBQWI7QUFDRDtBQUNELGFBQU8sSUFBUDtBQUNELEtBTkg7QUFPQTtBQUNBLFdBQU8sTUFBUCxDQUFjLElBQWQsRUFBb0IsTUFBcEI7QUFDQSxXQUFPLE1BQVAsQ0FBYyxJQUFkLEVBQW9CLFlBQXBCO0FBQ0EsV0FBTyxNQUFQLENBQWMsSUFBZCxFQUFvQixhQUFwQjtBQUNBLFdBQU8sTUFBUCxDQUFjLElBQWQsRUFBb0IsTUFBcEI7QUFDQSxXQUFPLE1BQVAsQ0FBYyxJQUFkLEVBQW9CLEtBQXBCO0FBQ0EsV0FBTyxNQUFQLENBQWMsSUFBZCxFQUFvQixLQUFwQjtBQUNBLFdBQU8sTUFBUCxDQUFjLElBQWQsRUFBb0IsU0FBcEI7QUFDQSxXQUFPLE1BQVAsQ0FBYyxJQUFkLEVBQW9CLElBQXBCO0FBQ0EsV0FBTyxNQUFQLENBQWMsSUFBZCxFQUFvQixNQUFwQjtBQUNBLFdBQU8sTUFBUCxDQUFjLElBQWQsRUFBb0IsV0FBcEI7QUFDQSxXQUFPLE1BQVAsQ0FBYyxJQUFkLEVBQW9CLEtBQXBCO0FBQ0EsV0FBTyxNQUFQLENBQWMsSUFBZCxFQUFvQixTQUFwQjtBQUNBLFdBQU8sTUFBUCxDQUFjLElBQWQsRUFBb0IsSUFBcEI7QUFDQTs7QUFFQSxTQUFLLFFBQUwsR0FBZ0IsdUJBQWEsS0FBYixFQUFvQixNQUFwQixFQUE0QixLQUFLLEtBQWpDLENBQWhCO0FBQ0EsU0FBSyxLQUFMLENBQVcsS0FBWCxHQUFtQixLQUFLLFFBQUwsQ0FBYyxNQUFkLENBQXFCLEtBQXhDO0FBQ0EsU0FBSyxLQUFMLENBQVcsTUFBWCxHQUFvQixLQUFLLFFBQUwsQ0FBYyxNQUFkLENBQXFCLE1BQXpDOztBQUVBLFNBQUssT0FBTCxHQUFlLEtBQUssV0FBTCxDQUFpQixLQUFLLFFBQUwsQ0FBYyxNQUEvQixDQUFmO0FBQ0EsU0FBSyxLQUFMLEdBQWEsQ0FBYjs7QUFFQSxTQUFLLEtBQUwsR0FBYSxTQUFiOztBQUVBLFNBQUssSUFBTCxHQUFZLElBQVo7QUFDQSxTQUFLLEtBQUwsR0FBYSxLQUFiOztBQUVBLFNBQUssWUFBTCxHQUFvQixZQUFwQjs7QUFFQSxTQUFLLE1BQUwsR0FBYyxLQUFkOztBQUVBO0FBQ0EsU0FBSyxJQUFMLEdBQVksRUFBWjtBQUNBLFNBQUssSUFBTCxHQUFZLE9BQU8sS0FBSyxJQUF4QjtBQUNBLFNBQUssYUFBTCxHQUFxQixDQUFyQjtBQUNBLFNBQUssWUFBTCxHQUFvQixDQUFwQjtBQUNBLFNBQUssUUFBTCxHQUFnQixDQUFoQjtBQUNBLFNBQUssVUFBTCxHQUFrQixDQUFsQjtBQUNBLFNBQUssWUFBTCxHQUFvQixJQUFwQjtBQUNBLFNBQUssY0FBTCxHQUFzQixJQUF0Qjs7QUFJQSxRQUFJLENBQUMsS0FBSyxLQUFWLEVBQ0UsTUFBTSxJQUFJLEtBQUosQ0FBVSxxREFBVixDQUFOO0FBQ0g7Ozs7NkJBY1EsRSxFQUFJO0FBQUE7O0FBQ1gsNEJBQXNCLEtBQUssUUFBTCxDQUFjLElBQWQsQ0FBbUIsSUFBbkIsQ0FBdEI7QUFDQTs7QUFFQSxXQUFLLFlBQUwsR0FBb0IsS0FBSyxLQUFLLGFBQTlCO0FBQ0EsV0FBSyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0EsVUFBRyxLQUFLLFlBQUwsR0FBb0IsS0FBSyxZQUE1QixFQUNFLEtBQUssWUFBTCxHQUFvQixLQUFLLElBQXpCO0FBQ0YsV0FBSyxRQUFMLElBQWlCLEtBQUssWUFBdEI7O0FBRUEsYUFBTyxLQUFLLFFBQUwsSUFBaUIsS0FBSyxJQUE3QixFQUFvQztBQUNsQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFLLFFBQUwsQ0FBYyxNQUFkLENBQXFCLEtBQXJCLENBQTJCLE1BQTNCLEdBQW9DLE1BQXBDO0FBQ0EsWUFBSSxLQUFLLE9BQUwsQ0FBYSxNQUFiLEdBQXNCLENBQTFCLEVBQTZCO0FBQzNCLGVBQUssT0FBTCxDQUFhLE9BQWIsQ0FBcUIsa0JBQVU7QUFDN0IsbUJBQU8sTUFBUCxDQUFjLE1BQUssT0FBbkIsRUFBNEIsTUFBSyxRQUFMLENBQWMsTUFBMUM7QUFDQSxnQkFBSSxPQUFPLEtBQVAsS0FBaUIsTUFBakIsSUFBMkIsT0FBTyxLQUFQLEtBQWlCLE1BQWhELEVBQXdEO0FBQ3RELGtCQUFJLE9BQU8sTUFBUCxLQUFrQixTQUF0QixFQUFpQztBQUMvQixzQkFBSyxRQUFMLENBQWMsTUFBZCxDQUFxQixLQUFyQixDQUEyQixNQUEzQixHQUFvQyxTQUFwQztBQUNEO0FBQ0Y7QUFDRixXQVBEO0FBUUQ7O0FBRUQ7QUFDQTs7QUFFQTtBQUNBLFlBQUksS0FBSyxnQkFBVCxFQUEyQjtBQUN6QixlQUFLLE9BQUwsQ0FBYSxpQkFBYixDQUErQixLQUFLLGdCQUFwQztBQUNEOztBQUVEO0FBQ0E7QUFDQTtBQUNBLGFBQUssS0FBTCxDQUFXLE1BQVgsQ0FBa0IsRUFBbEI7O0FBRUE7QUFDQTs7O0FBR0EsYUFBSyxRQUFMLElBQWlCLEtBQUssSUFBdEI7QUFDQTtBQUNBLGFBQUssUUFBTCxDQUFjLE1BQWQ7QUFDRDtBQUNELFdBQUssVUFBTCxHQUFrQixLQUFLLFFBQUwsR0FBZ0IsS0FBSyxJQUF2QztBQUNEOzs7NEJBRU87QUFBQTs7QUFDTixVQUFJLEtBQUssWUFBVCxFQUF1QjtBQUNyQixhQUFLLE1BQUwsQ0FBWSxJQUFaLENBQWlCLEtBQUssWUFBdEIsRUFBb0MsSUFBcEMsQ0FBeUMsWUFBTTtBQUM3QyxpQkFBSyxLQUFMLEdBQWEsU0FBYjtBQUNBLGlCQUFLLEtBQUw7QUFDRCxTQUhEOztBQUtBO0FBQ0EsWUFBSSxLQUFLLElBQVQsRUFBZTtBQUNiLGVBQUssS0FBTCxHQUFhLEtBQUssSUFBbEI7QUFDRDtBQUNGLE9BVkQsTUFVTztBQUNMLGFBQUssS0FBTDtBQUNEOztBQUVELFdBQUssUUFBTCxDQUFjLENBQWQ7QUFDRDs7OzRCQUVPO0FBQ04sV0FBSyxNQUFMLEdBQWMsSUFBZDtBQUNEOzs7NkJBRVE7QUFDUCxXQUFLLE1BQUwsR0FBYyxLQUFkO0FBQ0Q7O0FBR0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztvQ0FFNEQ7QUFBQSxVQUE5QyxNQUE4Qyx1RUFBdkMsS0FBSyxRQUFMLENBQWMsTUFBeUI7QUFBQSxVQUFqQixlQUFpQjs7O0FBRTFELHdCQUFrQixtQkFBbUIsU0FBckM7QUFDQSxVQUFJLGVBQUo7QUFBQSxVQUFZLGVBQVo7QUFBQSxVQUFvQixjQUFwQjtBQUFBLFVBQTJCLGVBQTNCOztBQUVBO0FBQ0E7QUFDQSxlQUFTLE9BQU8sVUFBUCxHQUFvQixPQUFPLEtBQXBDO0FBQ0EsZUFBUyxPQUFPLFdBQVAsR0FBcUIsT0FBTyxNQUFyQzs7QUFFQTtBQUNBLGNBQVEsS0FBSyxHQUFMLENBQVMsTUFBVCxFQUFpQixNQUFqQixDQUFSO0FBQ0EsYUFBTyxLQUFQLENBQWEsZUFBYixHQUErQixLQUEvQjtBQUNBLGFBQU8sS0FBUCxDQUFhLFNBQWIsR0FBeUIsV0FBVyxLQUFYLEdBQW1CLEdBQTVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBSSxPQUFPLEtBQVAsR0FBZSxPQUFPLE1BQTFCLEVBQWtDO0FBQ2hDLFlBQUksT0FBTyxLQUFQLEdBQWUsS0FBZixHQUF1QixPQUFPLFVBQWxDLEVBQThDO0FBQzVDLG1CQUFTLGNBQVQ7QUFDRCxTQUZELE1BRU87QUFDTCxtQkFBUyxZQUFUO0FBQ0Q7QUFDRixPQU5ELE1BTU87QUFDTCxZQUFJLE9BQU8sTUFBUCxHQUFnQixLQUFoQixHQUF3QixPQUFPLFdBQW5DLEVBQWdEO0FBQzlDLG1CQUFTLFlBQVQ7QUFDRCxTQUZELE1BRU87QUFDTCxtQkFBUyxjQUFUO0FBQ0Q7QUFDRjs7QUFFRDtBQUNBLFVBQUksZUFBSjtBQUNBLFVBQUksV0FBVyxjQUFmLEVBQStCO0FBQzdCLGlCQUFTLENBQUMsT0FBTyxVQUFQLEdBQW9CLE9BQU8sS0FBUCxHQUFlLEtBQXBDLElBQTZDLENBQXREO0FBQ0EsZUFBTyxLQUFQLENBQWEsVUFBYixHQUEwQixTQUFTLElBQW5DO0FBQ0EsZUFBTyxLQUFQLENBQWEsV0FBYixHQUEyQixTQUFTLElBQXBDO0FBQ0Q7O0FBRUQ7QUFDQSxVQUFJLFdBQVcsWUFBZixFQUE2QjtBQUMzQixpQkFBUyxDQUFDLE9BQU8sV0FBUCxHQUFxQixPQUFPLE1BQVAsR0FBZ0IsS0FBdEMsSUFBK0MsQ0FBeEQ7QUFDQSxlQUFPLEtBQVAsQ0FBYSxTQUFiLEdBQXlCLFNBQVMsSUFBbEM7QUFDQSxlQUFPLEtBQVAsQ0FBYSxZQUFiLEdBQTRCLFNBQVMsSUFBckM7QUFDRDs7QUFFRDtBQUNBO0FBQ0EsYUFBTyxLQUFQLENBQWEsV0FBYixHQUEyQixDQUEzQjtBQUNBLGFBQU8sS0FBUCxDQUFhLFlBQWIsR0FBNEIsQ0FBNUI7QUFDQSxhQUFPLEtBQVAsQ0FBYSxVQUFiLEdBQTBCLENBQTFCO0FBQ0EsYUFBTyxLQUFQLENBQWEsYUFBYixHQUE2QixDQUE3QjtBQUNBLGFBQU8sS0FBUCxDQUFhLE9BQWIsR0FBdUIsT0FBdkI7O0FBRUE7QUFDQSxlQUFTLElBQVQsQ0FBYyxLQUFkLENBQW9CLGVBQXBCLEdBQXNDLGVBQXRDOztBQUVBLFdBQUssT0FBTCxDQUFhLEtBQWIsR0FBcUIsS0FBckI7QUFDQSxXQUFLLEtBQUwsR0FBYSxLQUFiOztBQUVBO0FBQ0EsVUFBSSxLQUFLLFVBQVUsU0FBVixDQUFvQixXQUFwQixFQUFUO0FBQ0EsVUFBSSxHQUFHLE9BQUgsQ0FBVyxRQUFYLEtBQXdCLENBQUMsQ0FBN0IsRUFBZ0M7QUFDOUIsWUFBSSxHQUFHLE9BQUgsQ0FBVyxRQUFYLElBQXVCLENBQUMsQ0FBNUIsRUFBK0I7QUFDN0I7QUFDRCxTQUZELE1BRU87QUFDTDtBQUNBLGlCQUFPLEtBQVAsQ0FBYSxTQUFiLEdBQXlCLE1BQXpCO0FBQ0EsaUJBQU8sS0FBUCxDQUFhLFNBQWIsR0FBeUIsTUFBekI7QUFDRDtBQUNGOztBQUVEO0FBQ0E7QUFDSCxjQUFRLEdBQVIsQ0FBWSxZQUFVLEtBQXRCO0FBQ0csYUFBTyxLQUFQO0FBQ0Q7OztzQkFoUE8sRyxFQUFLO0FBQ1gsV0FBSyxJQUFMLEdBQVksR0FBWjtBQUNBLFdBQUssSUFBTCxHQUFZLE9BQU8sR0FBbkI7QUFDRCxLO3dCQUNRO0FBQ1AsYUFBTyxLQUFLLElBQVo7QUFDRDs7O3dCQUVTO0FBQ1IsYUFBTyxLQUFLLElBQVo7QUFDRDs7Ozs7O2tCQXBFa0IsSTtBQThTZCxTQUFTLElBQVQsR0FDc0I7QUFBQSxNQURSLEtBQ1EsdUVBREEsYUFDQTtBQUFBLE1BRGUsTUFDZix1RUFEd0IsY0FDeEI7QUFBQSxNQUEzQixLQUEyQjtBQUFBLE1BQXBCLFlBQW9CO0FBQUEsTUFBTixJQUFNOztBQUMzQixTQUFPLElBQUksSUFBSixDQUFTLEtBQVQsRUFBZ0IsTUFBaEIsRUFBd0IsS0FBeEIsRUFBK0IsWUFBL0IsRUFBNkMsSUFBN0MsQ0FBUDtBQUNEOzs7Ozs7Ozs7O0FDdlVEOzs7Ozs7QUFDQTs7QUFFTyxJQUFJLDBCQUFTO0FBQ2xCLFVBQVEsQ0FEVTtBQUVsQixVQUFRLENBRlU7O0FBSWxCLG1CQUFpQixDQUFDLEtBQUQsRUFBUSxLQUFSLEVBQWUsS0FBZixDQUpDO0FBS2xCLGtCQUFnQixDQUFDLEtBQUQsRUFBUSxLQUFSLEVBQWUsS0FBZixFQUFzQixNQUF0QixDQUxFO0FBTWxCLGtCQUFnQixDQUFDLE1BQUQsQ0FORTtBQU9sQixtQkFBaUIsQ0FBQyxLQUFELEVBQVEsS0FBUixFQUFlLEtBQWYsRUFBc0IsTUFBdEIsQ0FQQzs7QUFTbEI7QUFDQSxRQUFNLGdCQUF1QjtBQUFBOztBQUFBLFFBQWQsT0FBYyx1RUFBSixFQUFJOztBQUMzQixXQUFPLElBQUksT0FBSixDQUFZLG1CQUFXO0FBQzVCLFVBQUksY0FBYyxTQUFkLFdBQWMsR0FBTTtBQUN0QixjQUFLLE1BQUw7QUFDQSxnQkFBUSxHQUFSLENBQVksTUFBSyxNQUFqQjtBQUNBLFlBQUksTUFBSyxNQUFMLEtBQWdCLE1BQUssTUFBekIsRUFBaUM7QUFDL0IsZ0JBQUssTUFBTCxHQUFjLE1BQUssTUFBTCxHQUFjLENBQTVCO0FBQ0Esa0JBQVEsSUFBUixDQUFhLHlCQUFiO0FBQ0E7QUFDRDtBQUNGLE9BUkQ7QUFTQSxVQUFJLENBQUMsT0FBRCxJQUFZLFFBQVEsTUFBUixHQUFpQixDQUFqQyxFQUFvQztBQUNsQyxnQkFBUSxLQUFSLENBQWMsd0JBQWQ7QUFDQTtBQUNEO0FBQ0QsY0FBUSxJQUFSLENBQWEsbUJBQWI7O0FBRUEsWUFBSyxNQUFMLEdBQWMsUUFBUSxNQUF0QjtBQUNBLGNBQVEsT0FBUixDQUFnQixrQkFBVTtBQUN4QixZQUFJLFlBQVksT0FBTyxLQUFQLENBQWEsR0FBYixFQUFrQixHQUFsQixFQUFoQjtBQUNBO0FBQ0EsWUFBSSxNQUFLLGVBQUwsQ0FBcUIsR0FBckIsQ0FBeUIsU0FBekIsQ0FBSixFQUF5QztBQUN2QyxnQkFBSyxTQUFMLENBQWUsTUFBZixFQUF1QixXQUF2QjtBQUNEO0FBQ0Q7QUFIQSxhQUlLLElBQUksTUFBSyxjQUFMLENBQW9CLEdBQXBCLENBQXdCLFNBQXhCLENBQUosRUFBd0M7QUFDM0Msa0JBQUssUUFBTCxDQUFjLE1BQWQsRUFBc0IsV0FBdEI7QUFDRDtBQUNEO0FBSEssZUFJQSxJQUFJLE1BQUssY0FBTCxDQUFvQixHQUFwQixDQUF3QixTQUF4QixDQUFKLEVBQXdDO0FBQzNDLG9CQUFLLFFBQUwsQ0FBYyxNQUFkLEVBQXNCLFdBQXRCO0FBQ0Q7QUFDRDtBQUhLLGlCQUlBLElBQUksTUFBSyxlQUFMLENBQXFCLEdBQXJCLENBQXlCLFNBQXpCLENBQUosRUFBeUM7QUFDNUMsc0JBQUssU0FBTCxDQUFlLE1BQWYsRUFBdUIsV0FBdkI7QUFDRDtBQUNEO0FBSEssbUJBSUE7QUFDSCwwQkFBUSxHQUFSLENBQVksK0JBQStCLE1BQTNDO0FBQ0Q7QUFDRixPQXRCRDtBQXVCRCxLQXhDTSxDQUFQO0FBeUNELEdBcERpQjs7QUFzRGxCLGFBQVcsbUJBQVMsTUFBVCxFQUFpQixXQUFqQixFQUE4QjtBQUN2QyxRQUFJLFFBQVEsSUFBSSxLQUFKLEVBQVo7QUFDQSxVQUFNLGdCQUFOLENBQXVCLE1BQXZCLEVBQStCLFdBQS9CLEVBQTRDLEtBQTVDO0FBQ0EsU0FBSyxNQUFMLElBQWUsS0FBZjtBQUNBLFVBQU0sR0FBTixHQUFZLE1BQVo7QUFDRCxHQTNEaUI7O0FBNkRsQixZQUFVLGtCQUFTLE1BQVQsRUFBaUIsV0FBakIsRUFBOEI7QUFDdEMsUUFBSSxhQUFhLE9BQU8sS0FBUCxDQUFhLEdBQWIsRUFBa0IsR0FBbEIsR0FBd0IsS0FBeEIsQ0FBOEIsR0FBOUIsRUFBbUMsQ0FBbkMsQ0FBakI7QUFDQSxRQUFJLFdBQVcsTUFBTSxPQUFOLENBQWY7QUFDQSxRQUFJLFdBQVcsK0JBQStCLFVBQS9CLEdBQ2IsZUFEYSxHQUNLLE1BREwsR0FDYyxNQUQ3QjtBQUVBLGFBQVMsV0FBVCxDQUFxQixTQUFTLGNBQVQsQ0FBd0IsUUFBeEIsQ0FBckI7QUFDQSxhQUFTLElBQVQsQ0FBYyxXQUFkLENBQTBCLFFBQTFCO0FBQ0E7QUFDRCxHQXJFaUI7O0FBdUVsQixZQUFVLGtCQUFTLE1BQVQsRUFBaUIsV0FBakIsRUFBOEI7QUFBQTs7QUFDdEMsUUFBSSxNQUFNLElBQUksY0FBSixFQUFWO0FBQ0EsUUFBSSxJQUFKLENBQVMsS0FBVCxFQUFnQixNQUFoQixFQUF3QixJQUF4QjtBQUNBLFFBQUksWUFBSixHQUFtQixNQUFuQjtBQUNBLFFBQUksTUFBSixHQUFhLGlCQUFTO0FBQ3BCLFVBQUksSUFBSSxNQUFKLEtBQWUsR0FBbkIsRUFBd0I7QUFDdEIsWUFBSSxPQUFPLEtBQUssS0FBTCxDQUFXLElBQUksWUFBZixDQUFYO0FBQ0EsYUFBSyxJQUFMLEdBQVksTUFBWjtBQUNBLGVBQUssS0FBSyxJQUFWLElBQWtCLElBQWxCO0FBQ0EsWUFBSSxLQUFLLE1BQVQsRUFDRSxPQUFLLG1CQUFMLENBQXlCLElBQXpCLEVBQStCLE1BQS9CLEVBQXVDLFdBQXZDLEVBREYsS0FHRTtBQUNIO0FBQ0YsS0FWRDtBQVdBLFFBQUksSUFBSjtBQUNELEdBdkZpQjs7QUF5RmxCLHVCQUFxQiw2QkFBUyxJQUFULEVBQWUsTUFBZixFQUF1QixXQUF2QixFQUFvQztBQUFBOztBQUN2RCxRQUFJLFVBQVUsT0FBTyxPQUFQLENBQWUsU0FBZixFQUEwQixFQUExQixDQUFkO0FBQ0EsUUFBSSxjQUFjLFVBQVUsS0FBSyxJQUFMLENBQVUsS0FBdEM7QUFDQSxRQUFJLFFBQVEsSUFBSSxLQUFKLEVBQVo7QUFDQSxRQUFJLG1CQUFtQixTQUFuQixnQkFBbUIsR0FBTTtBQUMzQixhQUFLLFdBQUwsSUFBb0IsS0FBcEI7QUFDQSxRQUFFLElBQUYsQ0FBTyxLQUFLLE1BQVosRUFBb0IsT0FBcEIsQ0FBNEIsaUJBQVM7QUFDbkMsZUFBSyxLQUFMLElBQWMsS0FBSyxNQUFMLENBQVksS0FBWixDQUFkO0FBQ0EsZUFBSyxLQUFMLEVBQVksTUFBWixHQUFxQixLQUFyQjtBQUNELE9BSEQ7QUFJQTtBQUNELEtBUEQ7QUFRQSxVQUFNLGdCQUFOLENBQXVCLE1BQXZCLEVBQStCLGdCQUEvQixFQUFpRCxLQUFqRDtBQUNBLFVBQU0sR0FBTixHQUFZLFdBQVo7QUFDRCxHQXZHaUI7O0FBeUdsQixhQUFXLG1CQUFTLE1BQVQsRUFBaUIsV0FBakIsRUFBOEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0Q7QUE3R2lCLENBQWI7Ozs7Ozs7O1FDSFMsWSxHQUFBLFk7UUEwQkEsYSxHQUFBLGE7UUFrQkEsZSxHQUFBLGU7UUFvQ0EscUIsR0FBQSxxQjtRQW9GQSx1QixHQUFBLHVCO1FBVUEsZ0IsR0FBQSxnQjtRQTRCQSxrQixHQUFBLGtCO1FBdURBLHNCLEdBQUEsc0I7UUEwRUEsa0IsR0FBQSxrQjtRQVVBLHdCLEdBQUEsd0I7UUF5RUEsb0IsR0FBQSxvQjtRQTJDQSxHLEdBQUEsRztBQXpjVCxTQUFTLFlBQVQsQ0FBc0IsS0FBdEIsRUFBNkIsTUFBN0IsRUFBcUM7QUFDMUMsTUFBSSxjQUFKO0FBQUEsTUFBVyxhQUFYO0FBQUEsTUFBaUIsY0FBakI7QUFBQSxNQUF3QixZQUF4QjtBQUFBLE1BQTZCLGVBQTdCO0FBQUEsTUFBcUMsV0FBckM7QUFBQSxNQUF5QyxXQUF6QztBQUFBLE1BQTZDLGtCQUE3QztBQUFBLE1BQXdELFlBQXhEOztBQUVBLE1BQUksT0FBTyxNQUFYLEVBQW1CO0FBQ2pCLFlBQVEsUUFBUjtBQUNELEdBRkQsTUFFTztBQUNMLFlBQVEsV0FBUjtBQUNEOztBQUVELE1BQUksVUFBVSxXQUFkLEVBQTJCO0FBQ3pCLFdBQU8sT0FBTyxFQUFkO0FBQ0EsWUFBUSxPQUFPLEVBQVAsR0FBWSxPQUFPLEtBQTNCO0FBQ0EsVUFBTSxPQUFPLEVBQWI7QUFDQSxhQUFTLE9BQU8sRUFBUCxHQUFZLE9BQU8sTUFBNUI7QUFDQSxVQUFNLE1BQU0sQ0FBTixHQUFVLElBQVYsSUFBa0IsTUFBTSxDQUFOLEdBQVUsS0FBNUIsSUFBcUMsTUFBTSxDQUFOLEdBQVUsR0FBL0MsSUFBc0QsTUFBTSxDQUFOLEdBQVUsTUFBdEU7QUFDRDs7QUFFRCxNQUFJLFVBQVUsUUFBZCxFQUF3QjtBQUN0QixTQUFLLE1BQU0sQ0FBTixHQUFVLE9BQU8sT0FBdEI7QUFDQSxTQUFLLE1BQU0sQ0FBTixHQUFVLE9BQU8sT0FBdEI7QUFDQSxnQkFBWSxLQUFLLElBQUwsQ0FBVSxLQUFLLEVBQUwsR0FBVSxLQUFLLEVBQXpCLENBQVo7QUFDQSxVQUFNLFlBQVksT0FBTyxNQUF6QjtBQUNEO0FBQ0QsU0FBTyxHQUFQO0FBQ0Q7O0FBRU0sU0FBUyxhQUFULENBQXVCLEVBQXZCLEVBQTJCLEVBQTNCLEVBQStDO0FBQUEsTUFBaEIsTUFBZ0IsdUVBQVAsS0FBTzs7QUFDcEQsTUFBSSxXQUFKO0FBQUEsTUFBUSxXQUFSO0FBQUEsTUFBWSxrQkFBWjtBQUFBLE1BQXVCLHNCQUF2QjtBQUFBLE1BQXNDLFlBQXRDOztBQUVBLE1BQUksTUFBSixFQUFZO0FBQ1YsU0FBTSxHQUFHLEVBQUgsR0FBUSxHQUFHLE1BQVosSUFBdUIsR0FBRyxFQUFILEdBQVEsR0FBRyxNQUFsQyxDQUFMO0FBQ0EsU0FBTSxHQUFHLEVBQUgsR0FBUSxHQUFHLE1BQVosSUFBdUIsR0FBRyxFQUFILEdBQVEsR0FBRyxNQUFsQyxDQUFMO0FBQ0QsR0FIRCxNQUdPO0FBQ0wsU0FBSyxHQUFHLE9BQUgsR0FBYSxHQUFHLE9BQXJCO0FBQ0EsU0FBSyxHQUFHLE9BQUgsR0FBYSxHQUFHLE9BQXJCO0FBQ0Q7O0FBRUQsY0FBWSxLQUFLLElBQUwsQ0FBVSxLQUFLLEVBQUwsR0FBVSxLQUFLLEVBQXpCLENBQVo7QUFDQSxrQkFBZ0IsR0FBRyxNQUFILEdBQVksR0FBRyxNQUEvQjtBQUNBLFFBQU0sWUFBWSxhQUFsQjs7QUFFQSxTQUFPLEdBQVA7QUFDRDs7QUFFTSxTQUFTLGVBQVQsQ0FBeUIsRUFBekIsRUFBNkIsRUFBN0IsRUFBaUU7QUFBQSxNQUFoQyxNQUFnQyx1RUFBdkIsS0FBdUI7QUFBQSxNQUFoQixNQUFnQix1RUFBUCxLQUFPOztBQUN0RSxNQUFJLGtCQUFKO0FBQUEsTUFBZSxzQkFBZjtBQUFBLE1BQThCLGdCQUE5QjtBQUFBLE1BQ0UsV0FERjtBQUFBLE1BQ00sV0FETjtBQUFBLE1BQ1UsV0FEVjtBQUFBLE1BQ2MsV0FEZDtBQUFBLE1BQ2tCLElBQUksRUFEdEI7QUFBQSxNQUVFLE1BQU0sS0FGUjs7QUFJQSxNQUFJLE1BQUosRUFBWTtBQUNWLFNBQU0sR0FBRyxFQUFILEdBQVEsR0FBRyxNQUFaLElBQXVCLEdBQUcsRUFBSCxHQUFRLEdBQUcsTUFBbEMsQ0FBTDtBQUNBLFNBQU0sR0FBRyxFQUFILEdBQVEsR0FBRyxNQUFaLElBQXVCLEdBQUcsRUFBSCxHQUFRLEdBQUcsTUFBbEMsQ0FBTDtBQUNELEdBSEQsTUFHTztBQUNMLFNBQUssR0FBRyxPQUFILEdBQWEsR0FBRyxPQUFyQjtBQUNBLFNBQUssR0FBRyxPQUFILEdBQWEsR0FBRyxPQUFyQjtBQUNEOztBQUVELGNBQVksS0FBSyxJQUFMLENBQVUsS0FBSyxFQUFMLEdBQVUsS0FBSyxFQUF6QixDQUFaO0FBQ0Esa0JBQWdCLEdBQUcsTUFBSCxHQUFZLEdBQUcsTUFBL0I7O0FBRUEsTUFBSSxZQUFZLGFBQWhCLEVBQStCO0FBQzdCLFVBQU0sSUFBTjtBQUNBLGNBQVUsZ0JBQWdCLFNBQTFCO0FBQ0EsUUFBSSxpQkFBaUIsR0FBckI7QUFDQSxlQUFXLGNBQVg7O0FBRUEsU0FBSyxLQUFLLFNBQVY7QUFDQSxTQUFLLEtBQUssU0FBVjtBQUNBLE9BQUcsQ0FBSCxJQUFRLFVBQVUsRUFBbEI7QUFDQSxPQUFHLENBQUgsSUFBUSxVQUFVLEVBQWxCOztBQUVBLFFBQUksTUFBSixFQUFZO0FBQ1YsUUFBRSxDQUFGLEdBQU0sRUFBTjtBQUNBLFFBQUUsQ0FBRixHQUFNLENBQUMsRUFBUDtBQUNBLHVCQUFpQixFQUFqQixFQUFxQixDQUFyQjtBQUNEO0FBQ0Y7QUFDRCxTQUFPLEdBQVA7QUFDRDs7QUFFTSxTQUFTLHFCQUFULENBQStCLEVBQS9CLEVBQW1DLEVBQW5DLEVBQXVEO0FBQUEsTUFBaEIsTUFBZ0IsdUVBQVAsS0FBTzs7QUFDNUQsTUFBSSxzQkFBSjtBQUFBLE1BQW1CLGdCQUFuQjtBQUFBLE1BQTRCLGNBQTVCO0FBQUEsTUFBbUMsY0FBbkM7QUFBQSxNQUNFLElBQUksRUFETjtBQUFBLE1BRUUsTUFBTSxFQUZSO0FBQUEsTUFHRSxNQUFNLEVBSFI7QUFBQSxNQUlFLE1BQU0sRUFKUjtBQUFBLE1BS0UsTUFBTSxFQUxSO0FBQUEsTUFNRSxNQUFNLEtBTlI7O0FBUUEsS0FBRyxJQUFILEdBQVUsR0FBRyxJQUFILElBQVcsQ0FBckI7QUFDQSxLQUFHLElBQUgsR0FBVSxHQUFHLElBQUgsSUFBVyxDQUFyQjs7QUFFQSxNQUFJLE1BQUosRUFBWTtBQUNWLE1BQUUsRUFBRixHQUFRLEdBQUcsRUFBSCxHQUFRLEdBQUcsTUFBWixJQUF1QixHQUFHLEVBQUgsR0FBUSxHQUFHLE1BQWxDLENBQVA7QUFDQSxNQUFFLEVBQUYsR0FBUSxHQUFHLEVBQUgsR0FBUSxHQUFHLE1BQVosSUFBdUIsR0FBRyxFQUFILEdBQVEsR0FBRyxNQUFsQyxDQUFQO0FBQ0QsR0FIRCxNQUdPO0FBQ0wsTUFBRSxFQUFGLEdBQU8sR0FBRyxPQUFILEdBQWEsR0FBRyxPQUF2QjtBQUNBLE1BQUUsRUFBRixHQUFPLEdBQUcsT0FBSCxHQUFhLEdBQUcsT0FBdkI7QUFDRDs7QUFFRCxJQUFFLFNBQUYsR0FBYyxLQUFLLElBQUwsQ0FBVSxFQUFFLEVBQUYsR0FBTyxFQUFFLEVBQVQsR0FBYyxFQUFFLEVBQUYsR0FBTyxFQUFFLEVBQWpDLENBQWQ7QUFDQSxrQkFBZ0IsR0FBRyxNQUFILEdBQVksR0FBRyxNQUEvQjs7QUFFQSxNQUFJLEVBQUUsU0FBRixHQUFjLGFBQWxCLEVBQWlDO0FBQy9CLFVBQU0sSUFBTjs7QUFFQSxjQUFVLGdCQUFnQixFQUFFLFNBQTVCOztBQUVBLGVBQVcsR0FBWDs7QUFFQSxNQUFFLEVBQUYsR0FBTyxFQUFFLEVBQUYsR0FBTyxFQUFFLFNBQWhCO0FBQ0EsTUFBRSxFQUFGLEdBQU8sRUFBRSxFQUFGLEdBQU8sRUFBRSxTQUFoQjs7QUFFQSxNQUFFLE1BQUYsR0FBVyxLQUFLLEdBQUwsQ0FBUyxFQUFFLEVBQUYsR0FBTyxPQUFQLEdBQWlCLENBQTFCLENBQVg7QUFDQSxNQUFFLE1BQUYsR0FBVyxLQUFLLEdBQUwsQ0FBUyxFQUFFLEVBQUYsR0FBTyxPQUFQLEdBQWlCLENBQTFCLENBQVg7O0FBRUMsT0FBRyxDQUFILEdBQU8sR0FBRyxDQUFYLEdBQWdCLFFBQVEsQ0FBeEIsR0FBMkIsUUFBUSxDQUFDLENBQXBDO0FBQ0MsT0FBRyxDQUFILEdBQU8sR0FBRyxDQUFYLEdBQWdCLFFBQVEsQ0FBeEIsR0FBMkIsUUFBUSxDQUFDLENBQXBDOztBQUVBLE9BQUcsQ0FBSCxHQUFPLEdBQUcsQ0FBSCxHQUFRLEVBQUUsTUFBRixHQUFXLEtBQTFCO0FBQ0EsT0FBRyxDQUFILEdBQU8sR0FBRyxDQUFILEdBQVEsRUFBRSxNQUFGLEdBQVcsS0FBMUI7O0FBRUEsT0FBRyxDQUFILEdBQU8sR0FBRyxDQUFILEdBQVEsRUFBRSxNQUFGLEdBQVcsQ0FBQyxLQUEzQjtBQUNBLE9BQUcsQ0FBSCxHQUFPLEdBQUcsQ0FBSCxHQUFRLEVBQUUsTUFBRixHQUFXLENBQUMsS0FBM0I7O0FBRUEsTUFBRSxFQUFGLEdBQU8sRUFBRSxFQUFUO0FBQ0EsTUFBRSxFQUFGLEdBQU8sQ0FBQyxFQUFFLEVBQVY7O0FBRUEsUUFBSSxNQUFNLEdBQUcsRUFBSCxHQUFRLEVBQUUsRUFBVixHQUFlLEdBQUcsRUFBSCxHQUFRLEVBQUUsRUFBbkM7O0FBRUEsUUFBSSxDQUFKLEdBQVEsTUFBTSxFQUFFLEVBQWhCO0FBQ0EsUUFBSSxDQUFKLEdBQVEsTUFBTSxFQUFFLEVBQWhCOztBQUVBLFFBQUksTUFBTSxHQUFHLEVBQUgsSUFBUyxFQUFFLEVBQUYsR0FBTyxFQUFFLFNBQWxCLElBQStCLEdBQUcsRUFBSCxJQUFTLEVBQUUsRUFBRixHQUFPLEVBQUUsU0FBbEIsQ0FBekM7O0FBRUEsUUFBSSxDQUFKLEdBQVEsT0FBTyxFQUFFLEVBQUYsR0FBTyxFQUFFLFNBQWhCLENBQVI7QUFDQSxRQUFJLENBQUosR0FBUSxPQUFPLEVBQUUsRUFBRixHQUFPLEVBQUUsU0FBaEIsQ0FBUjs7QUFFQSxRQUFJLE1BQU0sR0FBRyxFQUFILEdBQVEsRUFBRSxFQUFWLEdBQWUsR0FBRyxFQUFILEdBQVEsRUFBRSxFQUFuQzs7QUFFQSxRQUFJLENBQUosR0FBUSxNQUFNLEVBQUUsRUFBaEI7QUFDQSxRQUFJLENBQUosR0FBUSxNQUFNLEVBQUUsRUFBaEI7O0FBRUEsUUFBSSxNQUFNLEdBQUcsRUFBSCxJQUFTLEVBQUUsRUFBRixHQUFPLEVBQUUsU0FBbEIsSUFBK0IsR0FBRyxFQUFILElBQVMsRUFBRSxFQUFGLEdBQU8sRUFBRSxTQUFsQixDQUF6Qzs7QUFFQSxRQUFJLENBQUosR0FBUSxPQUFPLEVBQUUsRUFBRixHQUFPLEVBQUUsU0FBaEIsQ0FBUjtBQUNBLFFBQUksQ0FBSixHQUFRLE9BQU8sRUFBRSxFQUFGLEdBQU8sRUFBRSxTQUFoQixDQUFSOztBQUVBLE9BQUcsTUFBSCxHQUFZLEVBQVo7QUFDQSxPQUFHLE1BQUgsQ0FBVSxDQUFWLEdBQWMsSUFBSSxDQUFKLEdBQVEsSUFBSSxDQUExQjtBQUNBLE9BQUcsTUFBSCxDQUFVLENBQVYsR0FBYyxJQUFJLENBQUosR0FBUSxJQUFJLENBQTFCOztBQUVBLE9BQUcsTUFBSCxHQUFZLEVBQVo7QUFDQSxPQUFHLE1BQUgsQ0FBVSxDQUFWLEdBQWMsSUFBSSxDQUFKLEdBQVEsSUFBSSxDQUExQjtBQUNBLE9BQUcsTUFBSCxDQUFVLENBQVYsR0FBYyxJQUFJLENBQUosR0FBUSxJQUFJLENBQTFCOztBQUVBLE9BQUcsRUFBSCxHQUFRLEdBQUcsTUFBSCxDQUFVLENBQVYsR0FBYyxHQUFHLElBQXpCO0FBQ0EsT0FBRyxFQUFILEdBQVEsR0FBRyxNQUFILENBQVUsQ0FBVixHQUFjLEdBQUcsSUFBekI7QUFDQSxPQUFHLEVBQUgsR0FBUSxHQUFHLE1BQUgsQ0FBVSxDQUFWLEdBQWMsR0FBRyxJQUF6QjtBQUNBLE9BQUcsRUFBSCxHQUFRLEdBQUcsTUFBSCxDQUFVLENBQVYsR0FBYyxHQUFHLElBQXpCO0FBQ0Q7QUFDRCxTQUFPLEdBQVA7QUFDRDs7QUFFTSxTQUFTLHVCQUFULENBQWlDLGNBQWpDLEVBQWlFO0FBQUEsTUFBaEIsTUFBZ0IsdUVBQVAsS0FBTzs7QUFDdEUsT0FBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLGVBQWUsTUFBbkMsRUFBMkMsR0FBM0MsRUFBZ0Q7QUFDOUMsUUFBSSxLQUFLLGVBQWUsQ0FBZixDQUFUO0FBQ0EsU0FBSyxJQUFJLElBQUksSUFBSSxDQUFqQixFQUFvQixJQUFJLGVBQWUsTUFBdkMsRUFBK0MsR0FBL0MsRUFBb0Q7QUFDbEQsVUFBSSxLQUFLLGVBQWUsQ0FBZixDQUFUO0FBQ0EsNEJBQXNCLEVBQXRCLEVBQTBCLEVBQTFCLEVBQThCLE1BQTlCO0FBQ0Q7QUFDRjtBQUNGOztBQUVNLFNBQVMsZ0JBQVQsQ0FBMEIsRUFBMUIsRUFBOEIsRUFBOUIsRUFBa0Q7QUFBQSxNQUFoQixNQUFnQix1RUFBUCxLQUFPOztBQUN2RCxNQUFJLFlBQUo7QUFBQSxNQUFTLDJCQUFUO0FBQUEsTUFBNkIsNEJBQTdCO0FBQUEsTUFBa0QsV0FBbEQ7QUFBQSxNQUFzRCxXQUF0RDtBQUNBLFFBQU0sS0FBTjs7QUFFQSxNQUFJLE1BQUosRUFBWTtBQUNWLFNBQU0sR0FBRyxFQUFILEdBQVEsR0FBRyxTQUFaLElBQTBCLEdBQUcsRUFBSCxHQUFRLEdBQUcsU0FBckMsQ0FBTDtBQUNBLFNBQU0sR0FBRyxFQUFILEdBQVEsR0FBRyxVQUFaLElBQTJCLEdBQUcsRUFBSCxHQUFRLEdBQUcsVUFBdEMsQ0FBTDtBQUNELEdBSEQsTUFHTztBQUNMLFNBQUssR0FBRyxPQUFILEdBQWEsR0FBRyxPQUFyQjtBQUNBLFNBQUssR0FBRyxPQUFILEdBQWEsR0FBRyxPQUFyQjtBQUNEOztBQUVELHVCQUFxQixHQUFHLFNBQUgsR0FBZSxHQUFHLFNBQXZDO0FBQ0Esd0JBQXNCLEdBQUcsVUFBSCxHQUFnQixHQUFHLFVBQXpDOztBQUVBLE1BQUksS0FBSyxHQUFMLENBQVMsRUFBVCxJQUFlLGtCQUFuQixFQUF1QztBQUNyQyxRQUFJLEtBQUssR0FBTCxDQUFTLEVBQVQsSUFBZSxtQkFBbkIsRUFBd0M7QUFDdEMsWUFBTSxJQUFOO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsWUFBTSxLQUFOO0FBQ0Q7QUFDRixHQU5ELE1BTU87QUFDTCxVQUFNLEtBQU47QUFDRDs7QUFFRCxTQUFPLEdBQVA7QUFDRDs7QUFFTSxTQUFTLGtCQUFULENBQTRCLEVBQTVCLEVBQWdDLEVBQWhDLEVBQW1FO0FBQUEsTUFBL0IsTUFBK0IsdUVBQXRCLEtBQXNCO0FBQUEsTUFBZixNQUFlLHVFQUFOLElBQU07O0FBQ3hFLE1BQUksa0JBQUo7QUFBQSxNQUFlLDJCQUFmO0FBQUEsTUFBbUMsNEJBQW5DO0FBQUEsTUFDRSxpQkFERjtBQUFBLE1BQ1ksaUJBRFo7QUFBQSxNQUNzQixXQUR0QjtBQUFBLE1BQzBCLFdBRDFCOztBQUdBLE1BQUksTUFBSixFQUFZO0FBQ1YsU0FBTSxHQUFHLEVBQUgsR0FBUSxHQUFHLFNBQVosSUFBMEIsR0FBRyxFQUFILEdBQVEsR0FBRyxTQUFyQyxDQUFMO0FBQ0EsU0FBTSxHQUFHLEVBQUgsR0FBUSxHQUFHLFVBQVosSUFBMkIsR0FBRyxFQUFILEdBQVEsR0FBRyxVQUF0QyxDQUFMO0FBQ0QsR0FIRCxNQUdPO0FBQ0wsU0FBSyxHQUFHLE9BQUgsR0FBYSxHQUFHLE9BQXJCO0FBQ0EsU0FBSyxHQUFHLE9BQUgsR0FBYSxHQUFHLE9BQXJCO0FBQ0Q7O0FBRUQsdUJBQXFCLEdBQUcsU0FBSCxHQUFlLEdBQUcsU0FBdkM7QUFDQSx3QkFBc0IsR0FBRyxVQUFILEdBQWdCLEdBQUcsVUFBekM7O0FBRUEsTUFBSSxLQUFLLEdBQUwsQ0FBUyxFQUFULElBQWUsa0JBQW5CLEVBQXVDO0FBQ3JDLFFBQUksS0FBSyxHQUFMLENBQVMsRUFBVCxJQUFlLG1CQUFuQixFQUF3QztBQUN0QyxpQkFBVyxxQkFBcUIsS0FBSyxHQUFMLENBQVMsRUFBVCxDQUFoQztBQUNBLGlCQUFXLHNCQUFzQixLQUFLLEdBQUwsQ0FBUyxFQUFULENBQWpDOztBQUVBLFVBQUksWUFBWSxRQUFoQixFQUEwQjtBQUN4QixZQUFJLEtBQUssQ0FBVCxFQUFZO0FBQ1Ysc0JBQVksS0FBWjtBQUNBLGFBQUcsQ0FBSCxHQUFPLEdBQUcsQ0FBSCxHQUFPLFFBQWQ7QUFDRCxTQUhELE1BR087QUFDTCxzQkFBWSxRQUFaO0FBQ0EsYUFBRyxDQUFILEdBQU8sR0FBRyxDQUFILEdBQU8sUUFBZDtBQUNEOztBQUVELFlBQUksTUFBSixFQUFZO0FBQ1YsYUFBRyxFQUFILElBQVMsQ0FBQyxDQUFWO0FBQ0Q7QUFDRixPQVpELE1BWU87QUFDTCxZQUFJLEtBQUssQ0FBVCxFQUFZO0FBQ1Ysc0JBQVksTUFBWjtBQUNBLGFBQUcsQ0FBSCxHQUFPLEdBQUcsQ0FBSCxHQUFPLFFBQWQ7QUFDRCxTQUhELE1BR087QUFDTCxzQkFBWSxPQUFaO0FBQ0EsYUFBRyxDQUFILEdBQU8sR0FBRyxDQUFILEdBQU8sUUFBZDtBQUNEOztBQUVELFlBQUksTUFBSixFQUFZO0FBQ1YsYUFBRyxFQUFILElBQVMsQ0FBQyxDQUFWO0FBQ0Q7QUFDRjtBQUNGLEtBN0JELE1BNkJPO0FBQ0w7QUFDRDtBQUNGLEdBakNELE1BaUNPLENBRU47QUFEQzs7QUFFRjtBQUNBLFNBQU8sU0FBUDtBQUNEOztBQUVNLFNBQVMsc0JBQVQsQ0FBZ0MsRUFBaEMsRUFBb0MsRUFBcEMsRUFBd0Q7QUFBQSxNQUFoQixNQUFnQix1RUFBUCxLQUFPOztBQUM3RCxNQUFJLGVBQUo7QUFBQSxNQUFZLGtCQUFaO0FBQUEsTUFBdUIsWUFBdkI7QUFBQSxNQUE0QixZQUE1QjtBQUFBLE1BQWlDLFlBQWpDO0FBQUEsTUFBc0MsWUFBdEM7O0FBRUEsTUFBSSxNQUFKLEVBQVk7QUFDVixVQUFNLEdBQUcsRUFBVDtBQUNBLFVBQU0sR0FBRyxFQUFUO0FBQ0EsVUFBTSxHQUFHLEVBQVQ7QUFDQSxVQUFNLEdBQUcsRUFBVDtBQUNELEdBTEQsTUFLTztBQUNMLFVBQU0sR0FBRyxDQUFUO0FBQ0EsVUFBTSxHQUFHLENBQVQ7QUFDQSxVQUFNLEdBQUcsQ0FBVDtBQUNBLFVBQU0sR0FBRyxDQUFUO0FBQ0Q7O0FBRUQsTUFBSSxNQUFNLE1BQU0sR0FBRyxVQUFuQixFQUErQjtBQUM3QixRQUFJLE1BQU0sTUFBTSxDQUFOLEdBQVUsR0FBRyxTQUF2QixFQUFrQztBQUNoQyxlQUFTLFNBQVQ7QUFDRCxLQUZELE1BRU8sSUFBSSxNQUFNLE1BQU0sQ0FBTixHQUFVLEdBQUcsU0FBdkIsRUFBa0M7QUFDdkMsZUFBUyxVQUFUO0FBQ0QsS0FGTSxNQUVBO0FBQ0wsZUFBUyxXQUFUO0FBQ0Q7QUFDRixHQVJELE1BUU8sSUFBSSxNQUFNLE1BQU0sR0FBRyxVQUFuQixFQUErQjtBQUNwQyxRQUFJLE1BQU0sTUFBTSxDQUFOLEdBQVUsR0FBRyxTQUF2QixFQUFrQztBQUNoQyxlQUFTLFlBQVQ7QUFDRCxLQUZELE1BRU8sSUFBSSxNQUFNLE1BQU0sQ0FBTixHQUFVLEdBQUcsU0FBdkIsRUFBa0M7QUFDdkMsZUFBUyxhQUFUO0FBQ0QsS0FGTSxNQUVBO0FBQ0wsZUFBUyxjQUFUO0FBQ0Q7QUFDRixHQVJNLE1BUUE7QUFDTCxRQUFJLE1BQU0sTUFBTSxHQUFHLFNBQW5CLEVBQThCO0FBQzVCLGVBQVMsWUFBVDtBQUNELEtBRkQsTUFFTztBQUNMLGVBQVMsYUFBVDtBQUNEO0FBQ0Y7O0FBRUQsTUFBSSxXQUFXLFdBQVgsSUFBMEIsV0FBVyxjQUFyQyxJQUNBLFdBQVcsWUFEWCxJQUMyQixXQUFXLGFBRDFDLEVBQ3lEO0FBQ3ZELGdCQUFZLGlCQUFpQixFQUFqQixFQUFxQixFQUFyQixFQUF5QixNQUF6QixDQUFaO0FBQ0QsR0FIRCxNQUdPO0FBQ0wsUUFBSSxRQUFRLEVBQVo7O0FBRUEsWUFBUSxNQUFSO0FBQ0EsV0FBSyxTQUFMO0FBQ0UsY0FBTSxDQUFOLEdBQVUsR0FBVjtBQUNBLGNBQU0sQ0FBTixHQUFVLEdBQVY7QUFDQTtBQUNGLFdBQUssVUFBTDtBQUNFLGNBQU0sQ0FBTixHQUFVLE1BQU0sR0FBRyxLQUFuQjtBQUNBLGNBQU0sQ0FBTixHQUFVLEdBQVY7QUFDQTtBQUNGLFdBQUssWUFBTDtBQUNFLGNBQU0sQ0FBTixHQUFVLEdBQVY7QUFDQSxjQUFNLENBQU4sR0FBVSxNQUFNLEdBQUcsTUFBbkI7QUFDQTtBQUNGLFdBQUssYUFBTDtBQUNFLGNBQU0sQ0FBTixHQUFVLE1BQU0sR0FBRyxLQUFuQjtBQUNBLGNBQU0sQ0FBTixHQUFVLE1BQU0sR0FBRyxNQUFuQjtBQWZGOztBQWtCQSxnQkFBWSxtQkFBbUIsRUFBbkIsRUFBdUIsS0FBdkIsRUFBOEIsTUFBOUIsQ0FBWjtBQUNEOztBQUVELE1BQUksU0FBSixFQUFlO0FBQ2IsV0FBTyxNQUFQO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsV0FBTyxTQUFQO0FBQ0Q7QUFDRjs7QUFHTSxTQUFTLGtCQUFULENBQTRCLEVBQTVCLEVBQWdDLEtBQWhDLEVBQXVEO0FBQUEsTUFBaEIsTUFBZ0IsdUVBQVAsS0FBTzs7QUFDNUQsUUFBTSxRQUFOLEdBQWlCLENBQWpCO0FBQ0EsUUFBTSxNQUFOLEdBQWUsR0FBZjtBQUNBLFFBQU0sT0FBTixHQUFnQixNQUFNLENBQXRCO0FBQ0EsUUFBTSxPQUFOLEdBQWdCLE1BQU0sQ0FBdEI7QUFDQSxRQUFNLEVBQU4sR0FBVyxNQUFNLENBQWpCO0FBQ0EsUUFBTSxFQUFOLEdBQVcsTUFBTSxDQUFqQjtBQUNBLFNBQU8sY0FBYyxFQUFkLEVBQWtCLEtBQWxCLEVBQXlCLE1BQXpCLENBQVA7QUFDRDs7QUFFTSxTQUFTLHdCQUFULENBQWtDLEVBQWxDLEVBQXNDLEVBQXRDLEVBQTBFO0FBQUEsTUFBaEMsTUFBZ0MsdUVBQXZCLEtBQXVCO0FBQUEsTUFBaEIsTUFBZ0IsdUVBQVAsS0FBTzs7QUFDL0UsTUFBSSxlQUFKO0FBQUEsTUFBWSxrQkFBWjtBQUFBLE1BQXVCLFlBQXZCO0FBQUEsTUFBNEIsWUFBNUI7QUFBQSxNQUFpQyxZQUFqQztBQUFBLE1BQXNDLFlBQXRDOztBQUVBLE1BQUksTUFBSixFQUFZO0FBQ1YsVUFBTSxHQUFHLEVBQVQ7QUFDQSxVQUFNLEdBQUcsRUFBVDtBQUNBLFVBQU0sR0FBRyxFQUFUO0FBQ0EsVUFBTSxHQUFHLEVBQVQ7QUFDRCxHQUxELE1BS087QUFDTCxVQUFNLEdBQUcsQ0FBVDtBQUNBLFVBQU0sR0FBRyxDQUFUO0FBQ0EsVUFBTSxHQUFHLENBQVQ7QUFDQSxVQUFNLEdBQUcsQ0FBVDtBQUNEOztBQUVELE1BQUksTUFBTSxNQUFNLEdBQUcsVUFBbkIsRUFBK0I7QUFDN0IsUUFBSSxNQUFNLE1BQU0sQ0FBTixHQUFVLEdBQUcsU0FBdkIsRUFBa0M7QUFDaEMsZUFBUyxTQUFUO0FBQ0QsS0FGRCxNQUVPLElBQUksTUFBTSxNQUFNLENBQU4sR0FBVSxHQUFHLFNBQXZCLEVBQWtDO0FBQ3ZDLGVBQVMsVUFBVDtBQUNELEtBRk0sTUFFQTtBQUNMLGVBQVMsV0FBVDtBQUNEO0FBQ0YsR0FSRCxNQVFPLElBQUksTUFBTSxNQUFNLEdBQUcsVUFBbkIsRUFBK0I7QUFDcEMsUUFBSSxNQUFNLE1BQU0sQ0FBTixHQUFVLEdBQUcsU0FBdkIsRUFBa0M7QUFDaEMsZUFBUyxZQUFUO0FBQ0QsS0FGRCxNQUVPLElBQUksTUFBTSxNQUFNLENBQU4sR0FBVSxHQUFHLFNBQXZCLEVBQWtDO0FBQ3ZDLGVBQVMsYUFBVDtBQUNELEtBRk0sTUFFQTtBQUNMLGVBQVMsY0FBVDtBQUNEO0FBQ0YsR0FSTSxNQVFBO0FBQ0wsUUFBSSxNQUFNLE1BQU0sR0FBRyxTQUFuQixFQUE4QjtBQUM1QixlQUFTLFlBQVQ7QUFDRCxLQUZELE1BRU87QUFDTCxlQUFTLGFBQVQ7QUFDRDtBQUNGOztBQUVELE1BQUksV0FBVyxXQUFYLElBQTBCLFdBQVcsY0FBckMsSUFDQSxXQUFXLFlBRFgsSUFDMkIsV0FBVyxhQUQxQyxFQUN5RDtBQUN2RCxnQkFBWSxtQkFBbUIsRUFBbkIsRUFBdUIsRUFBdkIsRUFBMkIsTUFBM0IsRUFBbUMsTUFBbkMsQ0FBWjtBQUNELEdBSEQsTUFHTztBQUNMLFFBQUksUUFBUSxFQUFaOztBQUVBLFlBQVEsTUFBUjtBQUNFLFdBQUssU0FBTDtBQUNFLGNBQU0sQ0FBTixHQUFVLEdBQVY7QUFDQSxjQUFNLENBQU4sR0FBVSxHQUFWO0FBQ0E7QUFDRixXQUFLLFVBQUw7QUFDRSxjQUFNLENBQU4sR0FBVSxNQUFNLEdBQUcsS0FBbkI7QUFDQSxjQUFNLENBQU4sR0FBVSxHQUFWO0FBQ0E7QUFDRixXQUFLLFlBQUw7QUFDRSxjQUFNLENBQU4sR0FBVSxHQUFWO0FBQ0EsY0FBTSxDQUFOLEdBQVUsTUFBTSxHQUFHLE1BQW5CO0FBQ0E7QUFDRixXQUFLLGFBQUw7QUFDRSxjQUFNLENBQU4sR0FBVSxNQUFNLEdBQUcsS0FBbkI7QUFDQSxjQUFNLENBQU4sR0FBVSxNQUFNLEdBQUcsTUFBbkI7QUFmSjs7QUFrQkEsZ0JBQVkscUJBQXFCLEVBQXJCLEVBQXlCLEtBQXpCLEVBQWdDLE1BQWhDLEVBQXdDLE1BQXhDLENBQVo7QUFDRDs7QUFFRCxNQUFJLFNBQUosRUFBZTtBQUNiLFdBQU8sTUFBUDtBQUNELEdBRkQsTUFFTztBQUNMLFdBQU8sU0FBUDtBQUNEO0FBQ0Y7O0FBRU0sU0FBUyxvQkFBVCxDQUE4QixFQUE5QixFQUFrQyxLQUFsQyxFQUF5RTtBQUFBLE1BQWhDLE1BQWdDLHVFQUF2QixLQUF1QjtBQUFBLE1BQWhCLE1BQWdCLHVFQUFQLEtBQU87O0FBQzlFLFFBQU0sUUFBTixHQUFpQixDQUFqQjtBQUNBLFFBQU0sTUFBTixHQUFlLEdBQWY7QUFDQSxRQUFNLE9BQU4sR0FBZ0IsTUFBTSxDQUF0QjtBQUNBLFFBQU0sT0FBTixHQUFnQixNQUFNLENBQXRCO0FBQ0EsUUFBTSxFQUFOLEdBQVcsTUFBTSxDQUFqQjtBQUNBLFFBQU0sRUFBTixHQUFXLE1BQU0sQ0FBakI7QUFDQSxTQUFPLGdCQUFnQixFQUFoQixFQUFvQixLQUFwQixFQUEyQixNQUEzQixFQUFtQyxNQUFuQyxDQUFQO0FBQ0Q7O0FBRUQsU0FBUyxnQkFBVCxDQUEwQixDQUExQixFQUE2QixDQUE3QixFQUFnQztBQUM5QixNQUFJLFlBQUo7QUFBQSxNQUFTLFlBQVQ7QUFBQSxNQUNFLEtBQUssRUFEUDtBQUFBLE1BRUUsS0FBSyxFQUZQO0FBQUEsTUFHRSxTQUFTLEVBSFg7QUFBQSxNQUlFLE9BQU8sRUFBRSxJQUFGLElBQVUsQ0FKbkI7O0FBTUEsSUFBRSxFQUFGLEdBQU8sRUFBRSxDQUFUO0FBQ0EsSUFBRSxFQUFGLEdBQU8sQ0FBQyxFQUFFLENBQVY7O0FBRUEsSUFBRSxTQUFGLEdBQWMsS0FBSyxJQUFMLENBQVUsRUFBRSxDQUFGLEdBQU0sRUFBRSxDQUFSLEdBQVksRUFBRSxDQUFGLEdBQU0sRUFBRSxDQUE5QixDQUFkO0FBQ0EsSUFBRSxFQUFGLEdBQU8sRUFBRSxDQUFGLEdBQU0sRUFBRSxTQUFmO0FBQ0EsSUFBRSxFQUFGLEdBQU8sRUFBRSxDQUFGLEdBQU0sRUFBRSxTQUFmO0FBQ0EsUUFBTSxFQUFFLEVBQUYsR0FBTyxFQUFFLEVBQVQsR0FBYyxFQUFFLEVBQUYsR0FBTyxFQUFFLEVBQTdCOztBQUVBLEtBQUcsRUFBSCxHQUFRLE1BQU0sRUFBRSxFQUFoQjtBQUNBLEtBQUcsRUFBSCxHQUFRLE1BQU0sRUFBRSxFQUFoQjs7QUFFQSxRQUFNLEVBQUUsRUFBRixJQUFRLEVBQUUsRUFBRixHQUFPLEVBQUUsU0FBakIsSUFBOEIsRUFBRSxFQUFGLElBQVEsRUFBRSxFQUFGLEdBQU8sRUFBRSxTQUFqQixDQUFwQzs7QUFFQSxLQUFHLEVBQUgsR0FBUSxPQUFPLEVBQUUsRUFBRixHQUFPLEVBQUUsU0FBaEIsQ0FBUjtBQUNBLEtBQUcsRUFBSCxHQUFRLE9BQU8sRUFBRSxFQUFGLEdBQU8sRUFBRSxTQUFoQixDQUFSOztBQUVBLEtBQUcsRUFBSCxJQUFTLENBQUMsQ0FBVjtBQUNBLEtBQUcsRUFBSCxJQUFTLENBQUMsQ0FBVjs7QUFFQSxTQUFPLENBQVAsR0FBVyxHQUFHLEVBQUgsR0FBUSxHQUFHLEVBQXRCO0FBQ0EsU0FBTyxDQUFQLEdBQVcsR0FBRyxFQUFILEdBQVEsR0FBRyxFQUF0Qjs7QUFFQSxJQUFFLEVBQUYsR0FBTyxPQUFPLENBQVAsR0FBVyxJQUFsQjtBQUNBLElBQUUsRUFBRixHQUFPLE9BQU8sQ0FBUCxHQUFXLElBQWxCO0FBQ0Q7O0FBRU0sU0FBUyxHQUFULENBQWEsQ0FBYixFQUFnQixDQUFoQixFQUE2RTtBQUFBLE1BQTFELEtBQTBELHVFQUFsRCxLQUFrRDtBQUFBLE1BQTNDLE1BQTJDLHVFQUFsQyxLQUFrQztBQUFBLE1BQTNCLE1BQTJCO0FBQUEsTUFBbkIsS0FBbUIsdUVBQVgsU0FBVzs7QUFDbEYsTUFBSSxrQkFBSjtBQUFBLE1BQ0ksYUFBYSxFQUFFLE1BQUYsS0FBYSxTQUQ5QjtBQUFBLE1BRUksYUFBYSxFQUFFLE1BQUYsS0FBYSxTQUY5Qjs7QUFJQSxNQUFJLGNBQWMsYUFBYSxLQUEzQixJQUFvQyxjQUFjLGFBQWEsS0FBbkUsRUFBMEU7QUFDeEU7QUFDRCxHQUZELE1BRU87QUFDTCxnQkFBWSxrQkFBa0IsQ0FBbEIsRUFBcUIsQ0FBckIsQ0FBWjtBQUNBLFFBQUksYUFBYSxLQUFqQixFQUF3QixNQUFNLFNBQU47QUFDekI7O0FBRUQsU0FBTyxTQUFQOztBQUVBLFdBQVMsaUJBQVQsQ0FBMkIsQ0FBM0IsRUFBOEIsQ0FBOUIsRUFBaUM7QUFDL0IsUUFBSSxhQUFhLEVBQUUsTUFBRixLQUFhLFNBQTlCO0FBQ0EsUUFBSSxhQUFhLEVBQUUsTUFBRixLQUFhLFNBQTlCOztBQUVBLFFBQUksY0FBYyxVQUFsQixFQUE4QjtBQUM1QixVQUFJLEVBQUUsUUFBRixJQUFjLEVBQUUsUUFBcEIsRUFBOEI7QUFDNUIsZUFBTyxlQUFlLENBQWYsRUFBa0IsQ0FBbEIsQ0FBUDtBQUNELE9BRkQsTUFFTyxJQUFJLEVBQUUsUUFBRixJQUFjLENBQUMsRUFBRSxRQUFyQixFQUErQjtBQUNwQyxlQUFPLGtCQUFrQixDQUFsQixFQUFxQixDQUFyQixDQUFQO0FBQ0QsT0FGTSxNQUVBO0FBQ0wsZUFBTyxxQkFBcUIsQ0FBckIsRUFBd0IsQ0FBeEIsQ0FBUDtBQUNEO0FBQ0YsS0FSRCxNQVFPLElBQUksY0FBYyxFQUFFLEVBQUUsQ0FBRixLQUFRLFNBQVYsQ0FBZCxJQUFzQyxFQUFFLEVBQUUsQ0FBRixLQUFRLFNBQVYsQ0FBMUMsRUFBZ0U7QUFDckUsYUFBTyxhQUFhLENBQWIsRUFBZ0IsQ0FBaEIsQ0FBUDtBQUNELEtBRk0sTUFFQTtBQUNMLFlBQU0sSUFBSSxLQUFKLENBQWEsQ0FBYixhQUFzQixDQUF0QixvREFBTjtBQUNEO0FBQ0Y7O0FBRUQsV0FBUyxhQUFULEdBQXlCO0FBQ3ZCLFFBQUksYUFBYSxLQUFqQixFQUF3QjtBQUFBLGlCQUNULENBQUMsRUFBRCxFQUFJLEVBQUosQ0FEUztBQUFBLFVBQ2pCLEVBRGlCO0FBQUEsVUFDZCxFQURjO0FBRXZCO0FBQ0QsU0FBSyxJQUFJLElBQUksRUFBRSxNQUFGLEdBQVcsQ0FBeEIsRUFBMkIsS0FBSyxDQUFoQyxFQUFtQyxHQUFuQyxFQUF3QztBQUN0QyxVQUFJLFNBQVMsRUFBRSxDQUFGLENBQWI7QUFDQSxrQkFBWSxrQkFBa0IsQ0FBbEIsRUFBcUIsTUFBckIsQ0FBWjtBQUNBLFVBQUksYUFBYSxLQUFqQixFQUF3QixNQUFNLFNBQU4sRUFBaUIsTUFBakI7QUFDekI7QUFDRjs7QUFFRCxXQUFTLGNBQVQsQ0FBd0IsQ0FBeEIsRUFBMkIsQ0FBM0IsRUFBOEI7QUFDNUIsUUFBSSxDQUFDLEtBQUwsRUFBWTtBQUNWLGFBQU8sY0FBYyxDQUFkLEVBQWlCLENBQWpCLENBQVA7QUFDRCxLQUZELE1BRU87QUFDTCxVQUFJLEVBQUUsRUFBRixHQUFPLEVBQUUsRUFBVCxLQUFnQixDQUFoQixJQUFxQixFQUFFLEVBQUYsR0FBTyxFQUFFLEVBQVQsS0FBZ0IsQ0FBekMsRUFBNEM7QUFDMUMsZUFBTyxzQkFBc0IsQ0FBdEIsRUFBeUIsQ0FBekIsRUFBNEIsTUFBNUIsQ0FBUDtBQUNELE9BRkQsTUFFTztBQUNMLGVBQU8sZ0JBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLE1BQXRCLEVBQThCLE1BQTlCLENBQVA7QUFDRDtBQUNGO0FBQ0Y7O0FBRUQsV0FBUyxvQkFBVCxDQUE4QixDQUE5QixFQUFpQyxDQUFqQyxFQUFvQztBQUNsQyxRQUFJLENBQUMsS0FBTCxFQUFZO0FBQ1YsYUFBTyxpQkFBaUIsQ0FBakIsRUFBb0IsQ0FBcEIsRUFBdUIsTUFBdkIsQ0FBUDtBQUNELEtBRkQsTUFFTztBQUNMLGFBQU8sbUJBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLE1BQXpCLEVBQWlDLE1BQWpDLENBQVA7QUFDRDtBQUNGOztBQUVELFdBQVMsaUJBQVQsQ0FBMkIsQ0FBM0IsRUFBOEIsQ0FBOUIsRUFBaUM7QUFDL0IsUUFBSSxDQUFDLEtBQUwsRUFBWTtBQUNWLGFBQU8sdUJBQXVCLENBQXZCLEVBQTBCLENBQTFCLEVBQTZCLE1BQTdCLENBQVA7QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPLHlCQUF5QixDQUF6QixFQUE0QixDQUE1QixFQUErQixNQUEvQixFQUF1QyxNQUF2QyxDQUFQO0FBQ0Q7QUFDRjtBQUNGOzs7Ozs7Ozs7OztBQ2hoQkQ7QUFDQTtBQUNBOztBQUVBLE9BQU8sU0FBUCxDQUFpQixHQUFqQixHQUF1QixVQUFTLE1BQVQsRUFBaUIsS0FBakIsRUFBd0IsTUFBeEIsRUFBZ0MsS0FBaEMsRUFBdUM7QUFDNUQsU0FBTyxTQUFTLENBQUMsUUFBUSxNQUFULEtBQW9CLENBQUMsT0FBTyxNQUFSLEtBQW1CLFFBQVEsTUFBM0IsQ0FBcEIsQ0FBaEI7QUFDRCxDQUZEOztBQUlBLE9BQU8sU0FBUCxDQUFpQixLQUFqQixHQUF5QixVQUFTLEdBQVQsRUFBYyxHQUFkLEVBQW1CO0FBQzFDLFNBQU8sS0FBSyxHQUFMLENBQVMsR0FBVCxFQUFjLEtBQUssR0FBTCxDQUFTLEdBQVQsRUFBYyxJQUFkLENBQWQsQ0FBUDtBQUNELENBRkQ7O0FBSUEsT0FBTyxTQUFQLENBQWlCLEtBQWpCLEdBQXlCLFVBQVMsU0FBVCxFQUFvQjtBQUMzQyxjQUFZLEtBQUssR0FBTCxDQUFTLEVBQVQsRUFBYSxhQUFhLENBQTFCLENBQVo7QUFDQSxTQUFPLEtBQUssS0FBTCxDQUFXLE9BQU8sU0FBbEIsSUFBK0IsU0FBdEM7QUFDRCxDQUhEOztBQUtBLE9BQU8sU0FBUCxDQUFpQixLQUFqQixHQUF5QixZQUFXO0FBQ2xDLFNBQVEsT0FBTyxDQUFmO0FBQ0QsQ0FGRDs7QUFJQSxPQUFPLFNBQVAsQ0FBaUIsS0FBakIsR0FBeUIsWUFBVztBQUNsQyxTQUFRLE9BQU8sR0FBUixHQUFlLEtBQUssRUFBM0I7QUFDRCxDQUZEOztBQUlBLE9BQU8sU0FBUCxDQUFpQixLQUFqQixHQUF5QixZQUFXO0FBQ2xDLFNBQVEsT0FBTyxHQUFSLEdBQWUsS0FBSyxFQUEzQjtBQUNELENBRkQ7O0FBSUEsTUFBTSxTQUFOLENBQWdCLEtBQWhCLEdBQXdCLFVBQVMsSUFBVCxFQUFlO0FBQ3JDLE9BQUssSUFBSSxJQUFJLEtBQUssTUFBbEIsRUFBMEIsR0FBMUIsR0FBZ0M7QUFDOUIsUUFBSSxLQUFLLENBQUwsS0FBVyxJQUFmLEVBQXFCO0FBQ25CLFdBQUssTUFBTCxDQUFZLENBQVosRUFBZSxDQUFmO0FBQ0Q7QUFDRjtBQUNELFNBQU8sSUFBUDtBQUNELENBUEQ7O0FBU0EsTUFBTSxTQUFOLENBQWdCLEdBQWhCLEdBQXNCLFVBQVMsSUFBVCxFQUFjO0FBQ2xDLFNBQVEsS0FBSyxPQUFMLENBQWEsSUFBYixNQUF1QixDQUFDLENBQWhDO0FBQ0QsQ0FGRDs7QUFJQSxNQUFNLFNBQU4sQ0FBZ0IsTUFBaEIsR0FBeUIsWUFBVztBQUNsQyxTQUFPLEtBQUssS0FBSyxLQUFMLENBQVcsS0FBSyxNQUFMLEtBQWdCLEtBQUssTUFBaEMsQ0FBTCxDQUFQO0FBQ0QsQ0FGRDs7QUFJQSxNQUFNLFNBQU4sQ0FBZ0IsT0FBaEIsR0FBMEIsWUFBVztBQUNuQyxPQUFLLElBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxJQUFJLEtBQUssTUFBeEIsRUFBZ0MsQ0FBaEMsR0FBb0M7QUFDbEMsUUFBSSxTQUFTLEtBQUssTUFBTCxLQUFnQixDQUF6QixDQUFKO0FBQ0EsUUFBSSxLQUFLLEVBQUUsQ0FBUCxDQUFKO0FBQ0EsU0FBSyxDQUFMLElBQVUsS0FBSyxDQUFMLENBQVY7QUFDQSxTQUFLLENBQUwsSUFBVSxDQUFWO0FBQ0Q7QUFDRCxTQUFPLElBQVA7QUFDRCxDQVJEOztBQVVBLENBQUMsVUFBUyxNQUFULEVBQWlCO0FBQ2hCLE1BQUksVUFBVSxDQUFkOztBQUVBLE1BQUksRUFBSixHQUFTLFVBQVMsUUFBVCxFQUFtQjtBQUMxQixXQUFPLFNBQVMsTUFBVCxDQUFnQixDQUFoQixLQUFzQixHQUF0QixHQUNMLFNBQVMsY0FBVCxDQUF3QixTQUFTLE1BQVQsQ0FBZ0IsQ0FBaEIsQ0FBeEIsQ0FESyxHQUVMLFNBQVMsb0JBQVQsQ0FBOEIsUUFBOUIsQ0FGRjtBQUdELEdBSkQ7O0FBTUEsTUFBSSxLQUFKLEdBQVksVUFBUyxJQUFULEVBQWU7QUFDekIsV0FBTyxTQUFTLGFBQVQsQ0FBdUIsSUFBdkIsQ0FBUDtBQUNELEdBRkQ7O0FBSUEsTUFBSSxDQUFKLEdBQVE7QUFDTixZQUFRLGtCQUE0QjtBQUFBLFVBQW5CLElBQW1CLHVFQUFaLEVBQVk7QUFBQSxVQUFSLE1BQVE7O0FBQ2xDLFVBQUksQ0FBQyxNQUFMLEVBQWEsT0FBTyxJQUFQO0FBQ2IsV0FBSyxJQUFJLElBQVQsSUFBaUIsTUFBakIsRUFBeUI7QUFDdkIsYUFBSyxJQUFMLElBQWEsT0FBTyxJQUFQLENBQWI7QUFDRDtBQUNELGFBQU8sSUFBUDtBQUNELEtBUEs7O0FBU04sV0FBTyxlQUFTLEdBQVQsRUFBYztBQUNuQixhQUFPLEVBQUUsTUFBRixDQUFTLEVBQVQsRUFBYSxHQUFiLENBQVA7QUFDRCxLQVhLOztBQWFOLFVBQU0sY0FBUyxHQUFULEVBQWM7QUFDbEIsVUFBSSxDQUFDLEdBQUQsSUFBUSxRQUFPLEdBQVAseUNBQU8sR0FBUCxNQUFlLFFBQXZCLElBQ0YsZUFBZSxXQURqQixFQUM4QjtBQUM1QixlQUFPLEdBQVA7QUFDRCxPQUhELE1BR08sSUFBSSxlQUFlLEtBQW5CLEVBQTBCO0FBQy9CLFlBQUksSUFBSSxFQUFSO0FBQ0EsYUFBSyxJQUFJLElBQUksQ0FBUixFQUFXLElBQUksSUFBSSxNQUF4QixFQUFnQyxJQUFJLENBQXBDLEVBQXVDLEVBQUUsQ0FBekMsRUFBNEM7QUFDMUMsWUFBRSxDQUFGLElBQU8sRUFBRSxJQUFGLENBQU8sSUFBSSxDQUFKLENBQVAsQ0FBUDtBQUNEO0FBQ0QsZUFBTyxDQUFQO0FBQ0QsT0FOTSxNQU1BO0FBQ0wsWUFBSSxLQUFJLEVBQVI7QUFDQSxhQUFLLElBQUksRUFBVCxJQUFjLEdBQWQsRUFBbUI7QUFDakIsYUFBRSxFQUFGLElBQU8sRUFBRSxJQUFGLENBQU8sSUFBSSxFQUFKLENBQVAsQ0FBUDtBQUNEO0FBQ0QsZUFBTyxFQUFQO0FBQ0Q7QUFDRixLQTlCSzs7QUFnQ04sY0FBVSxvQkFBNEI7QUFBQSxVQUFuQixJQUFtQix1RUFBWixFQUFZO0FBQUEsVUFBUixNQUFROztBQUNwQyxVQUFJLENBQUMsTUFBTCxFQUFhLE9BQU8sSUFBUDtBQUNiLFdBQUssSUFBSSxJQUFULElBQWlCLE1BQWpCLEVBQXlCO0FBQ3ZCLFlBQUksS0FBSyxJQUFMLE1BQWUsS0FBSyxDQUF4QixFQUEyQjtBQUN6QixlQUFLLElBQUwsSUFBYSxPQUFPLElBQVAsQ0FBYjtBQUNEO0FBQ0Y7QUFDRCxhQUFPLElBQVA7QUFDRCxLQXhDSzs7QUEwQ04sWUFBUSxrQkFBNEI7QUFBQSxVQUFuQixJQUFtQix1RUFBWixFQUFZO0FBQUEsVUFBUixNQUFROztBQUNsQyxVQUFJLENBQUMsTUFBTCxFQUFhLE9BQU8sSUFBUDtBQUNiLFdBQUssSUFBSSxJQUFULElBQWlCLE1BQWpCLEVBQXlCO0FBQ3ZCLFlBQUksRUFBRSxLQUFLLElBQUwsTUFBZSxLQUFLLENBQXRCLENBQUosRUFBOEI7QUFDNUIsZUFBSyxJQUFMLElBQWEsT0FBTyxJQUFQLENBQWI7QUFDRDtBQUNGO0FBQ0QsYUFBTyxJQUFQO0FBQ0QsS0FsREs7O0FBb0ROLFNBQUssYUFBUyxHQUFULEVBQWMsR0FBZCxFQUFtQjtBQUN0QixhQUFPLE9BQU8sU0FBUCxDQUFpQixjQUFqQixDQUFnQyxHQUFoQyxFQUFxQyxHQUFyQyxDQUFQO0FBQ0QsS0F0REs7O0FBd0ROLGNBQVUsa0JBQVMsR0FBVCxFQUFjO0FBQ3RCLGFBQU8sT0FBTyxHQUFQLEtBQWUsUUFBdEI7QUFDRCxLQTFESzs7QUE0RE4sY0FBVSxrQkFBUyxHQUFULEVBQWM7QUFDdEIsYUFBTyxPQUFPLFNBQVAsQ0FBaUIsUUFBakIsQ0FBMEIsSUFBMUIsQ0FBK0IsR0FBL0IsTUFBd0MsaUJBQS9DO0FBQ0QsS0E5REs7O0FBZ0VOLGdCQUFZLG9CQUFTLEdBQVQsRUFBYztBQUN4QixhQUFPLE9BQU8sU0FBUCxDQUFpQixRQUFqQixDQUEwQixJQUExQixDQUErQixHQUEvQixNQUF3QyxtQkFBL0M7QUFDRCxLQWxFSzs7QUFvRU4sY0FBVSxrQkFBUyxHQUFULEVBQWM7QUFDdEIsYUFBTyxPQUFPLFNBQVAsQ0FBaUIsUUFBakIsQ0FBMEIsSUFBMUIsQ0FBK0IsR0FBL0IsTUFBd0MsaUJBQS9DO0FBQ0QsS0F0RUs7O0FBd0VOLGFBQVMsaUJBQVMsR0FBVCxFQUFjO0FBQ3JCLGFBQU8sT0FBTyxTQUFQLENBQWlCLFFBQWpCLENBQTBCLElBQTFCLENBQStCLEdBQS9CLE1BQXdDLGdCQUEvQztBQUNELEtBMUVLOztBQTRFTixpQkFBYSxxQkFBUyxHQUFULEVBQWM7QUFDekIsYUFBTyxRQUFRLEtBQUssQ0FBcEI7QUFDRCxLQTlFSzs7QUFnRk4saUJBQWEscUJBQVMsR0FBVCxFQUFjLFFBQWQsRUFBd0I7QUFDbkMsVUFBSSxNQUFNLElBQUksUUFBSixDQUFWO0FBQ0EsYUFBTyxJQUFJLFFBQUosQ0FBUDtBQUNBLGFBQU8sR0FBUDtBQUNELEtBcEZLOztBQXNGTixVQUFNLGNBQVMsR0FBVCxFQUFjLFFBQWQsRUFBd0IsT0FBeEIsRUFBaUM7QUFDckMsVUFBSSxPQUFPLElBQVgsRUFBaUI7QUFDakIsVUFBSSxJQUFJLE9BQVIsRUFBaUI7QUFDZixZQUFJLE9BQUosQ0FBWSxRQUFaLEVBQXNCLE9BQXRCO0FBQ0QsT0FGRCxNQUVPLElBQUksSUFBSSxNQUFKLEtBQWUsQ0FBQyxJQUFJLE1BQXhCLEVBQWdDO0FBQ3JDLGFBQUssSUFBSSxJQUFJLENBQVIsRUFBVyxJQUFJLElBQUksTUFBeEIsRUFBZ0MsSUFBSSxDQUFwQyxFQUF1QyxFQUFFLENBQXpDLEVBQTRDO0FBQzFDLG1CQUFTLElBQVQsQ0FBYyxPQUFkLEVBQXVCLElBQUksQ0FBSixDQUF2QixFQUErQixDQUEvQixFQUFrQyxHQUFsQztBQUNEO0FBQ0YsT0FKTSxNQUlBO0FBQ0wsYUFBSyxJQUFJLEdBQVQsSUFBZ0IsR0FBaEIsRUFBcUI7QUFDbkIsbUJBQVMsSUFBVCxDQUFjLE9BQWQsRUFBdUIsSUFBSSxHQUFKLENBQXZCLEVBQWlDLEdBQWpDLEVBQXNDLEdBQXRDO0FBQ0Q7QUFDRjtBQUNGLEtBbkdLOztBQXFHTixZQUFRLGdCQUFTLEdBQVQsRUFBYyxRQUFkLEVBQXdCLElBQXhCLEVBQThCLElBQTlCLEVBQW9DO0FBQzFDLFVBQUksT0FBTyxJQUFYLEVBQWlCO0FBQ2pCLFdBQUssSUFBSSxJQUFJLENBQVIsRUFBVyxJQUFJLElBQUksTUFBeEIsRUFBZ0MsSUFBSSxDQUFwQyxFQUF1QyxFQUFFLENBQXpDLEVBQTRDO0FBQzFDLFlBQUksQ0FBSixFQUFPLFFBQVAsRUFBaUIsSUFBakIsRUFBdUIsSUFBdkI7QUFDRDtBQUNGLEtBMUdLOztBQTRHTixZQUFRLGdCQUFTLEdBQVQsRUFBYyxRQUFkLEVBQXdCLE9BQXhCLEVBQWlDLElBQWpDLEVBQXVDLElBQXZDLEVBQTZDO0FBQ25ELFVBQUksZUFBSjtBQUNBLFVBQUksT0FBTyxJQUFYLEVBQWlCLE9BQU8sS0FBUDtBQUNqQixVQUFJLElBQUksTUFBSixLQUFlLENBQUMsSUFBSSxNQUF4QixFQUFnQztBQUM5QixhQUFLLElBQUksSUFBSSxDQUFSLEVBQVcsSUFBSSxJQUFJLE1BQXhCLEVBQWdDLElBQUksQ0FBcEMsRUFBdUMsRUFBRSxDQUF6QyxFQUE0QztBQUMxQyxtQkFBUyxTQUFTLElBQVQsQ0FBYyxPQUFkLEVBQXVCLElBQUksQ0FBSixDQUF2QixFQUErQixDQUEvQixFQUFrQyxJQUFsQyxFQUF3QyxJQUF4QyxDQUFUO0FBQ0EsY0FBSSxNQUFKLEVBQVksT0FBTyxNQUFQO0FBQ2I7QUFDRCxlQUFPLEtBQVA7QUFDRCxPQU5ELE1BTU87QUFDTCxhQUFLLElBQUksR0FBVCxJQUFnQixHQUFoQixFQUFxQjtBQUNuQixtQkFBUyxTQUFTLElBQVQsQ0FBYyxPQUFkLEVBQXVCLElBQUksR0FBSixDQUF2QixFQUFpQyxHQUFqQyxFQUFzQyxJQUF0QyxFQUE0QyxJQUE1QyxDQUFUO0FBQ0EsY0FBSSxNQUFKLEVBQVksT0FBTyxNQUFQO0FBQ2I7QUFDRCxlQUFPLEtBQVA7QUFDRDtBQUNGLEtBNUhLOztBQThITixZQUFRLGdCQUFTLEdBQVQsRUFBYyxRQUFkLEVBQXdCLE9BQXhCLEVBQWlDLElBQWpDLEVBQXVDLElBQXZDLEVBQTZDO0FBQ25ELFVBQUksU0FBUyxFQUFiO0FBQ0EsVUFBSSxhQUFKO0FBQ0EsVUFBSSxPQUFPLElBQVgsRUFBaUIsT0FBTyxLQUFQO0FBQ2pCLFVBQUksSUFBSSxNQUFKLEtBQWUsQ0FBQyxJQUFJLE1BQXhCLEVBQWdDO0FBQzlCLGFBQUssSUFBSSxJQUFJLENBQVIsRUFBVyxJQUFJLElBQUksTUFBeEIsRUFBZ0MsSUFBSSxDQUFwQyxFQUF1QyxFQUFFLENBQXpDLEVBQTRDO0FBQzFDLGlCQUFPLFNBQVMsSUFBVCxDQUFjLE9BQWQsRUFBdUIsSUFBSSxDQUFKLENBQXZCLEVBQStCLENBQS9CLEVBQWtDLElBQWxDLEVBQXdDLElBQXhDLENBQVA7QUFDQSxjQUFJLElBQUosRUFBVSxPQUFPLElBQVAsQ0FBWSxJQUFaO0FBQ1g7QUFDRCxlQUFPLE1BQVA7QUFDRCxPQU5ELE1BTU87QUFDTCxhQUFLLElBQUksR0FBVCxJQUFnQixHQUFoQixFQUFxQjtBQUNuQixtQkFBUyxTQUFTLElBQVQsQ0FBYyxPQUFkLEVBQXVCLElBQUksR0FBSixDQUF2QixFQUFpQyxHQUFqQyxFQUFzQyxJQUF0QyxFQUE0QyxJQUE1QyxDQUFUO0FBQ0EsY0FBSSxJQUFKLEVBQVUsT0FBTyxJQUFQLENBQVksSUFBWjtBQUNYO0FBQ0QsZUFBTyxNQUFQO0FBQ0Q7QUFDRixLQS9JSzs7QUFpSk4sU0FBSyxhQUFTLEdBQVQsRUFBYyxRQUFkLEVBQXdCLE9BQXhCLEVBQWlDO0FBQ3BDLFVBQUksVUFBVSxFQUFkO0FBQ0EsVUFBSSxPQUFPLElBQVgsRUFBaUIsT0FBTyxPQUFQO0FBQ2pCLFVBQUksQ0FBQyxFQUFFLFFBQUYsQ0FBVyxHQUFYLENBQUQsSUFBb0IsSUFBSSxHQUE1QixFQUFpQyxPQUFPLElBQUksR0FBSixDQUFRLFFBQVIsRUFBa0IsT0FBbEIsQ0FBUDtBQUNqQyxRQUFFLElBQUYsQ0FBTyxHQUFQLEVBQVksVUFBUyxLQUFULEVBQWdCLEtBQWhCLEVBQXVCLElBQXZCLEVBQTZCO0FBQ3ZDLGdCQUFRLFFBQVEsTUFBaEIsSUFBMEIsU0FBUyxJQUFULENBQWMsT0FBZCxFQUF1QixLQUF2QixFQUE4QixLQUE5QixFQUFxQyxJQUFyQyxDQUExQjtBQUNELE9BRkQ7QUFHQSxVQUFJLElBQUksTUFBSixLQUFlLENBQUMsSUFBSSxNQUF4QixFQUFnQyxRQUFRLE1BQVIsR0FBaUIsSUFBSSxNQUFyQjtBQUNoQyxhQUFPLE9BQVA7QUFDRCxLQTFKSzs7QUE0Sk4sVUFBTSxjQUFTLEdBQVQsRUFBYztBQUNsQixZQUFNLElBQUksS0FBSixHQUFZLElBQVosRUFBTjtBQUNBLFVBQUksU0FBUyxFQUFiOztBQUVBLFVBQUksT0FBTyxJQUFYO0FBQ0EsV0FBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLElBQUksTUFBeEIsRUFBZ0MsRUFBRSxDQUFsQyxFQUFxQztBQUNuQyxZQUFJLElBQUksQ0FBSixLQUFVLEtBQUssQ0FBZixJQUFvQixTQUFTLElBQUksQ0FBSixDQUFqQyxFQUNFLE9BQU8sSUFBUCxDQUFZLElBQUksQ0FBSixDQUFaO0FBQ0YsZUFBTyxJQUFJLENBQUosQ0FBUDtBQUNEO0FBQ0QsYUFBTyxNQUFQO0FBQ0QsS0F2S0s7O0FBeUtOLFVBQU0sT0FBTyxJQUFQLElBQWUsVUFBUyxHQUFULEVBQWM7QUFDakMsVUFBSSxFQUFFLFFBQUYsQ0FBVyxHQUFYLENBQUosRUFDRSxNQUFNLElBQUksU0FBSixDQUFjLGdCQUFkLENBQU47QUFDRixVQUFJLE9BQU8sRUFBWDtBQUNBLFdBQUssSUFBSSxHQUFULElBQWdCLEdBQWhCLEVBQXFCO0FBQ25CLFlBQUksRUFBRSxHQUFGLENBQU0sR0FBTixFQUFXLEdBQVgsQ0FBSixFQUFxQixLQUFLLEtBQUssTUFBVixJQUFvQixHQUFwQjtBQUN0QjtBQUNGLEtBaExLOztBQWtMTixXQUFPLGVBQVMsS0FBVCxFQUFnQixJQUFoQixFQUFnQztBQUFBLFVBQVYsSUFBVSx1RUFBSCxDQUFHOztBQUNyQyxVQUFJLE1BQU0sS0FBSyxHQUFMLENBQVMsS0FBSyxJQUFMLENBQVUsS0FBSyxHQUFMLENBQVMsT0FBTyxLQUFoQixJQUF5QixJQUFuQyxDQUFULEVBQW1ELENBQW5ELENBQVY7QUFDQSxVQUFJLE1BQU0sQ0FBVjtBQUNBLFVBQUksUUFBUSxJQUFJLEtBQUosQ0FBVSxHQUFWLENBQVo7O0FBRUEsYUFBTyxNQUFNLEdBQWIsRUFBa0I7QUFDaEIsY0FBTSxLQUFOLElBQWUsS0FBZjtBQUNBLFlBQUksUUFBUSxJQUFaLEVBQ0UsU0FBUyxJQUFULENBREYsS0FHRSxTQUFTLElBQVQ7QUFDSDtBQUNELGFBQU8sS0FBUDtBQUNELEtBL0xLOztBQWlNTixjQUFVLG9CQUFXO0FBQ25CLGFBQU8sU0FBUDtBQUNEO0FBbk1LLEdBQVI7QUFzTUQsQ0FuTkQsRUFtTkcsTUFuTkg7O0FBc05BLFNBQVMsWUFBVCxDQUFzQixHQUF0QixFQUEyQjtBQUN6QixNQUFJLEVBQUUsUUFBRixDQUFXLEdBQVgsQ0FBSixFQUNFLE1BQU0sSUFBSSxPQUFKLENBQVksTUFBWixFQUFvQixFQUFwQixFQUF3QixLQUF4QixDQUE4QixHQUE5QixDQUFOO0FBQ0YsTUFBSSxDQUFDLEVBQUUsT0FBRixDQUFVLEdBQVYsQ0FBTCxFQUNFLE1BQU0sQ0FBQyxHQUFELENBQU47QUFDRixTQUFPLEdBQVA7QUFDRDs7UUFHQyxZLEdBQUEsWTtrQkFHYSxFOzs7QUFHZixRQUFRLEdBQVIsQ0FBWSxvQkFBWjs7Ozs7Ozs7Ozs7O1FDM01nQixTLEdBQUEsUztRQStDQSxNLEdBQUEsTTtRQTRDQSxJLEdBQUEsSTs7QUE3S2hCOzs7O0FBQ0E7Ozs7Ozs7Ozs7SUFFYSxTLFdBQUEsUzs7O0FBQ1gsdUJBRzBCO0FBQUEsUUFIZCxLQUdjLHVFQUhOLEVBR007QUFBQSxRQUhGLE1BR0UsdUVBSE8sRUFHUDtBQUFBLFFBRmQsU0FFYyx1RUFGRixNQUVFO0FBQUEsUUFGTSxXQUVOLHVFQUZvQixNQUVwQjtBQUFBLFFBRGQsU0FDYyx1RUFERixDQUNFO0FBQUEsUUFBZCxDQUFjLHVFQUFWLENBQVU7QUFBQSxRQUFQLENBQU8sdUVBQUgsQ0FBRzs7QUFBQTs7QUFBQTs7QUFHeEIsVUFBSyxLQUFMLEdBQWEsS0FBYjtBQUNBLFVBQUssTUFBTCxHQUFjLE1BQWQ7QUFDQSxVQUFLLFNBQUwsR0FBaUIsU0FBakI7QUFDQSxVQUFLLFdBQUwsR0FBbUIsV0FBbkI7QUFDQSxVQUFLLFNBQUwsR0FBaUIsU0FBakI7QUFDQSxVQUFLLENBQUwsR0FBUyxDQUFUO0FBQ0EsVUFBSyxDQUFMLEdBQVMsQ0FBVDs7QUFFQSxVQUFLLElBQUwsR0FBWSxLQUFaO0FBWHdCO0FBWXpCOzs7OzJCQUVNLEcsRUFBSztBQUNWLFVBQUksV0FBSixHQUFrQixLQUFLLFdBQXZCO0FBQ0EsVUFBSSxTQUFKLEdBQWdCLEtBQUssU0FBckI7QUFDQSxVQUFJLFNBQUosR0FBZ0IsS0FBSyxTQUFyQjtBQUNBLFVBQUksU0FBSjtBQUNBLFVBQUksSUFBSixDQUNFLENBQUMsS0FBSyxLQUFOLEdBQWMsS0FBSyxNQURyQixFQUVFLENBQUMsS0FBSyxNQUFOLEdBQWUsS0FBSyxNQUZ0QixFQUdFLEtBQUssS0FIUCxFQUlFLEtBQUssTUFKUDtBQU1BLFVBQUcsS0FBSyxXQUFMLEtBQXFCLE1BQXhCLEVBQWdDLElBQUksTUFBSjtBQUNoQyxVQUFHLEtBQUssU0FBTCxLQUFtQixNQUF0QixFQUE4QixJQUFJLElBQUo7QUFDOUIsVUFBRyxLQUFLLElBQUwsSUFBYSxLQUFLLElBQUwsS0FBYyxJQUE5QixFQUFvQyxJQUFJLElBQUo7QUFDckM7Ozs7OztJQUdVLGdCLFdBQUEsZ0I7OztBQUNYLDhCQUcwQjtBQUFBLFFBSGQsS0FHYyx1RUFITixFQUdNO0FBQUEsUUFIRixNQUdFLHVFQUhPLEVBR1A7QUFBQSxRQUhXLE1BR1gsdUVBSG9CLEVBR3BCO0FBQUEsUUFGZCxTQUVjLHVFQUZGLE1BRUU7QUFBQSxRQUZNLFdBRU4sdUVBRm9CLE1BRXBCO0FBQUEsUUFEZCxTQUNjLHVFQURGLENBQ0U7QUFBQSxRQUFkLENBQWMsdUVBQVYsQ0FBVTtBQUFBLFFBQVAsQ0FBTyx1RUFBSCxDQUFHOztBQUFBOztBQUFBOztBQUd4QixXQUFLLEtBQUwsR0FBYSxLQUFiO0FBQ0EsV0FBSyxNQUFMLEdBQWMsTUFBZDtBQUNBLFdBQUssTUFBTCxHQUFjLE1BQWQ7QUFDQSxXQUFLLFNBQUwsR0FBaUIsU0FBakI7QUFDQSxXQUFLLFdBQUwsR0FBbUIsV0FBbkI7QUFDQSxXQUFLLFNBQUwsR0FBaUIsU0FBakI7QUFDQSxXQUFLLENBQUwsR0FBUyxDQUFUO0FBQ0EsV0FBSyxDQUFMLEdBQVMsQ0FBVDs7QUFFQSxXQUFLLElBQUwsR0FBWSxLQUFaO0FBWndCO0FBYXpCOzs7OzJCQUVNLEcsRUFBSztBQUNWLFVBQUksV0FBSixHQUFrQixLQUFLLFdBQXZCO0FBQ0EsVUFBSSxTQUFKLEdBQWdCLEtBQUssU0FBckI7QUFDQSxVQUFJLFNBQUosR0FBZ0IsS0FBSyxTQUFyQjtBQUNBLFVBQUksU0FBSjs7QUFFQSxVQUFJLElBQUksQ0FBQyxLQUFLLEtBQU4sR0FBYyxLQUFLLE1BQTNCO0FBQ0EsVUFBSSxJQUFJLENBQUMsS0FBSyxNQUFOLEdBQWUsS0FBSyxNQUE1QjtBQUNBLFVBQUksUUFBUSxLQUFLLEtBQWpCO0FBQ0EsVUFBSSxTQUFTLEtBQUssTUFBbEI7QUFDQSxVQUFJLFNBQVMsS0FBSyxNQUFsQjtBQUNBLFVBQUksR0FBSixDQUFRLElBQUksTUFBWixFQUFvQixJQUFJLE1BQXhCLEVBQWdDLE1BQWhDLEVBQXdDLEtBQUssRUFBN0MsRUFBaUQsS0FBSyxFQUFMLEdBQVUsQ0FBVixHQUFjLENBQS9EO0FBQ0EsVUFBSSxNQUFKLENBQVcsUUFBUSxNQUFSLEdBQWlCLENBQTVCLEVBQStCLENBQS9CO0FBQ0EsVUFBSSxHQUFKLENBQVEsUUFBUSxNQUFSLEdBQWlCLENBQXpCLEVBQTRCLFNBQVMsQ0FBckMsRUFBd0MsTUFBeEMsRUFBZ0QsS0FBSyxFQUFMLEdBQVUsQ0FBVixHQUFjLENBQTlELEVBQWlFLEtBQUssRUFBTCxHQUFVLENBQTNFO0FBQ0EsVUFBSSxNQUFKLENBQVcsUUFBUSxDQUFuQixFQUFzQixTQUFTLENBQVQsR0FBYSxNQUFuQztBQUNBLFVBQUksR0FBSixDQUFRLFFBQVEsTUFBUixHQUFpQixDQUF6QixFQUE0QixTQUFTLE1BQVQsR0FBa0IsQ0FBOUMsRUFBaUQsTUFBakQsRUFBeUQsQ0FBekQsRUFBNEQsS0FBSyxFQUFMLEdBQVUsQ0FBVixHQUFjLENBQTFFO0FBQ0EsVUFBSSxNQUFKLENBQVcsU0FBUyxDQUFwQixFQUF1QixTQUFRLENBQS9CO0FBQ0EsVUFBSSxHQUFKLENBQVEsU0FBUyxDQUFqQixFQUFvQixTQUFTLE1BQVQsR0FBa0IsQ0FBdEMsRUFBeUMsTUFBekMsRUFBaUQsS0FBSyxFQUFMLEdBQVUsQ0FBVixHQUFjLENBQS9ELEVBQWtFLEtBQUssRUFBdkU7O0FBRUEsVUFBRyxLQUFLLFdBQUwsS0FBcUIsTUFBeEIsRUFBZ0MsSUFBSSxNQUFKO0FBQ2hDLFVBQUcsS0FBSyxTQUFMLEtBQW1CLE1BQXRCLEVBQThCLElBQUksSUFBSjtBQUM5QixVQUFHLEtBQUssSUFBTCxJQUFhLEtBQUssSUFBTCxLQUFjLElBQTlCLEVBQW9DLElBQUksSUFBSjtBQUNyQzs7Ozs7O0FBR0ksU0FBUyxTQUFULENBQW1CLEtBQW5CLEVBQTBCLE1BQTFCLEVBQ21CLFNBRG5CLEVBQzhCLFdBRDlCLEVBRW1CLFNBRm5CLEVBRThCLENBRjlCLEVBRWlDLENBRmpDLEVBRW9DO0FBQ3pDLE1BQUksU0FBUyxJQUFJLFNBQUosQ0FBYyxLQUFkLEVBQXFCLE1BQXJCLEVBQ2MsU0FEZCxFQUN5QixXQUR6QixFQUVjLFNBRmQsRUFFeUIsQ0FGekIsRUFFNEIsQ0FGNUIsQ0FBYjtBQUdBLGVBQU0sUUFBTixDQUFlLE1BQWY7QUFDQSxTQUFPLE1BQVA7QUFDRDs7SUFFWSxNLFdBQUEsTTs7O0FBQ1gsb0JBRzBCO0FBQUEsUUFIZCxRQUdjLHVFQUhILEVBR0c7QUFBQSxRQUZkLFNBRWMsdUVBRkYsTUFFRTtBQUFBLFFBRk0sV0FFTix1RUFGb0IsTUFFcEI7QUFBQSxRQURkLFNBQ2MsdUVBREYsQ0FDRTtBQUFBLFFBQWQsQ0FBYyx1RUFBVixDQUFVO0FBQUEsUUFBUCxDQUFPLHVFQUFILENBQUc7O0FBQUE7O0FBQUE7O0FBR3hCLFdBQUssUUFBTCxHQUFnQixJQUFoQjs7QUFFQSxXQUFLLFFBQUwsR0FBZ0IsUUFBaEI7QUFDQSxXQUFLLFNBQUwsR0FBaUIsU0FBakI7QUFDQSxXQUFLLFdBQUwsR0FBbUIsV0FBbkI7QUFDQSxXQUFLLFNBQUwsR0FBaUIsU0FBakI7QUFDQSxXQUFLLENBQUwsR0FBUyxDQUFUO0FBQ0EsV0FBSyxDQUFMLEdBQVMsQ0FBVDs7QUFFQSxXQUFLLElBQUwsR0FBWSxLQUFaO0FBWndCO0FBYXpCOzs7OzJCQUVNLEcsRUFBSztBQUNWLFVBQUksV0FBSixHQUFrQixLQUFLLFdBQXZCO0FBQ0EsVUFBSSxTQUFKLEdBQWdCLEtBQUssU0FBckI7QUFDQSxVQUFJLFNBQUosR0FBZ0IsS0FBSyxTQUFyQjtBQUNBLFVBQUksU0FBSjtBQUNBLFVBQUksR0FBSixDQUNFLEtBQUssTUFBTCxHQUFlLENBQUMsS0FBSyxRQUFOLEdBQWlCLEtBQUssTUFEdkMsRUFFRSxLQUFLLE1BQUwsR0FBZSxDQUFDLEtBQUssUUFBTixHQUFpQixLQUFLLE1BRnZDLEVBR0UsS0FBSyxNQUhQLEVBSUUsQ0FKRixFQUlLLElBQUksS0FBSyxFQUpkLEVBS0UsS0FMRjtBQU9BLFVBQUcsS0FBSyxXQUFMLEtBQXFCLE1BQXhCLEVBQWdDLElBQUksTUFBSjtBQUNoQyxVQUFHLEtBQUssU0FBTCxLQUFtQixNQUF0QixFQUE4QixJQUFJLElBQUo7QUFDOUIsVUFBRyxLQUFLLElBQUwsSUFBYSxLQUFLLElBQUwsS0FBYyxJQUE5QixFQUFvQyxJQUFJLElBQUo7QUFDckM7Ozs7OztBQUdJLFNBQVMsTUFBVCxDQUFnQixRQUFoQixFQUNnQixTQURoQixFQUMyQixXQUQzQixFQUVnQixTQUZoQixFQUdnQixDQUhoQixFQUdtQixDQUhuQixFQUdxQjtBQUMxQixNQUFJLFNBQVMsSUFBSSxNQUFKLENBQVcsUUFBWCxFQUNXLFNBRFgsRUFDc0IsV0FEdEIsRUFFVyxTQUZYLEVBR1csQ0FIWCxFQUdjLENBSGQsQ0FBYjtBQUlBLGVBQU0sUUFBTixDQUFlLE1BQWY7QUFDQSxTQUFPLE1BQVA7QUFDRDs7SUFFWSxJLFdBQUEsSTs7O0FBQ1gsa0JBT0U7QUFBQSxRQU5BLFdBTUEsdUVBTmMsTUFNZDtBQUFBLFFBTEEsU0FLQSx1RUFMWSxDQUtaO0FBQUEsUUFKQSxFQUlBLHVFQUpLLENBSUw7QUFBQSxRQUhBLEVBR0EsdUVBSEssQ0FHTDtBQUFBLFFBRkEsRUFFQSx1RUFGSyxFQUVMO0FBQUEsUUFEQSxFQUNBLHVFQURLLEVBQ0w7O0FBQUE7O0FBQUE7O0FBR0EsV0FBSyxXQUFMLEdBQW1CLFdBQW5CO0FBQ0EsV0FBSyxTQUFMLEdBQWlCLFNBQWpCO0FBQ0EsV0FBSyxFQUFMLEdBQVUsRUFBVjtBQUNBLFdBQUssRUFBTCxHQUFVLEVBQVY7QUFDQSxXQUFLLEVBQUwsR0FBVSxFQUFWO0FBQ0EsV0FBSyxFQUFMLEdBQVUsRUFBVjs7QUFFQSxXQUFLLFFBQUwsR0FBZ0IsT0FBaEI7QUFWQTtBQVdEOzs7OzJCQUVNLEcsRUFBSztBQUNWLFVBQUksV0FBSixHQUFrQixLQUFLLFdBQXZCO0FBQ0EsVUFBSSxTQUFKLEdBQWdCLEtBQUssU0FBckI7QUFDQSxVQUFJLFFBQUosR0FBZSxLQUFLLFFBQXBCO0FBQ0EsVUFBSSxTQUFKO0FBQ0EsVUFBSSxNQUFKLENBQVcsS0FBSyxFQUFoQixFQUFvQixLQUFLLEVBQXpCO0FBQ0EsVUFBSSxNQUFKLENBQVcsS0FBSyxFQUFoQixFQUFvQixLQUFLLEVBQXpCO0FBQ0EsVUFBRyxLQUFLLFdBQUwsS0FBcUIsTUFBeEIsRUFBZ0MsSUFBSSxNQUFKO0FBQ2pDOzs7Ozs7QUFHSSxTQUFTLElBQVQsQ0FBYyxXQUFkLEVBQTJCLFNBQTNCLEVBQ2MsRUFEZCxFQUNrQixFQURsQixFQUVjLEVBRmQsRUFFa0IsRUFGbEIsRUFFc0I7QUFDM0IsTUFBSSxTQUFTLElBQUksSUFBSixDQUFTLFdBQVQsRUFBc0IsU0FBdEIsRUFDUyxFQURULEVBQ2EsRUFEYixFQUVTLEVBRlQsRUFFYSxFQUZiLENBQWI7QUFHQSxlQUFNLFFBQU4sQ0FBZSxNQUFmO0FBQ0EsU0FBTyxNQUFQO0FBQ0Q7Ozs7Ozs7OztRQzFFZSxXLEdBQUEsVztRQW1QQSxRLEdBQUEsUTs7QUE5VmhCOzs7Ozs7QUFFTyxJQUFNLHNCQUFPO0FBQ25CLFlBQVUsQ0FBQyxDQURRO0FBRW5CLFlBQVUsQ0FBQyxDQUZRO0FBR25CLGVBQWEsQ0FBQyxDQUhLO0FBSW5CLGlCQUFlLENBQUMsQ0FKRzs7QUFNbkIsZUFBYSxDQU5NO0FBT25CLFNBQU8sQ0FQWTtBQVFuQixXQUFTLEVBUlU7QUFTbkIsV0FBUyxFQVRVO0FBVW5CLFVBQVEsRUFWVztBQVduQixTQUFPLEVBWFk7QUFZbkIsV0FBUyxFQVpVO0FBYW5CLGFBQVcsRUFiUTtBQWNuQixlQUFhLEVBZE07QUFlbkIsU0FBTyxFQWZZO0FBZ0JuQixVQUFRLEVBaEJXO0FBaUJuQixnQkFBYyxFQWpCSztBQWtCbkIsY0FBWSxFQWxCTztBQW1CbkIsaUJBQWUsRUFuQkk7QUFvQm5CLGdCQUFjLEVBcEJLO0FBcUJuQixZQUFVLEVBckJTO0FBc0JuQixZQUFVLEVBdEJTO0FBdUJuQixRQUFNLEVBdkJhO0FBd0JuQixRQUFNLEVBeEJhO0FBeUJuQixRQUFNLEVBekJhO0FBMEJuQixRQUFNLEVBMUJhO0FBMkJuQixRQUFNLEVBM0JhO0FBNEJuQixRQUFNLEVBNUJhO0FBNkJuQixRQUFNLEVBN0JhO0FBOEJuQixRQUFNLEVBOUJhO0FBK0JuQixRQUFNLEVBL0JhO0FBZ0NuQixRQUFNLEVBaENhO0FBaUNuQixPQUFLLEVBakNjO0FBa0NuQixPQUFLLEVBbENjO0FBbUNuQixPQUFLLEVBbkNjO0FBb0NuQixPQUFLLEVBcENjO0FBcUNuQixPQUFLLEVBckNjO0FBc0NuQixPQUFLLEVBdENjO0FBdUNuQixPQUFLLEVBdkNjO0FBd0NuQixPQUFLLEVBeENjO0FBeUNuQixPQUFLLEVBekNjO0FBMENuQixPQUFLLEVBMUNjO0FBMkNuQixPQUFLLEVBM0NjO0FBNENuQixPQUFLLEVBNUNjO0FBNkNuQixPQUFLLEVBN0NjO0FBOENuQixPQUFLLEVBOUNjO0FBK0NuQixPQUFLLEVBL0NjO0FBZ0RuQixPQUFLLEVBaERjO0FBaURuQixPQUFLLEVBakRjO0FBa0RuQixPQUFLLEVBbERjO0FBbURuQixPQUFLLEVBbkRjO0FBb0RuQixPQUFLLEVBcERjO0FBcURuQixPQUFLLEVBckRjO0FBc0RuQixPQUFLLEVBdERjO0FBdURuQixPQUFLLEVBdkRjO0FBd0RuQixPQUFLLEVBeERjO0FBeURuQixPQUFLLEVBekRjO0FBMERuQixPQUFLLEVBMURjO0FBMkRuQixjQUFZLEVBM0RPO0FBNERuQixjQUFZLEVBNURPO0FBNkRuQixjQUFZLEVBN0RPO0FBOERuQixjQUFZLEVBOURPO0FBK0RuQixjQUFZLEdBL0RPO0FBZ0VuQixjQUFZLEdBaEVPO0FBaUVuQixjQUFZLEdBakVPO0FBa0VuQixjQUFZLEdBbEVPO0FBbUVuQixjQUFZLEdBbkVPO0FBb0VuQixjQUFZLEdBcEVPO0FBcUVuQixjQUFZLEdBckVPO0FBc0VuQixTQUFPLEdBdEVZO0FBdUVuQixlQUFhLEdBdkVNO0FBd0VuQixh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QVMsSUFBVCxHQUFnQjtBQUNkO0FBQ0EsT0FBSSxJQUFJLElBQUksQ0FBWixFQUFlLElBQUcsTUFBbEIsRUFBeUIsRUFBRSxDQUEzQixFQUE4QjtBQUM1QixXQUFPLENBQVAsSUFBWSxJQUFJLE1BQUosRUFBWjtBQUNBLE1BQUUsS0FBRixDQUFRLFFBQVIsQ0FBaUIsT0FBTyxDQUFQLENBQWpCO0FBQ0EsV0FBTyxDQUFQLEVBQVUsQ0FBVixHQUFjLElBQUksR0FBbEI7QUFDRDtBQUNEO0FBQ0E7QUFDQSxTQUFPLEtBQVAsR0FBZSxFQUFmO0FBQ0Q7O0FBRUQsRUFBRSxLQUFGIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImltcG9ydCB7YnV0dG9uc30gZnJvbSAnLi9EaXNwbGF5T2JqZWN0LmpzJztcclxuaW1wb3J0IHtTcHJpdGV9IGZyb20gJy4vU3ByaXRlLmpzJztcclxuaW1wb3J0IHtzdGFnZX0gZnJvbSAnLi9TdGFnZS5qcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgQnV0dG9uIGV4dGVuZHMgU3ByaXRlIHtcclxuICBjb25zdHJ1Y3Rvcihzb3VyY2UsIHggPSAwLCB5ID0gMCkge1xyXG4gICAgc3VwZXIoc291cmNlLCB4LCB5KTtcclxuICAgIHRoaXMuaW50ZXJhY3RpdmUgPSB0cnVlO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGJ1dHRvbihzb3VyY2UseCx5KSB7XHJcbiAgbGV0IHNwcml0ZSA9IG5ldyBCdXR0b24oc291cmNlLHgseSk7XHJcbiAgc3RhZ2UuYWRkQ2hpbGQoc3ByaXRlKTtcclxuICByZXR1cm4gc3ByaXRlO1xyXG59XHJcblxyXG4iLCJpbXBvcnQge0V2ZW50RW1pdHRlcn0gZnJvbSAnLi9FdmVudEVtaXR0ZXIuanMnO1xyXG5pbXBvcnQge21ha2VDYW52YXN9IGZyb20gJy4vdXRpbC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaXNwbGF5T2JqZWN0IGV4dGVuZHMgRXZlbnRFbWl0dGVye1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIC8vICBwb3NpdGlvbiBhbmQgc2l6ZVxyXG4gICAgdGhpcy54ID0gMDtcclxuICAgIHRoaXMueSA9IDA7XHJcbiAgICB0aGlzLmxhc3RYID0gMDtcclxuICAgIHRoaXMubGFzdFkgPSAwO1xyXG4gICAgdGhpcy53aWR0aCA9IDA7XHJcbiAgICB0aGlzLmhlaWdodCA9IDA7XHJcblxyXG4gICAgLy8gcm90YXRpb24gYWxwaGEgdmlzaWJsZSBhbmQgc2NhbGUgcHJvcGVydGllc1xyXG4gICAgdGhpcy5yb3RhdGlvbiA9IDA7XHJcbiAgICB0aGlzLmFscGhhID0gMTtcclxuICAgIHRoaXMudmlzaWJsZSA9IHRydWU7XHJcbiAgICB0aGlzLnNjYWxlWCA9IDE7XHJcbiAgICB0aGlzLnNjYWxlWSA9IDE7XHJcblxyXG4gICAgLy8gIHBpdm90IGxldCB5b3Ugc2V0IHRoZSBzcHJpdGUncyBheGlzIG9mIHJvdGF0aW9uXHJcbiAgICB0aGlzLnBpdm90WCA9IDAuNTtcclxuICAgIHRoaXMucGl2b3RZID0gMC41O1xyXG5cclxuICAgIC8vIC8vIOeJqeeQhuebuOWFs1xyXG4gICAgLy8gdGhpcy52ZWwgPSB7eDogMCwgeTogMH07XHJcbiAgICAvLyB0aGlzLm1heFZlbCA9IHt4OjEwMCx5OjEwMH07XHJcbiAgICAvLyB0aGlzLmFjY2VsID0ge3g6IDAsIHk6IDB9O1xyXG4gICAgLy8gdGhpcy5mcmljdGlvbiA9IHt4OiAwLCB5OiAwfTtcclxuICAgIC8vIHRoaXMuZ3Jhdml0eUZhY3RvciA9IDE7XHJcblxyXG4gICAgLy8g5pi+56S65a655Zmo55u45YWzIFxyXG4gICAgdGhpcy5fbGF5ZXIgPSAwO1xyXG4gICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xyXG4gICAgdGhpcy5wYXJlbnQgPSB1bmRlZmluZWQ7XHJcblxyXG4gICAgLy8gaW1hZ2Ugc3RhdGVzIGFuZCBhbmltYXRpb25cclxuICAgIHRoaXMuZnJhbWVzID0gW107XHJcbiAgICB0aGlzLl9jdXJyZW50RnJhbWUgPSAwO1xyXG5cclxuICAgIC8vIOaLluWKqFxyXG4gICAgdGhpcy5fZHJhZ2dhYmxlID0gdW5kZWZpbmVkO1xyXG5cclxuICAgIHRoaXMuX2NpcmN1bGFyID0gZmFsc2U7XHJcblxyXG4gICAgdGhpcy5faW50ZXJhY3RpdmUgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIGdldCBneCgpIHtcclxuICAgIGlmICh0aGlzLnBhcmVudClcclxuICAgICAgcmV0dXJuIHRoaXMueCArIHRoaXMucGFyZW50Lmd4O1xyXG4gICAgZWxzZVxyXG4gICAgICByZXR1cm4gdGhpcy54O1xyXG4gIH1cclxuXHJcbiAgZ2V0IGd5KCkge1xyXG4gICAgaWYgKHRoaXMucGFyZW50KVxyXG4gICAgICByZXR1cm4gdGhpcy55ICsgdGhpcy5wYXJlbnQuZ3k7XHJcbiAgICBlbHNlXHJcbiAgICAgIHJldHVybiB0aGlzLnk7XHJcbiAgfVxyXG5cclxuICBnZXQgbGF5ZXIoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbGF5ZXI7XHJcbiAgfVxyXG4gIHNldCBsYXllcih2YWx1ZSkge1xyXG4gICAgdGhpcy5fbGF5ZXIgPSB2YWx1ZTtcclxuICAgIGlmICh0aGlzLnBhcmVudClcclxuICAgICAgdGhpcy5wYXJlbnQuY2hpbGRyZW4uc29ydCgoYSwgYikgPT4gYS5fbGF5ZXIgLSBiLl9sYXllcik7XHJcbiAgfVxyXG5cclxuICBhZGRDaGlsZChzcHJpdGUpIHtcclxuICAgIGlmIChzcHJpdGUucGFyZW50KVxyXG4gICAgICBzcHJpdGUucGFyZW50LnJlbW92ZUNoaWxkKHNwcml0ZSk7XHJcbiAgICBzcHJpdGUucGFyZW50ID0gdGhpcztcclxuICAgIHRoaXMuY2hpbGRyZW4ucHVzaChzcHJpdGUpO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQ2hpbGQoc3ByaXRlKSB7XHJcbiAgICBpZiAodGhpcy5oYXNDaGlsZChzcHJpdGUpKSB7XHJcbiAgICAgIHRoaXMuY2hpbGRyZW4uc3BsaWNlKHRoaXMuY2hpbGRyZW4uaW5kZXhPZihzcHJpdGUpLCAxKTtcclxuICAgICAgc3ByaXRlLnBhcmVudCA9IHVuZGVmaW5lZDtcclxuICAgIH0gZWxzZVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3Ioc3ByaXRlICsgJ2lzIG5vdCBhIGNoaWxkIG9mJyArIHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgaGFzQ2hpbGQoc3ByaXRlKSB7XHJcbiAgICByZXR1cm4gKHRoaXMuY2hpbGRyZW4uaW5kZXhPZihzcHJpdGUpICE9PSAtMSk7XHJcbiAgfVxyXG5cclxuICBnZXQgaGFsZldpZHRoKCkge1xyXG4gICAgcmV0dXJuIHRoaXMud2lkdGggPj4gMTtcclxuICB9XHJcblxyXG4gIGdldCBoYWxmSGVpZ2h0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaGVpZ2h0ID4+IDE7XHJcbiAgfVxyXG5cclxuICAvLyBUT0RPOiDnm7jlr7nkuo4gcGl2b3Qg5LiN5pivIDAuNSDnmoTkuK3lv4PngrlcclxuICBnZXQgY2VudGVyWCgpIHtcclxuICAgIHJldHVybiB0aGlzLnggKyB0aGlzLmhhbGZXaWR0aDtcclxuICB9XHJcblxyXG4gIGdldCBjZW50ZXJZKCkge1xyXG4gICAgcmV0dXJuIHRoaXMueSArIHRoaXMuaGFsZkhlaWdodDtcclxuICB9XHJcbiAgZ2V0IGNlbnRlcigpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHg6IHRoaXMuY2VudGVyWCxcclxuICAgICAgeTogdGhpcy5jZW50ZXJZXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZ2V0IGdDZW50ZXIoKSB7XHJcbiAgICBpZiAodGhpcy5wYXJlbnQpXHJcbiAgICAgIHJldHVybiB7eDp0aGlzLmNlbnRlclggKyB0aGlzLnBhcmVudC5neCxcclxuICAgICAgICAgICAgICB5OnRoaXMuY2VudGVyWSArIHRoaXMucGFyZW50Lmd5fTtcclxuICAgIGVsc2VcclxuICAgICAgcmV0dXJuIHRoaXMuY2VudGVyO1xyXG5cclxuICB9XHJcblxyXG4gIGdldCBwb3NpdGlvbigpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHg6IHRoaXMueCxcclxuICAgICAgeTogdGhpcy55XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0IHBvc3Rpb24ocG9zKSB7XHJcbiAgICB0aGlzLnggPSBwb3MueDtcclxuICAgIHRoaXMueSA9IHBvcy55O1xyXG4gIH1cclxuXHJcbiAgc2V0UG9zaXRpb24oeCwgeSkge1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgfVxyXG5cclxuICBnZXQgc2NhbGUoKSB7XHJcbiAgICByZXR1cm4ge3g6dGhpcy5zY2FsZVgsXHJcbiAgICAgICAgICAgIHk6dGhpcy5zY2FsZVl9O1xyXG4gIH1cclxuICBzZXQgc2NhbGUoc2NhbGUpIHtcclxuICAgIGlmKHNjYWxlIGluc3RhbmNlb2YgT2JqZWN0KSB7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnNjYWxlWCA9IHRoaXMuc2NhbGVZID0gc2NhbGU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgbG9jYWxCb3VuZHMoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB4OiAwLFxyXG4gICAgICB5OiAwLFxyXG4gICAgICB3aWR0aDogdGhpcy53aWR0aCxcclxuICAgICAgaGVpZ2h0OiB0aGlzLmhlaWdodFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGdldCBnbG9iYWxCb3VuZHMoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB4OiB0aGlzLmd4LFxyXG4gICAgICB5OiB0aGlzLmd5LFxyXG4gICAgICB3aWR0aDogdGhpcy5neCArIHRoaXMud2lkdGgsXHJcbiAgICAgIGhlaWdodDogdGhpcy5neSArIHRoaXMuaGVpZ2h0XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZ2V0IGlzRW1wdHkoKSB7XHJcbiAgICBpZiAodGhpcy5jaGlsZHJlbi5sZW5ndGggPT09IDApXHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgZWxzZVxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBwdXRDZW50ZXIoYiwgb2Zmc2V0WCA9IDAsIG9mZnNldFkgPSAwKSB7XHJcbiAgICBsZXQgYSA9IHRoaXM7XHJcbiAgICBiLnggPSAoYS54ICsgYS5oYWxmV2lkdGggLSBiLmhhbGZXaWR0aCkgKyBvZmZzZXRYO1xyXG4gICAgYi55ID0gKGEueSArIGEuaGFsZkhlaWdodCAtIGIuaGFsZkhlaWdodCkgKyBvZmZzZXRZO1xyXG4gIH1cclxuXHJcbiAgcHV0VG9wKGIsIG9mZnNldFggPSAwLCBvZmZzZXRZID0gMCkge1xyXG4gICAgbGV0IGEgPSB0aGlzO1xyXG4gICAgYi54ID0gKGEueCArIGEuaGFsZldpZHRoIC0gYi5oYWxmV2lkdGgpICsgb2Zmc2V0WDtcclxuICAgIGIueSA9IChhLnkgLSBiLmhlaWdodCkgKyBvZmZzZXRZO1xyXG4gIH1cclxuXHJcbiAgcHV0UmlnaHQoYiwgb2Zmc2V0WCA9IDAsIG9mZnNldFkgPSAwKSB7XHJcbiAgICBsZXQgYSA9IHRoaXM7XHJcbiAgICBiLnggPSAoYS54ICsgYS53aWR0aCkgKyBvZmZzZXRYO1xyXG4gICAgYi55ID0gKGEueSArIGEuaGFsZkhlaWdodCAtIGIuaGFsZkhlaWdodCkgKyBvZmZzZXRZO1xyXG4gIH1cclxuXHJcbiAgcHV0Qm90dG9tKGIsIG9mZnNldFggPSAwLCBvZmZzZXRZID0gMCkge1xyXG4gICAgbGV0IGEgPSB0aGlzO1xyXG4gICAgYi54ID0gKGEueCArIGEuaGFsZldpZHRoIC0gYi5oYWxmV2lkdGgpICsgb2Zmc2V0WDtcclxuICAgIGIueSA9IChhLnkgKyBhLmhlaWdodCkgKyBvZmZzZXRZO1xyXG4gIH1cclxuXHJcbiAgcHV0TGVmdChiLCBvZmZzZXRYID0gMCwgb2Zmc2V0WSA9IDApIHtcclxuICAgIGxldCBhID0gdGhpcztcclxuICAgIGIueCA9IChhLnggLSBiLndpZHRoKSArIG9mZnNldFg7XHJcbiAgICBiLnkgPSAoYS55ICsgYS5oYWxmSGVpZ2h0IC0gYi5oYWxmSGVpZ2h0KSArIG9mZnNldFk7XHJcbiAgfVxyXG5cclxuICBzd2FwQ2hpbGRyZW4oY2hpbGQxLCBjaGlsZDIpIHtcclxuICAgIGxldCBpbmRleDEgPSB0aGlzLmNoaWxkcmVuLmluZGV4T2YoY2hpbGQxKTtcclxuICAgIGxldCBpbmRleDIgPSB0aGlzLmNoaWxkcmVuLmluZGV4T2YoY2hpbGQyKTtcclxuICAgIGlmIChpbmRleDEgIT09IC0xICYmIGluZGV4MiAhPT0gLTEpIHtcclxuICAgICAgdGhpcy5jaGlsZHJlbltpbmRleDFdID0gY2hpbGQyO1xyXG4gICAgICB0aGlzLmNoaWxkcmVuW2luZGV4Ml0gPSBjaGlsZDE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEJvdGggb2JqZWN0cyBtdXN0IGJlIGEgY2hpbGQgb2YgdGhlIGNhbGxlciAke3RoaXN9YCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhZGQoLi4uc3ByaXRlcykge1xyXG4gICAgc3ByaXRlcy5mb3JFYWNoKHNwcml0ZSA9PiB0aGlzLmFkZENoaWxkKHNwcml0ZSkpO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlKC4uLnNwcml0ZXMpIHtcclxuICAgIHNwcml0ZXMuZm9yRWFjaChzcHJpdGUgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZygncmVtb3ZlOiAnICsgc3ByaXRlLmNvbnN0cnVjdG9yLm5hbWUpO1xyXG4gICAgICB0aGlzLnJlbW92ZUNoaWxkKHNwcml0ZSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdldCBjdXJyZW50RnJhbWUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fY3VycmVudEZyYW1lO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGNpcmN1bGFyKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2NpcmN1bGFyO1xyXG4gIH1cclxuXHJcbiAgc2V0IGNpcmN1bGFyKHZhbHVlKSB7XHJcbiAgICBpZiAodmFsdWUgPT09IHRydWUgJiYgdGhpcy5fY2lyY3VsYXIgPT09IGZhbHNlKSB7XHJcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcclxuICAgICAgICBkaWFtZXRlcjoge1xyXG4gICAgICAgICAgZ2V0KCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy53aWR0aDtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBzZXQodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMuaGVpZ2h0ID0gdmFsdWU7XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmFkaXVzOiB7XHJcbiAgICAgICAgICBnZXQoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmhhbGZXaWR0aDtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBzZXQodmxhdWUpIHtcclxuICAgICAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMuaGVpZ2h0ID0gdmFsdWUgPDwgMTtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5fY2lyY3VsYXIgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh2YWx1ZSA9PT0gZmFsc2UgJiYgdGhpcy5fY2lyY3VsYXIgPT09IHRydWUpIHtcclxuICAgICAgZGVsZXRlIHRoaXMuZGlhbWV0ZXI7XHJcbiAgICAgIGRlbGV0ZSB0aGlzLnJhZGl1cztcclxuICAgICAgdGhpcy5fY2lyY3VsYXIgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG5sZXQgY2FudmFzID0gIG1ha2VDYW52YXMoKTtcclxuaWYoY2FudmFzICYmIGNhbnZhcy5jdHgpIHtcclxuICBEaXNwbGF5T2JqZWN0LmhpdFRlc3RDYW52YXMgPSBjYW52YXM7XHJcbiAgY2FudmFzLndpZHRoID0gY2FudmFzLmhlaWdodCA9IDE7XHJcbiAgLy8gY2FudmFzLndpZHRoID0gNTEyO1xyXG4gIC8vIGNhbnZhcy5oZWlnaHQgPSAyNTY7XHJcbn1cclxuXHJcbi8vIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY2FudmFzKTtcclxuIiwiZXhwb3J0IGNsYXNzIEV2ZW50RW1pdHRlciB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAvLyBjb25zb2xlLmluZm8oJ0V2ZW50RW1pdHRlciAgY29uc3RydWN0aW5nJyk7XHJcbiAgICB0aGlzLl9saXN0ZW5lcnMgPSB7fTtcclxuICB9XHJcblxyXG4gIG9uKGV2ZW50LCBsaXN0ZW5lcikge1xyXG4gICAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJylcclxuICAgICAgdGhyb3cgXCJMaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb25cIjtcclxuXHJcbiAgICB0aGlzLl9saXN0ZW5lcnNbZXZlbnRdID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50XSB8fCBbXTtcclxuICAgIHRoaXMuX2xpc3RlbmVyc1tldmVudF0ucHVzaChsaXN0ZW5lcik7XHJcbiAgfVxyXG5cclxuICBlbWl0KGV2ZW50LCBkYXRhKSB7XHJcbiAgICBsZXQgbGlzdGVuZXIgPSB0aGlzLl9saXN0ZW5lcnNbZXZlbnRdO1xyXG4gICAgaWYgKGxpc3RlbmVyKSB7XHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsaXN0ZW5lcltpXS5jYWxsKHRoaXMsIGRhdGEpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBoYXNMaXN0ZW5lcihldmVudCwgbGlzdGVucikge1xyXG4gICAgbGV0IGxpc3RlbmVycyA9IHRoaXMuX2xpc3RlbmVyc1tldmVudF07XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoIWxpc3RlbnIgfHwgbGlzdGVuciA9PSBsaXN0ZW5lcnNbaV0pIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyKSB7XHJcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKVxyXG4gICAgICB0aHJvdyBcIkxpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvblwiO1xyXG5cclxuXHJcbiAgICBsZXQgbGlzdGVuZXJzID0gdGhpcy5fbGlzdGVuZXJzW2V2ZW50XTtcclxuICAgIGxldCBwb3NpdGlvbiA9IHRoaXMuX2xpc3RlbmVyc1tldmVudF0uaW5kZXhPZihsaXN0ZW5lcik7XHJcbiAgICBpZiAocG9zaXRpb24gIT0gLTEpXHJcbiAgICAgIHRoaXMuX2xpc3RlbmVyc1tldmVudF0uc3BsaWNlKHBvc2l0aW9uLCAxKTtcclxuICB9XHJcblxyXG4gIHJlbW92ZUFsbExpc3RlbmVycyhldmVudCkge1xyXG4gICAgaWYoZXZlbnQpe1xyXG4gICAgICB0aGlzLl9saXN0ZW5lcnNbZXZlbnRdID0gW107XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9saXN0ZW5lcnMgPSB7fTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IERpc3BsYXlPYmplY3QgZnJvbSAnLi9EaXNwbGF5T2JqZWN0LmpzJztcclxuaW1wb3J0IHtcclxuICBzdGFnZVxyXG59IGZyb20gJy4vU3RhZ2UuanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdyb3VwIGV4dGVuZHMgRGlzcGxheU9iamVjdCB7XHJcbiAgY29uc3RydWN0b3IoLi4uc3ByaXRlcykge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHNwcml0ZXMuZm9yRWFjaChzcHJpdGUgPT4gdGhpcy5hZGRDaGlsZChzcHJpdGUpKTtcclxuICB9XHJcblxyXG4gIGFkZENoaWxkKHNwcml0ZSkge1xyXG4gICAgc3VwZXIuYWRkQ2hpbGQoc3ByaXRlKTtcclxuICAgIEdyb3VwLmNhbGN1bGF0ZVNpemUodGhpcyk7XHJcbiAgfVxyXG5cclxuICByZW1vdmVDaGlsZChzcHJpdGUpIHtcclxuICAgIGlmIChzcHJpdGUucGFyZW50ID09PSB0aGlzKSB7XHJcbiAgICAgIHRoaXMuY2hpbGRyZW4uc3BsaWNlKHRoaXMuY2hpbGRyZW4uaW5kZXhPZihzcHJpdGUpLCAxKTtcclxuICAgICAgR3JvdXAuY2FsY3VsYXRlU2l6ZSh0aGlzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHtzcHJpdGV9IGlzIG5vdCBhIGNoaWxkIG9mICR7dGhpc31gKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBjYWxjdWxhdGVTaXplKGdyb3VwKSB7XHJcbiAgICBpZiAoZ3JvdXAuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xyXG4gICAgICBsZXQgbmV3V2lkdGggPSAwO1xyXG4gICAgICBsZXQgbmV3SGVpZ2h0ID0gMDtcclxuXHJcbiAgICAgIGdyb3VwLmNoaWxkcmVuLmZvckVhY2goY2hpbGQgPT4ge1xyXG4gICAgICAgIGlmIChjaGlsZC54ICsgY2hpbGQud2lkdGggPiBuZXdXaWR0aClcclxuICAgICAgICAgIG5ld1dpZHRoID0gY2hpbGQueCArIGNoaWxkLndpZHRoO1xyXG4gICAgICAgIGlmIChjaGlsZC55ICsgY2hpbGQuaGVpZ2h0ID4gbmV3SGVpZ2h0KVxyXG4gICAgICAgICAgbmV3SGVpZ2h0ID0gY2hpbGQueSArIGNoaWxkLmhlaWdodDtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBncm91cC53aWR0aCA9IG5ld1dpZHRoO1xyXG4gICAgICBncm91cC5oZWlnaHQgPSBuZXdIZWlnaHQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwKC4uLnNwcml0ZXMpIHtcclxuICBsZXQgc3ByaXRlID0gbmV3IEdyb3VwKC4uLnNwcml0ZXMpO1xyXG4gIHN0YWdlLmFkZENoaWxkKHNwcml0ZSk7XHJcbiAgcmV0dXJuIHNwcml0ZTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdyaWQoY29sdW1ucyA9IDAsIHJvd3MgPSAwLCBjZWxsV2lkdGggPSAzMiwgY2VsbEhlaWdodCA9IDMyLFxyXG4gIGNlbnRlckNlbGwgPSBmYWxzZSwgeE9mZnNldCA9IDAsIHlPZmZzZXQgPSAwLFxyXG4gIG1ha2VTcHJpdGUgPSB1bmRlZmluZWQsXHJcbiAgZXh0cmEgPSB1bmRlZmluZWQpIHtcclxuXHJcbiAgbGV0IGNvbnRhaW5lciA9IGdyb3VwKCk7XHJcblxyXG4gIGxldCBjcmVhdGVHcmlkID0gKCkgPT4ge1xyXG4gICAgbGV0IGxlbmd0aCA9IGNvbHVtbnMgKiByb3dzO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuICAgICAgbGV0IHggPSAoaSAlIGNvbHVtbnMpICogY2VsbFdpZHRoO1xyXG4gICAgICBsZXQgeSA9IE1hdGguZmxvb3IoaSAvIGNvbHVtbnMpICogY2VsbEhlaWdodDtcclxuICAgICAgbGV0IHNwcml0ZSA9IG1ha2VTcHJpdGUoKTtcclxuXHJcbiAgICAgIGlmICghc3ByaXRlKVxyXG4gICAgICAgIGNvbnNvbGUud2FybignZ3JpZCBtYWtlU3ByaXRlIHJldHVybjogJyArIHNwcml0ZSk7XHJcblxyXG4gICAgICBjb250YWluZXIuYWRkQ2hpbGQoc3ByaXRlKTtcclxuXHJcbiAgICAgIGlmICghY2VudGVyQ2VsbCkge1xyXG4gICAgICAgIHNwcml0ZS54ID0geCArIHhPZmZzZXQ7XHJcbiAgICAgICAgc3ByaXRlLnkgPSB5ICsgeU9mZnNldDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzcHJpdGUueCA9IHggKyAoY2VsbFdpZHRoIC8gMikgLVxyXG4gICAgICAgICAgc3ByaXRlLmhhbGZXaWR0aCArIHhPZmZzZXQ7XHJcbiAgICAgICAgc3ByaXRlLnkgPSB5ICsgKGNlbGxIZWlnaHQgLyAyKSAtXHJcbiAgICAgICAgICBzcHJpdGUuaGFsZkhlaWdodCArIHlPZmZzZXQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChleHRyYSkgZXh0cmEoc3ByaXRlKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjcmVhdGVHcmlkKCk7XHJcblxyXG4gIHJldHVybiBjb250YWluZXI7XHJcbn1cclxuIiwiaW1wb3J0IGNvbW1vbiBmcm9tICcuL2NvbW1vbi5qcyc7XHJcbmltcG9ydCB7bWFrZUNhbnZhc30gZnJvbSAnLi91dGlsLmpzJztcclxuXHJcbmNvbnN0IERFRkFVTFRfUkVOREVSX1dJRFRIID0gNjQwO1xyXG5jb25zdCBERUZBVUxUX1JFTkRFUl9IRUlHSFQgPSA0ODA7XHJcblxyXG5leHBvcnQgbGV0IHJlbmRlcmVyID0gdW5kZWZpbmVkO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVuZGVyZXIge1xyXG4gIGNvbnN0cnVjdG9yKHdpZHRoID0gREVGQVVMVF9SRU5ERVJfV0lEVEgsIGhlaWdodCA9IERFRkFVTFRfUkVOREVSX0hFSUdIVCwgc3RhZ2UgPSB1bmRlZmluZWQpIHtcclxuICAgIGlmKHJlbmRlcmVyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ3JlbmRlcmVyIGFscmVhZHkgaW5zdGFudGlhdGVkJyk7XHJcbiAgICAgIHJldHVybiByZW5kZXJlcjtcclxuICAgIH1cclxuICAgIHRoaXMuY2FudmFzID0gbWFrZUNhbnZhcyh3aWR0aCwgaGVpZ2h0KTtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5jYW52YXMpO1xyXG4gICAgdGhpcy5zdGFnZSA9IHN0YWdlO1xyXG4gICAgcmVuZGVyZXIgPSB0aGlzO1xyXG4gICAgcmV0dXJuIHJlbmRlcmVyO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGJhY2tncm91bmRDb2xvcigpIHtcclxuICAgIHJldHVybiB0aGlzLmNhbnZhcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I7XHJcbiAgfVxyXG5cclxuICBzZXQgYmFja2dyb3VuZENvbG9yKGNvbG9yKXtcclxuICAgIHRoaXMuY2FudmFzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbG9yO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgbGV0IGNhbnZhcyA9IHRoaXMuY2FudmFzO1xyXG4gICAgbGV0IGN0eCA9IGNhbnZhcy5jdHg7XHJcblxyXG4gICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xyXG5cclxuICAgIGlmKHRoaXMuc3RhZ2Upe1xyXG4gICAgICB0aGlzLnN0YWdlLmNoaWxkcmVuLmZvckVhY2goc3ByaXRlID0+IHtcclxuICAgICAgICByZW5kZXIuY2FsbCh0aGlzLCBzcHJpdGUpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbmRlcihzcHJpdGUpIHtcclxuICBsZXQgY2FudmFzID0gdGhpcy5jYW52YXM7XHJcbiAgbGV0IGN0eCA9IGNhbnZhcy5jdHg7XHJcbiAgaWYgKHNwcml0ZS52aXNpYmxlICYmXHJcbiAgICAgIHNwcml0ZS5neCA8IGNhbnZhcy53aWR0aCArIHNwcml0ZS53aWR0aCAmJlxyXG4gICAgICBzcHJpdGUuZ3ggKyBzcHJpdGUud2lkdGggPj0gLXNwcml0ZS53aWR0aCAmJlxyXG4gICAgICBzcHJpdGUuZ3kgPCBjYW52YXMuaGVpZ2h0ICsgc3ByaXRlLmhlaWdodCAmJlxyXG4gICAgICBzcHJpdGUuZ3kgKyBzcHJpdGUuaGVpZ2h0ID49IC1zcHJpdGUuaGVpZ2h0KSB7XHJcblxyXG4gICAgY3R4LnNhdmUoKTtcclxuXHJcbiAgICAvLyAvLyDlj5jmjaJcclxuICAgIGN0eC50cmFuc2xhdGUoXHJcbiAgICAgIHNwcml0ZS54ICsgKHNwcml0ZS53aWR0aCAqIHNwcml0ZS5waXZvdFgpLFxyXG4gICAgICBzcHJpdGUueSArIChzcHJpdGUuaGVpZ2h0ICogc3ByaXRlLnBpdm90WSlcclxuICAgICAgLy8gc3ByaXRlLngsXHJcbiAgICAgIC8vIHNwcml0ZS55XHJcbiAgICAgIC8vIDAsMFxyXG4gICAgKTtcclxuICAgIGN0eC5yb3RhdGUoc3ByaXRlLnJvdGF0aW9uKTtcclxuICAgIGN0eC5zY2FsZShzcHJpdGUuc2NhbGVYLCBzcHJpdGUuc2NhbGVZKTtcclxuICAgIC8vIGN0eC5zZXRUcmFuc2Zvcm0oc3ByaXRlLnNjYWxlWCwgMCwgMCwgc3ByaXRlLnNjYWxlWSwgc3ByaXRlLngsIHNwcml0ZS55KTtcclxuICAgIC8vIGN0eC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgc3ByaXRlLngsIHNwcml0ZS55KTtcclxuXHJcbiAgICAvLyDmlYjmnpxcclxuICAgIGN0eC5nbG9iYWxBbHBoYSA9IHNwcml0ZS5hbHBoYSAqIHNwcml0ZS5wYXJlbnQuYWxwaGE7XHJcblxyXG4gICAgLy8gVE9ETzog5YW25LuW5pWI5p6cIC0tLSDpmLTlvbEg5re35ZCI5qih5byPXHJcblxyXG4gICAgaWYgKHNwcml0ZS5yZW5kZXIpIHNwcml0ZS5yZW5kZXIoY3R4KTtcclxuXHJcbiAgICBpZiAoc3ByaXRlLmNoaWxkcmVuICYmIHNwcml0ZS5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGN0eC50cmFuc2xhdGUoLXNwcml0ZS53aWR0aCAqIHNwcml0ZS5waXZvdFgsIC1zcHJpdGUuaGVpZ2h0ICogc3ByaXRlLnBpdm90WSk7XHJcbiAgICAgIC8vIGN0eC50cmFuc2xhdGUoLXNwcml0ZS5waXZvdFgsIC1zcHJpdGUucGl2b3RZKTtcclxuICAgICAgLy8gY3R4LnNldFRyYW5zZm9ybSgxLCAwLCAwLCAxLCAwLCAwKTtcclxuICAgICAgc3ByaXRlLmNoaWxkcmVuLmZvckVhY2goY2hpbGQgPT4ge1xyXG4gICAgICAgIHJlbmRlci5jYWxsKHRoaXMsIGNoaWxkKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY3R4LnJlc3RvcmUoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IERpc3BsYXlPYmplY3QgZnJvbSAnLi9EaXNwbGF5T2JqZWN0LmpzJztcclxuaW1wb3J0IHtcclxuICBzdGFnZVxyXG59IGZyb20gJy4vU3RhZ2UuanMnO1xyXG5cclxuLy8gVE9ETzog55So5LiN5ZCM5pa55byP6YeN5pawIGNyZWF0ZSDml7Yg5Yig6Zmk5LiN5YaN5L2/55So55qE5bGe5oCnXHJcbmV4cG9ydCBjbGFzcyBTcHJpdGUgZXh0ZW5kcyBEaXNwbGF5T2JqZWN0IHtcclxuICBjb25zdHJ1Y3Rvcihzb3VyY2UsIHggPSAwLCB5ID0gMCkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMueCA9IHg7XHJcbiAgICB0aGlzLnkgPSB5O1xyXG4gICAgaWYoIXNvdXJjZSlcclxuICAgICAgY29uc29sZS5lcnJvcihgRXJyb3I6IFNwcml0ZSdzIHNvdXJjZTogJHtzb3VyY2V9YCk7XHJcblxyXG4gICAgaWYgKHNvdXJjZSBpbnN0YW5jZW9mIEltYWdlKSB7XHJcbiAgICAgIHRoaXMuY3JlYXRlRnJvbUltYWdlKHNvdXJjZSk7XHJcbiAgICB9IGVsc2UgaWYgKHNvdXJjZS5mcmFtZSkge1xyXG4gICAgICB0aGlzLmNyZWF0ZUZyb21BdGxhcyhzb3VyY2UpO1xyXG4gICAgfSBlbHNlIGlmIChzb3VyY2UuaW1hZ2UgJiYgIXNvdXJjZS5kYXRhKSB7XHJcbiAgICAgIHRoaXMuY3JlYXRlRnJvbVRpbGVzZXQoc291cmNlKTtcclxuICAgIH0gZWxzZSBpZiAoc291cmNlLmltYWdlICYmIHNvdXJjZS5kYXRhKSB7XHJcbiAgICAgIHRoaXMuY3JlYXRlRnJvbVRpbGVzZXRGcmFtZXMoc291cmNlKTtcclxuICAgIH0gZWxzZSBpZiAoc291cmNlIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgaWYgKHNvdXJjZVswXSAmJiBzb3VyY2VbMF0uc291cmNlKSB7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVGcm9tQXRsYXNGcmFtZXMoc291cmNlKTtcclxuICAgICAgfSBlbHNlIGlmIChzb3VyY2VbMF0gaW5zdGFuY2VvZiBJbWFnZSkge1xyXG4gICAgICAgIHRoaXMuY3JlYXRlRnJvbUltYWdlcyhzb3VyY2UpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIGltYWdlIHNvdXJjZXMgaW4gJHtzb3VyY2V9IGFyZSBub3QgcmVjb2duaXplZGApO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBpbWFnZSBzb3VyY2UgJHtzb3VyY2V9IGlzIG5vdCByZWNvZ25pemVkYCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjcmVhdGVGcm9tSW1hZ2Uoc291cmNlKSB7XHJcbiAgICBpZiAoIShzb3VyY2UgaW5zdGFuY2VvZiBJbWFnZSkpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke3NvdXJjZX0gaXMgbm90IGFuIGltYWdlIG9iamVjdGApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5zb3VyY2UgPSBzb3VyY2U7XHJcbiAgICAgIHRoaXMuc291cmNlWCA9IDA7XHJcbiAgICAgIHRoaXMuc291cmNlWSA9IDA7XHJcbiAgICAgIHRoaXMud2lkdGggPSBzb3VyY2Uud2lkdGg7XHJcbiAgICAgIHRoaXMuaGVpZ2h0ID0gc291cmNlLmhlaWdodDtcclxuICAgICAgdGhpcy5zb3VyY2VXaWR0aCA9IHNvdXJjZS53aWR0aDtcclxuICAgICAgdGhpcy5zb3VyY2VIZWlnaHQgPSBzb3VyY2UuaGVpZ2h0O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY3JlYXRlRnJvbUF0bGFzKHNvdXJjZSkge1xyXG4gICAgdGhpcy50aWxlc2V0RnJhbWUgPSBzb3VyY2U7XHJcbiAgICB0aGlzLnNvdXJjZSA9IHRoaXMudGlsZXNldEZyYW1lLnNvdXJjZTtcclxuICAgIHRoaXMuc291cmNlWCA9IHRoaXMudGlsZXNldEZyYW1lLmZyYW1lLng7XHJcbiAgICB0aGlzLnNvdXJjZVkgPSB0aGlzLnRpbGVzZXRGcmFtZS5mcmFtZS55O1xyXG4gICAgdGhpcy53aWR0aCA9IHRoaXMuc291cmNlV2lkdGggPSB0aGlzLnRpbGVzZXRGcmFtZS5mcmFtZS53O1xyXG4gICAgdGhpcy5oZWlnaHQgPSB0aGlzLnNvdXJjZUhlaWdodCA9IHRoaXMudGlsZXNldEZyYW1lLmZyYW1lLmg7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVGcm9tVGlsZXNldChzb3VyY2UpIHtcclxuICAgIGlmICghKHNvdXJjZS5pbWFnZSBpbnN0YW5jZW9mIEltYWdlKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7c291cmNlLmltYWdlfSBpcyBub3QgYW4gaW1hZ2Ugb2JqZWN0YCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnNvdXJjZSA9IHNvdXJjZS5pbWFnZTtcclxuICAgICAgdGhpcy5zb3VyY2VYID0gc291cmNlLng7XHJcbiAgICAgIHRoaXMuc291cmNlWSA9IHNvdXJjZS55O1xyXG4gICAgICB0aGlzLndpZHRoID0gc291cmNlLndpZHRoO1xyXG4gICAgICB0aGlzLmhlaWdodCA9IHNvdXJjZS5oZWlnaHQ7XHJcbiAgICAgIHRoaXMuc291cmNlV2lkdGggPSBzb3VyY2Uud2lkdGg7XHJcbiAgICAgIHRoaXMuc291cmNlSGVpZ2h0ID0gc291cmNlLmhlaWdodDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNyZWF0ZUZyb21UaWxlc2V0RnJhbWVzKHNvdXJjZSkge1xyXG4gICAgaWYgKCEoc291cmNlLmltYWdlIGluc3RhbmNlb2YgSW1hZ2UpKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHtzb3VyY2UuaW1hZ2V9IGlzIG5vdCBhbiBpbWFnZSBvYmplY3RgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuc291cmNlID0gc291cmNlLmltYWdlO1xyXG4gICAgICB0aGlzLmZyYW1lcyA9IHNvdXJjZS5kYXRhO1xyXG5cclxuICAgICAgdGhpcy5zb3VyY2VYID0gdGhpcy5mcmFtZXNbMF1bMF07XHJcbiAgICAgIHRoaXMuc291cmNlWSA9IHRoaXMuZnJhbWVzWzBdWzFdO1xyXG4gICAgICB0aGlzLndpZHRoID0gc291cmNlLndpZHRoO1xyXG4gICAgICB0aGlzLmhlaWdodCA9IHNvdXJjZS5oZWlnaHQ7XHJcbiAgICAgIHRoaXMuc291cmNlV2lkdGggPSBzb3VyY2Uud2lkdGg7XHJcbiAgICAgIHRoaXMuc291cmNlSGVpZ2h0ID0gc291cmNlLmhlaWdodDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNyZWF0ZUZyb21BdGxhc0ZyYW1lcyhzb3VyY2UpIHtcclxuICAgIHRoaXMuZnJhbWVzID0gc291cmNlO1xyXG4gICAgdGhpcy5zb3VyY2UgPSBzb3VyY2VbMF0uc291cmNlO1xyXG4gICAgdGhpcy5zb3VyY2VYID0gc291cmNlWzBdLmZyYW1lLng7XHJcbiAgICB0aGlzLnNvdXJjZVkgPSBzb3VyY2VbMF0uZnJhbWUueTtcclxuICAgIHRoaXMud2lkdGggPSBzb3VyY2VbMF0uZnJhbWUudztcclxuICAgIHRoaXMuaGVpZ2h0ID0gc291cmNlWzBdLmZyYW1lLmg7XHJcbiAgICB0aGlzLnNvdXJjZVdpZHRoID0gc291cmNlWzBdLmZyYW1lLnc7XHJcbiAgICB0aGlzLnNvdXJjZUhlaWdodCA9IHNvdXJjZVswXS5mcmFtZS5oO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlRnJvbUltYWdlcyhzb3VyY2UpIHtcclxuICAgIHRoaXMuZnJhbWVzID0gc291cmNlO1xyXG4gICAgdGhpcy5zb3VyY2UgPSBzb3VyY2VbMF07XHJcbiAgICB0aGlzLnNvdXJjZVggPSAwO1xyXG4gICAgdGhpcy5zb3VyY2VZID0gMDtcclxuICAgIHRoaXMud2lkdGggPSBzb3VyY2VbMF0ud2lkdGg7XHJcbiAgICB0aGlzLmhlaWdodCA9IHNvdXJjZVswXS53aWR0aDtcclxuICAgIHRoaXMuc291cmNlV2lkdGggPSBzb3VyY2VbMF0ud2lkdGg7XHJcbiAgICB0aGlzLnNvdXJjZUhlaWdodCA9IHNvdXJjZVswXS5oZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBnb3RvQW5kU3RvcChmcmFtZU51bWJlcikge1xyXG4gICAgaWYgKHRoaXMuZnJhbWVzLmxlbmd0aCA+IDAgJiYgZnJhbWVOdW1iZXIgPCB0aGlzLmZyYW1lcy5sZW5ndGgpIHtcclxuICAgICAgaWYgKHRoaXMuZnJhbWVzWzBdIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgICB0aGlzLnNvdXJjZVggPSB0aGlzLmZyYW1lc1tmcmFtZU51bWJlcl1bMF07XHJcbiAgICAgICAgdGhpcy5zb3VyY2VZID0gdGhpcy5mcmFtZXNbZnJhbWVOdW1iZXJdWzFdO1xyXG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZnJhbWVzW2ZyYW1lTnVtYmVyXS5mcmFtZSkge1xyXG4gICAgICAgIHRoaXMuc291cmNlWCA9IHRoaXMuZnJhbWVzW2ZyYW1lTnVtYmVyXS5mcmFtZS54O1xyXG4gICAgICAgIHRoaXMuc291cmNlWSA9IHRoaXMuZnJhbWVzW2ZyYW1lTnVtYmVyXS5mcmFtZS55O1xyXG4gICAgICAgIHRoaXMuc291cmNlV2lkdGggPSB0aGlzLmZyYW1lc1tmcmFtZU51bWJlcl0uZnJhbWUudztcclxuICAgICAgICB0aGlzLnNvdXJjZUhlaWdodCA9IHRoaXMuZnJhbWVzW2ZyYW1lTnVtYmVyXS5mcmFtZS5oO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuc291cmNlID0gdGhpcy5mcmFtZXNbZnJhbWVOdW1iZXJdO1xyXG4gICAgICAgIHRoaXMuc291cmNlWCA9IDA7XHJcbiAgICAgICAgdGhpcy5zb3VyY2VZID0gMDtcclxuICAgICAgICB0aGlzLnNvdXJjZVdpZHRoID0gdGhpcy5zb3VyY2Uud2lkdGg7XHJcbiAgICAgICAgdGhpcy5zb3VyY2VIZWlnaHQgPSB0aGlzLnNvdXJjZS5oZWlnaHQ7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5fY3VycmVudEZyYW1lID0gZnJhbWVOdW1iZXI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZyYW1lIG51bWJlciAke2ZyYW1lTnVtYmVyfSBkb2VzIG5vdCBleGlzdGApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKGN0eCkge1xyXG4gICAgY3R4LmRyYXdJbWFnZShcclxuICAgICAgdGhpcy5zb3VyY2UsXHJcbiAgICAgIHRoaXMuc291cmNlWCwgdGhpcy5zb3VyY2VZLFxyXG4gICAgICB0aGlzLnNvdXJjZVdpZHRoLCB0aGlzLnNvdXJjZUhlaWdodCxcclxuICAgICAgLXRoaXMud2lkdGggKiB0aGlzLnBpdm90WCwgLXRoaXMuaGVpZ2h0ICogdGhpcy5waXZvdFksXHJcbiAgICAgIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGZyYW1lKHNvdXJjZSwgeCwgeSwgd2lkdGgsIGhlaWdodCkge1xyXG4gICAgbGV0IG8gPSB7fTtcclxuICAgIG8uaW1hZ2UgPSBzb3VyY2U7XHJcbiAgICBvLnggPSB4O1xyXG4gICAgby55ID0geTtcclxuICAgIG8ud2lkdGggPSB3aWR0aDtcclxuICAgIG8uaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgcmV0dXJuIG87XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZnJhbWVzKHNvdXJjZSwgYXJyYXlPZlBvc2l0aW9ucywgd2lkdGgsIGhlaWdodCkge1xyXG4gICAgbGV0IG8gPSB7fTtcclxuICAgIG8uaW1hZ2UgPSBzb3VyY2U7XHJcbiAgICBvLmRhdGEgPSBhcnJheU9mUG9zaXRpb25zO1xyXG4gICAgby53aWR0aCA9IHdpZHRoO1xyXG4gICAgby5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICByZXR1cm4gbztcclxuICB9XHJcblxyXG4gIHN0YXRpYyBmaWxtc3RyaXAoaW1hZ2UsIGZyYW1lV2lkdGgsIGZyYW1lSGVpZ2h0LCBzcGFjaW5nID0gMCkge1xyXG4gICAgaWYgKCEoaW1hZ2UgaW5zdGFuY2VvZiBJbWFnZSkpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2ltYWdlfSBpcyBub3QgYW4gaW1hZ2Ugb2JqZWN0YCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBsZXQgcG9zaXRpb25zID0gW107XHJcbiAgICAgIGxldCBjb2x1bW5zID0gaW1hZ2Uud2lkdGggLyBmcmFtZVdpZHRoLFxyXG4gICAgICAgIHJvd3MgPSBpbWFnZS5oZWlnaHQgLyBmcmFtZUhlaWdodDtcclxuICAgICAgbGV0IG51bWJlck9mRnJhbWVzID0gY29sdW1ucyAqIHJvd3M7XHJcblxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlck9mRnJhbWVzOyArK2kpIHtcclxuICAgICAgICBsZXQgaXggPSAoaSAlIGNvbHVtbnMpO1xyXG4gICAgICAgIGxldCBpeSA9IE1hdGguZmxvb3IoaSAvIGNvbHVtbnMpO1xyXG4gICAgICAgIGxldCB4ID0gaXggKiBmcmFtZVdpZHRoLFxyXG4gICAgICAgICAgeSA9IGl5ICogZnJhbWVIZWlnaHQ7XHJcblxyXG4gICAgICAgIGlmIChzcGFjaW5nICYmIHNwYWNpbmcgPiAwKSB7XHJcbiAgICAgICAgICB4ICs9IHNwYWNpbmcgKyAoc3BhY2luZyAqIGl4KTtcclxuICAgICAgICAgIHkgKz0gc3BhY2luZyArIChzcGFjaW5nICogaXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwb3NpdGlvbnMucHVzaChbeCwgeV0pO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBTcHJpdGUuZnJhbWVzKGltYWdlLCBwb3NpdGlvbnMsIGZyYW1lV2lkdGgsIGZyYW1lSGVpZ2h0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhZGRTdGF0ZVBsYXllcihzcHJpdGUpIHtcclxuICAgIGxldCBmcmFtZUNvdW50ZXIgPSAwLFxyXG4gICAgICBudW1iZXJPZkZyYW1lcyA9IDAsXHJcbiAgICAgIHN0YXJ0RnJhbWUgPSAwLFxyXG4gICAgICBlbmRGcmFtZSA9IDAsXHJcbiAgICAgIHRpbWVySW50ZXJ2YWwgPSB1bmRlZmluZWQ7XHJcblxyXG4gICAgZnVuY3Rpb24gc2hvdyhmcmFtZU51bWJlcikge1xyXG4gICAgICByZXNldCgpO1xyXG4gICAgICBzcHJpdGUuZ290b0FuZFN0b3AoZnJhbWVOdW1iZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHBsYXkoKSB7XHJcbiAgICAgIGlmICghc3ByaXRlLnBsYXlpbmcpIHtcclxuICAgICAgICBwbGF5U2VxdWVuY2UoWzAsIHNwcml0ZS5mcmFtZXMubGVuZ3RoIC0gMV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc3RvcCgpIHtcclxuICAgICAgaWYgKHNwcml0ZS5wbGF5aW5nKSB7XHJcbiAgICAgICAgcmVzZXQoKTtcclxuICAgICAgICBzcHJpdGUuZ290QW5kU3RvcChzcHJpdGUuY3VycmVudEZyYW1lKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHBsYXlTZXF1ZW5jZShzZXF1ZW5jZUFycmF5KSB7XHJcbiAgICAgIHJlc2V0KCk7XHJcbiAgICAgIHN0YXJ0RnJhbWUgPSBzZXF1ZW5jZUFycmF5WzBdO1xyXG4gICAgICBlbmRGcmFtZSA9IHNlcXVlbmNlQXJyYXlbMV07XHJcbiAgICAgIG51bWJlck9mRnJhbWVzID0gZW5kRnJhbWUgLSBzdGFydEZyYW1lO1xyXG4gICAgICBpZiAoc3RhcnRGcmFtZSA9PT0gMCkge1xyXG4gICAgICAgIG51bWJlck9mRnJhbWVzKys7XHJcbiAgICAgICAgZnJhbWVDb3VudGVyKys7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKG51bWJlck9mRnJhbWVzID09PSAxKSB7XHJcbiAgICAgICAgbnVtYmVyT2ZGcmFtZXMgPSAyO1xyXG4gICAgICAgIGZyYW1lQ291bnRlcisrO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoIXNwcml0ZS5mcHMpIHNwcml0ZS5mcHMgPSAxMjtcclxuICAgICAgbGV0IGZyYW1lUmF0ZSA9IDEwMDAgLyBzcHJpdGUuZnBzO1xyXG4gICAgICBzcHJpdGUuZ290b0FuZFN0b3Aoc3RhcnRGcmFtZSk7XHJcblxyXG4gICAgICBpZiAoIXNwcml0ZS5wbGF5aW5nKSB7XHJcbiAgICAgICAgdGltZXJJbnRlcnZhbCA9IHNldEludGVydmFsKGFkdmFuY2VGcmFtZS5iaW5kKHRoaXMpLCBmcmFtZVJhdGUpO1xyXG4gICAgICAgIHNwcml0ZS5wbGF5aW5nID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGFkdmFuY2VGcmFtZSggKSB7XHJcbiAgICAgIGlmKGZyYW1lQ291bnRlciA8IG51bWJlck9mRnJhbWVzKXtcclxuICAgICAgICBzcHJpdGUuZ290b0FuZFN0b3Aoc3ByaXRlLmN1cnJlbnRGcmFtZSsxKTtcclxuICAgICAgICBmcmFtZUNvdW50ZXIrKztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZihzcHJpdGUubG9vcCl7XHJcbiAgICAgICAgICBzcHJpdGUuZ290b0FuZFN0b3Aoc3RhcnRGcmFtZSk7XHJcbiAgICAgICAgICBmcmFtZUNvdW50ZXIgPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJlc2V0KCApIHtcclxuICAgICAgaWYodGltZXJJbnRlcnZhbCAhPT0gdW5kZWZpbmVkICYmIHNwcml0ZS5wbGF5aW5nID09PSB0cnVlKXtcclxuICAgICAgICBzcHJpdGUucGxheWluZyA9IGZhbHNlO1xyXG4gICAgICAgIGZyYW1lQ291bnRlciA9MDtcclxuICAgICAgICBzdGFydEZyYW1lID0gMDtcclxuICAgICAgICBlbmRGcmFtZSA9MDtcclxuICAgICAgICBudW1iZXJPZkZyYW1lcyA9MDtcclxuICAgICAgICBjbGVhckludGVydmFsKHRpbWVySW50ZXJ2YWwpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3ByaXRlLmxvb3AgPSB0cnVlO1xyXG4gICAgc3ByaXRlLnBsYXlpbmcgPSBmYWxzZTtcclxuXHJcbiAgICBzcHJpdGUuc2hvdyA9IHNob3c7XHJcbiAgICBzcHJpdGUucGxheSA9IHBsYXk7XHJcbiAgICBzcHJpdGUuc3RvcCA9IHN0b3A7XHJcbiAgICBzcHJpdGUucGxheVNlcXVlbmNlID0gcGxheVNlcXVlbmNlO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzcHJpdGUoc291cmNlLCB4LCB5KSB7XHJcbiAgbGV0IHNwcml0ZSA9IG5ldyBTcHJpdGUoc291cmNlLCB4LCB5KTtcclxuICBpZiAoc3ByaXRlLmZyYW1lcy5sZW5ndGggPiAwKSBTcHJpdGUuYWRkU3RhdGVQbGF5ZXIoc3ByaXRlKTtcclxuICBzdGFnZS5hZGRDaGlsZChzcHJpdGUpO1xyXG4gIHJldHVybiBzcHJpdGU7XHJcbn1cclxuIiwiaW1wb3J0IERpc3BsYXlPYmplY3QgZnJvbSAnLi9EaXNwbGF5T2JqZWN0LmpzJztcclxuXHJcblxyXG5cclxuZnVuY3Rpb24gdXBkYXRlKGR0KSB7XHJcbiAgaWYgKHRoaXMuY2hpbGRyZW4gJiYgdGhpcy5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XHJcbiAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2goc3ByaXRlID0+IHtcclxuICAgICAgaWYoc3ByaXRlICYmIHNwcml0ZS51cGRhdGUpXHJcbiAgICAgICAgc3ByaXRlLnVwZGF0ZShkdCk7XHJcbiAgICAgIHVwZGF0ZS5jYWxsKHNwcml0ZSwgZHQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5jbGFzcyBTdGFnZSBleHRlbmRzIERpc3BsYXlPYmplY3Qge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZShkdCkge1xyXG4gICAgdXBkYXRlLmNhbGwodGhpcyxkdCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgbGV0IHN0YWdlID0gbmV3IFN0YWdlKCk7XHJcbiIsImltcG9ydCBEaXNwbGF5T2JqZWN0IGZyb20gJy4vRGlzcGxheU9iamVjdC5qcyc7XHJcbmltcG9ydCB7XHJcbiAgc3RhZ2VcclxufSBmcm9tICcuL1N0YWdlLmpzJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgVGV4dCBleHRlbmRzIERpc3BsYXlPYmplY3Qge1xyXG4gIGNvbnN0cnVjdG9yKGNvbnRlbnQgPSAnSGVsbG8hJyxcclxuICAgIGZvbnQgPSAnMTZweCBzYW5zLXNlcmlmJywgZmlsbFN0eWxlID0gJ3JlZCcsXHJcbiAgICB4ID0gMCwgeSA9IDApIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy5jb250ZW50ID0gY29udGVudDtcclxuICAgIHRoaXMuZm9udCA9IGZvbnQ7XHJcbiAgICB0aGlzLmZpbGxTdHlsZSA9IGZpbGxTdHlsZTtcclxuICAgIHRoaXMueCA9IHg7XHJcbiAgICB0aGlzLnkgPSB5O1xyXG5cclxuICAgIHRoaXMudGV4dEJhc2VsaW5lID0gJ3RvcCc7XHJcbiAgICB0aGlzLnN0cm9rZVRleHQgPSAnbm9uZSc7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoY3R4KSB7XHJcbiAgICBjdHguZm9udCA9IHRoaXMuZm9udDtcclxuICAgIGN0eC5zdHJva2VTdHlsZSA9IHRoaXMuc3Ryb2tlU3R5bGU7XHJcbiAgICBjdHgubGluZVdpZHRoID0gdGhpcy5saW5lV2lkdGg7XHJcbiAgICBjdHguZmlsbFN0eWxlID0gdGhpcy5maWxsU3R5bGU7XHJcblxyXG4gICAgaWYgKHRoaXMud2lkdGggPT09IDApIHRoaXMud2lkdGggPSBjdHgubWVhc3VyZVRleHQodGhpcy5jb250ZW50KS53aWR0aDtcclxuICAgIGlmICh0aGlzLmhlaWdodCA9PT0gMCkgdGhpcy5oZWlnaHQgPSBjdHgubWVhc3VyZVRleHQoXCJNXCIpLndpZHRoO1xyXG4gICAgY3R4LnRyYW5zbGF0ZSgtdGhpcy53aWR0aCAqIHRoaXMucGl2b3RYLCAtdGhpcy5oZWlnaHQgKiB0aGlzLnBpdm90WSk7XHJcbiAgICBjdHgudGV4dEJhc2VsaW5lID0gdGhpcy50ZXh0QmFzZWxpbmU7XHJcbiAgICBjdHguZmlsbFRleHQoXHJcbiAgICAgIHRoaXMuY29udGVudCxcclxuICAgICAgMCwgMFxyXG4gICAgKTtcclxuICAgIGlmICh0aGlzLnN0cm9rZVRleHQgIT09IFwibm9uZVwiKSBjdHguc3Ryb2tlVGV4dCgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRleHQoY29udGVudCwgZm9udCwgZmlsbFN0eWxlLCB4LCB5KSB7XHJcbiAgbGV0IHNwcml0ZSA9IG5ldyBUZXh0KGNvbnRlbnQsIGZvbnQsIGZpbGxTdHlsZSwgeCwgeSk7XHJcbiAgc3RhZ2UuYWRkQ2hpbGQoc3ByaXRlKTtcclxuICByZXR1cm4gc3ByaXRlO1xyXG59XHJcblxyXG4iLCJpbXBvcnQgKiBhcyBhc3NldHMgZnJvbSAnLi9hc3NldHMuanMnO1xyXG5pbXBvcnQgKiBhcyBFdmVudEVtaXR0ZXIgZnJvbSAnLi9FdmVudEVtaXR0ZXIuanMnO1xyXG5pbXBvcnQgKiBhcyBEaXNwbGF5T2JqZWN0IGZyb20gJy4vRGlzcGxheU9iamVjdC5qcyc7XHJcbmltcG9ydCAqIGFzIFNwcml0ZSBmcm9tICcuL1Nwcml0ZS5qcyc7XHJcbmltcG9ydCAqIGFzIFN0YWdlIGZyb20gJy4vU3RhZ2UuanMnO1xyXG5pbXBvcnQgKiBhcyBHcm91cCBmcm9tICcuL0dyb3VwLmpzJztcclxuaW1wb3J0ICogYXMgZ3JhcGhpY2FsIGZyb20gJy4vZ3JhcGhpY2FsLmpzJztcclxuaW1wb3J0ICogYXMgVGV4dCBmcm9tICcuL1RleHQuanMnO1xyXG5pbXBvcnQgKiBhcyBCdXR0b24gZnJvbSAnLi9CdXR0b24uanMnO1xyXG5pbXBvcnQgKiBhcyBpbnRlcmFjdGl2ZSBmcm9tICcuL2ludGVyYWN0aXZlLmpzJztcclxuaW1wb3J0ICogYXMgaW5wdXQgZnJvbSAnLi9pbnB1dC5qcyc7XHJcbmltcG9ydCAqIGFzIGNvbGxpc2lvbiBmcm9tICcuL2NvbGxpc2lvbi5qcyc7XHJcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi91dGlsLmpzJztcclxuLy9pbXBvcnQgKiBhcyBzb3VuZCBmcm9tICcuL3NvdW5kLmpzJztcclxuaW1wb3J0IFJlbmRlcmVyIGZyb20gJy4vUmVuZGVyZXIuanMnO1xyXG5cclxuY29uc3QgREVGQVVMVF9XSURUSCA9IDY0MDtcclxuY29uc3QgREVGQVVMVF9IRUlHSFQgPSA0ODA7XHJcblxyXG5jb25zdCBERUZBVUxUX0JBQ0tHUk9VTkRfQ09MT1IgPSAnIzJDMzUzOSc7XHJcbmRvY3VtZW50LmJvZHkuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gREVGQVVMVF9CQUNLR1JPVU5EX0NPTE9SO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGluYSB7XHJcbiAgY29uc3RydWN0b3Iod2lkdGggPSBERUZBVUxUX1dJRFRILCBoZWlnaHQgPSBERUZBVUxUX0hFSUdIVCxcclxuICAgICAgICAgICAgICBzZXR1cCwgYXNzZXRzVG9Mb2FkLCBsb2FkKSB7XHJcbiAgICBPYmplY3QuYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbihkZXN0ID0ge30sIHNvdXJjZSkge1xyXG4gICAgICAgIGlmICghc291cmNlKSByZXR1cm4gZGVzdDtcclxuICAgICAgICBmb3IgKGxldCBwcm9wIGluIHNvdXJjZSkge1xyXG4gICAgICAgICAgZGVzdFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRlc3Q7XHJcbiAgICAgIH07XHJcbiAgICAvLyDlr7zlhaXmiYDmnInmqKHlnZdcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgYXNzZXRzKTtcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgRXZlbnRFbWl0dGVyKTtcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgRGlzcGxheU9iamVjdCk7XHJcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIFNwcml0ZSk7XHJcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIFN0YWdlKTtcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgR3JvdXApO1xyXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBncmFwaGljYWwpO1xyXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBUZXh0KTtcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgQnV0dG9uKTtcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW50ZXJhY3RpdmUpO1xyXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBpbnB1dCk7XHJcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNvbGxpc2lvbik7XHJcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIHV0aWwpO1xyXG4gICAgLy9PYmplY3QuYXNzaWduKHRoaXMsIHNvdW5kKTtcclxuXHJcbiAgICB0aGlzLnJlbmRlcmVyID0gbmV3IFJlbmRlcmVyKHdpZHRoLCBoZWlnaHQsIHRoaXMuc3RhZ2UpO1xyXG4gICAgdGhpcy5zdGFnZS53aWR0aCA9IHRoaXMucmVuZGVyZXIuY2FudmFzLndpZHRoO1xyXG4gICAgdGhpcy5zdGFnZS5oZWlnaHQgPSB0aGlzLnJlbmRlcmVyLmNhbnZhcy5oZWlnaHQ7XHJcblxyXG4gICAgdGhpcy5wb2ludGVyID0gdGhpcy5tYWtlUG9pbnRlcih0aGlzLnJlbmRlcmVyLmNhbnZhcyk7XHJcbiAgICB0aGlzLnNjYWxlID0gMTtcclxuXHJcbiAgICB0aGlzLnN0YXRlID0gdW5kZWZpbmVkO1xyXG5cclxuICAgIHRoaXMubG9hZCA9IGxvYWQ7XHJcbiAgICB0aGlzLnNldHVwID0gc2V0dXA7XHJcblxyXG4gICAgdGhpcy5hc3NldHNUb0xvYWQgPSBhc3NldHNUb0xvYWQ7XHJcblxyXG4gICAgdGhpcy5wYXVzZWQgPSBmYWxzZTtcclxuXHJcbiAgICAvLyBmb3IgZ2FtZSBsb29wXHJcbiAgICB0aGlzLl9mcHMgPSAzNjtcclxuICAgIHRoaXMuX21wZiA9IDEwMDAgLyB0aGlzLl9mcHM7XHJcbiAgICB0aGlzLl9wcmV2aW91c1RpbWUgPSAwO1xyXG4gICAgdGhpcy5fZWxhcHNlZFRpbWUgPSAwO1xyXG4gICAgdGhpcy5fbGFnVGltZSA9IDA7XHJcbiAgICB0aGlzLl9sYWdPZmZzZXQgPSAwO1xyXG4gICAgdGhpcy5fY29ycmVjdFRpbWUgPSAxMDAwO1xyXG4gICAgdGhpcy5fc2hvdWxkUmVwYWludCA9IHRydWU7XHJcbiAgICBcclxuXHJcblxyXG4gICAgaWYgKCF0aGlzLnNldHVwKVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3BsZWFzZSBzdXBwbHkgdGhlIHNldHVwIGZ1bmN0aW9uIGluIHRoZSBjb25zdHJ1Y3RvcicpO1xyXG4gIH1cclxuXHJcbiAgc2V0IGZwcyhmcHMpIHtcclxuICAgIHRoaXMuX2ZwcyA9IGZwcztcclxuICAgIHRoaXMuX21wZiA9IDEwMDAgLyBmcHM7XHJcbiAgfVxyXG4gIGdldCBmcHMoKXtcclxuICAgIHJldHVybiB0aGlzLl9mcHM7XHJcbiAgfVxyXG5cclxuICBnZXQgbXBmKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX21wZjtcclxuICB9XHJcblxyXG4gIGdhbWVMb29wKGR0KSB7XHJcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5nYW1lTG9vcC5iaW5kKHRoaXMpKTtcclxuICAgIC8vIGlmKHRoaXMucGF1c2VkKXJldHVybjtcclxuXHJcbiAgICB0aGlzLl9lbGFwc2VkVGltZSA9IGR0IC0gdGhpcy5fcHJldmlvdXNUaW1lO1xyXG4gICAgdGhpcy5fcHJldmlvdXNUaW1lID0gZHQ7XHJcbiAgICBpZih0aGlzLl9lbGFwc2VkVGltZSA+IHRoaXMuX2NvcnJlY3RUaW1lKVxyXG4gICAgICB0aGlzLl9lbGFwc2VkVGltZSA9IHRoaXMuX21wZjtcclxuICAgIHRoaXMuX2xhZ1RpbWUgKz0gdGhpcy5fZWxhcHNlZFRpbWU7XHJcbiAgICBcclxuICAgIHdoaWxlKCh0aGlzLl9sYWdUaW1lID49IHRoaXMuX21wZikpIHtcclxuICAgICAgLy8gY29uc29sZS5sb2coJ3VwZGF0ZScpO1xyXG4gICAgICAvLyBVcGRhdGUgYWxsIHRoZSBidXR0b25zXHJcblxyXG4gICAgICAvLyBUT0RPOiDljZXni6znmoTmjInpkq7mm7TmlrDpopHnjocs5pS55Y+Y5LiA57uEKOS4pOS4qinmjInpkq7nirbmgIHlkI4s5LiN5YaNaei/m+ihjOajgOa1i1xyXG4gICAgICAvLyBUT0RPOiDmlL7lhaXliLDlnLrmma91cGRhdGXph4zvvIzkuI3lho3lnKjov5nph4zlpITnkIZcclxuICAgICAgdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUuY3Vyc29yID0gXCJhdXRvXCI7XHJcbiAgICAgIGlmICh0aGlzLmJ1dHRvbnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIHRoaXMuYnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7XHJcbiAgICAgICAgICBidXR0b24udXBkYXRlKHRoaXMucG9pbnRlciwgdGhpcy5yZW5kZXJlci5jYW52YXMpO1xyXG4gICAgICAgICAgaWYgKGJ1dHRvbi5zdGF0ZSA9PT0gXCJvdmVyXCIgfHwgYnV0dG9uLnN0YXRlID09PSBcImRvd25cIikge1xyXG4gICAgICAgICAgICBpZiAoYnV0dG9uLnBhcmVudCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUuY3Vyc29yID0gXCJwb2ludGVyXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gVE9ETzogVXBkYXRlIGFsbCB0aGUgcGFydGljbGVzXHJcbiAgICAgIC8vIFRPRE86IFVwZGF0ZSBhbGwgdGhlIHR3ZWVuc1xyXG5cclxuICAgICAgLy8gVE9ETzog5pS+5YWl5Yiw5Zy65pmvdXBkYXRl6YeM77yM5LiN5YaN5Zyo6L+Z6YeM5aSE55CGXHJcbiAgICAgIGlmICh0aGlzLmRyYWdnYWJsZVNwcml0ZXMpIHtcclxuICAgICAgICB0aGlzLnBvaW50ZXIudXBkYXRlRHJhZ0FuZERyb3AodGhpcy5kcmFnZ2FibGVTcHJpdGVzKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gaWYgKHRoaXMuc3RhdGUgJiYgIXRoaXMucGF1c2VkKSB7XHJcbiAgICAgIC8vICAgLy8gdGhpcy5zdGF0ZShkdCk7XHJcbiAgICAgIC8vIH1cclxuICAgICAgdGhpcy5zdGFnZS51cGRhdGUoZHQpO1xyXG5cclxuICAgICAgLy8gVXBkYXRlXHJcbiAgICAgIC8vIHRoaXMuc3RhZ2UudXBkYXRlKCk7XHJcblxyXG5cclxuICAgICAgdGhpcy5fbGFnVGltZSAtPSB0aGlzLl9tcGY7XHJcbiAgICAgIC8vIFJlbmRlclxyXG4gICAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcigpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5fbGFnT2Zmc2V0ID0gdGhpcy5fbGFnVGltZSAvIHRoaXMuX21wZjtcclxuICB9XHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgaWYgKHRoaXMuYXNzZXRzVG9Mb2FkKSB7XHJcbiAgICAgIHRoaXMuYXNzZXRzLmxvYWQodGhpcy5hc3NldHNUb0xvYWQpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5zZXR1cCgpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIC8vIOi1hOa6kOWKoOi9veaXtuaJp+ihjFxyXG4gICAgICBpZiAodGhpcy5sb2FkKSB7XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMubG9hZDtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5zZXR1cCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZ2FtZUxvb3AoMCk7XHJcbiAgfVxyXG5cclxuICBwYXVzZSgpIHtcclxuICAgIHRoaXMucGF1c2VkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIHJlc3VtZSgpIHtcclxuICAgIHRoaXMucGF1c2VkID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuXHJcbiAgLy8gXHJcbiAgLy8gc2NhbGVUb1dpbmRvdyhiYWNrZ3JvdW5kQ29sb3IgPSBERUZBVUxUX0JBQ0tHUk9VTkRfQ09MT1IpIHtcclxuICAvLyAgIGNvbnNvbGUubG9nKCdzY2FsZVRvV2luZG93Jyk7XHJcbiAgLy8gICBsZXQgc2NhbGVYLCBzY2FsZVksIHNjYWxlLCBjZW50ZXI7XHJcbiAgICBcclxuICAvLyAgIC8vMS4gU2NhbGUgdGhlIGNhbnZhcyB0byB0aGUgY29ycmVjdCBzaXplXHJcbiAgLy8gICAvL0ZpZ3VyZSBvdXQgdGhlIHNjYWxlIGFtb3VudCBvbiBlYWNoIGF4aXNcclxuICAvLyAgIHNjYWxlWCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gdGhpcy5yZW5kZXJlci5jYW52YXMud2lkdGg7XHJcbiAgLy8gICBzY2FsZVkgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyB0aGlzLnJlbmRlcmVyLmNhbnZhcy5oZWlnaHQ7XHJcblxyXG4gIC8vICAgLy9TY2FsZSB0aGUgY2FudmFzIGJhc2VkIG9uIHdoaWNoZXZlciB2YWx1ZSBpcyBsZXNzOiBgc2NhbGVYYCBvciBgc2NhbGVZYFxyXG4gIC8vICAgc2NhbGUgPSBNYXRoLm1pbihzY2FsZVgsIHNjYWxlWSk7XHJcbiAgLy8gICB0aGlzLnJlbmRlcmVyLmNhbnZhcy5zdHlsZS50cmFuc2Zvcm1PcmlnaW4gPSBcIjAgMFwiO1xyXG4gIC8vICAgdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUudHJhbnNmb3JtID0gXCJzY2FsZShcIiArIHNjYWxlICsgXCIpXCI7XHJcblxyXG4gIC8vICAgLy8yLiBDZW50ZXIgdGhlIGNhbnZhcy5cclxuICAvLyAgIC8vRGVjaWRlIHdoZXRoZXIgdG8gY2VudGVyIHRoZSBjYW52YXMgdmVydGljYWxseSBvciBob3Jpem9udGFsbHkuXHJcbiAgLy8gICAvL1dpZGUgY2FudmFzZXMgc2hvdWxkIGJlIGNlbnRlcmVkIHZlcnRpY2FsbHksIGFuZCBcclxuICAvLyAgIC8vc3F1YXJlIG9yIHRhbGwgY2FudmFzZXMgc2hvdWxkIGJlIGNlbnRlcmVkIGhvcml6b250YWxseVxyXG5cclxuICAvLyAgIGlmICh0aGlzLnJlbmRlcmVyLmNhbnZhcy53aWR0aCA+IHRoaXMucmVuZGVyZXIuY2FudmFzLmhlaWdodCkge1xyXG4gIC8vICAgICBjZW50ZXIgPSBcInZlcnRpY2FsbHlcIjtcclxuICAvLyAgIH0gZWxzZSB7XHJcbiAgLy8gICAgIGNlbnRlciA9IFwiaG9yaXpvbnRhbGx5XCI7XHJcbiAgLy8gICB9XHJcbiAgICBcclxuICAvLyAgIC8vQ2VudGVyIGhvcml6b250YWxseSAoZm9yIHNxdWFyZSBvciB0YWxsIGNhbnZhc2VzKVxyXG4gIC8vICAgaWYgKGNlbnRlciA9PT0gXCJob3Jpem9udGFsbHlcIikge1xyXG4gIC8vICAgICBsZXQgbWFyZ2luID0gKHdpbmRvdy5pbm5lcldpZHRoIC0gdGhpcy5yZW5kZXJlci5jYW52YXMud2lkdGggKiBzY2FsZVkpIC8gMjtcclxuICAvLyAgICAgdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUubWFyZ2luTGVmdCA9IG1hcmdpbiArIFwicHhcIjtcclxuICAvLyAgICAgdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUubWFyZ2luUmlnaHQgPSBtYXJnaW4gKyBcInB4XCI7XHJcbiAgLy8gICB9XHJcblxyXG4gIC8vICAgLy9DZW50ZXIgdmVydGljYWxseSAoZm9yIHdpZGUgY2FudmFzZXMpIFxyXG4gIC8vICAgaWYgKGNlbnRlciA9PT0gXCJ2ZXJ0aWNhbGx5XCIpIHtcclxuICAvLyAgICAgbGV0IG1hcmdpbiA9ICh3aW5kb3cuaW5uZXJIZWlnaHQgLSB0aGlzLnJlbmRlcmVyLmNhbnZhcy5oZWlnaHQgKiBzY2FsZVgpIC8gMjtcclxuICAvLyAgICAgdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUubWFyZ2luVG9wID0gbWFyZ2luICsgXCJweFwiO1xyXG4gIC8vICAgICB0aGlzLnJlbmRlcmVyLmNhbnZhcy5zdHlsZS5tYXJnaW5Cb3R0b20gPSBtYXJnaW4gKyBcInB4XCI7XHJcbiAgLy8gICB9XHJcblxyXG4gIC8vICAgLy8zLiBSZW1vdmUgYW55IHBhZGRpbmcgZnJvbSB0aGUgY2FudmFzIGFuZCBzZXQgdGhlIGNhbnZhc1xyXG4gIC8vICAgLy9kaXNwbGF5IHN0eWxlIHRvIFwiYmxvY2tcIlxyXG4gIC8vICAgLy8gdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUucGFkZGluZ0xlZnQgPSAwO1xyXG4gIC8vICAgLy8gdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUucGFkZGluZ1JpZ2h0ID0gMDtcclxuICAvLyAgIHRoaXMucmVuZGVyZXIuY2FudmFzLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICBcclxuICAvLyAgIC8vNC4gU2V0IHRoZSBjb2xvciBvZiB0aGUgSFRNTCBib2R5IGJhY2tncm91bmRcclxuICAvLyAgIC8vIGRvY3VtZW50LmJvZHkuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmFja2dyb3VuZENvbG9yO1xyXG4gICAgXHJcbiAgLy8gICAvLzUuIFNldCB0aGUgZ2FtZSBlbmdpbmUgYW5kIHBvaW50ZXIgdG8gdGhlIGNvcnJlY3Qgc2NhbGUuIFxyXG4gIC8vICAgLy9UaGlzIGlzIGltcG9ydGFudCBmb3IgY29ycmVjdCBoaXQgdGVzdGluZyBiZXR3ZWVuIHRoZSBwb2ludGVyIGFuZCBzcHJpdGVzXHJcbiAgLy8gICB0aGlzLnBvaW50ZXIuc2NhbGUgPSBzY2FsZTtcclxuICAvLyAgIHRoaXMuc2NhbGUgPSBzY2FsZTtcclxuXHJcbiAgLy8gICAvL0ZpeCBzb21lIHF1aXJraW5lc3MgaW4gc2NhbGluZyBmb3IgU2FmYXJpXHJcbiAgLy8gICAvKlxyXG4gIC8vICAgICBsZXQgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7IFxyXG4gIC8vICAgICBpZiAodWEuaW5kZXhPZignc2FmYXJpJykgIT0gLTEpIHsgXHJcbiAgLy8gICAgIGlmICh1YS5pbmRleE9mKCdjaHJvbWUnKSA+IC0xKSB7XHJcbiAgLy8gICAgIC8vIENocm9tZVxyXG4gIC8vICAgICB9IGVsc2Uge1xyXG4gIC8vICAgICAvLyBTYWZhcmlcclxuICAvLyAgICAgdGhpcy5yZW5kZXJlci5jYW52YXMuc3R5bGUubWF4SGVpZ2h0ID0gXCIxMDAlXCI7XHJcbiAgLy8gICAgIHRoaXMucmVuZGVyZXIuY2FudmFzLnN0eWxlLm1pbkhlaWdodCA9IFwiMTAwJVwiO1xyXG4gIC8vICAgICB9XHJcbiAgLy8gICAgIH1cclxuICAvLyAgICovXHJcbiAgLy8gICB0aGlzLnN0YWdlLndpZHRoID0gdGhpcy5yZW5kZXJlci5jYW52YXMud2lkdGg7XHJcbiAgLy8gICB0aGlzLnN0YWdlLmhlaWdodCA9IHRoaXMucmVuZGVyZXIuY2FudmFzLmhlaWdodDtcclxuICAvLyB9XHJcblxyXG4gIHNjYWxlVG9XaW5kb3coY2FudmFzPXRoaXMucmVuZGVyZXIuY2FudmFzLCBiYWNrZ3JvdW5kQ29sb3IpIHtcclxuXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3IgPSBiYWNrZ3JvdW5kQ29sb3IgfHwgXCIjMkMzNTM5XCI7XHJcbiAgICBsZXQgc2NhbGVYLCBzY2FsZVksIHNjYWxlLCBjZW50ZXI7XHJcbiAgICBcclxuICAgIC8vMS4gU2NhbGUgdGhlIGNhbnZhcyB0byB0aGUgY29ycmVjdCBzaXplXHJcbiAgICAvL0ZpZ3VyZSBvdXQgdGhlIHNjYWxlIGFtb3VudCBvbiBlYWNoIGF4aXNcclxuICAgIHNjYWxlWCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gY2FudmFzLndpZHRoO1xyXG4gICAgc2NhbGVZID0gd2luZG93LmlubmVySGVpZ2h0IC8gY2FudmFzLmhlaWdodDtcclxuXHJcbiAgICAvL1NjYWxlIHRoZSBjYW52YXMgYmFzZWQgb24gd2hpY2hldmVyIHZhbHVlIGlzIGxlc3M6IGBzY2FsZVhgIG9yIGBzY2FsZVlgXHJcbiAgICBzY2FsZSA9IE1hdGgubWluKHNjYWxlWCwgc2NhbGVZKTtcclxuICAgIGNhbnZhcy5zdHlsZS50cmFuc2Zvcm1PcmlnaW4gPSBcIjAgMFwiO1xyXG4gICAgY2FudmFzLnN0eWxlLnRyYW5zZm9ybSA9IFwic2NhbGUoXCIgKyBzY2FsZSArIFwiKVwiO1xyXG5cclxuICAgIC8vMi4gQ2VudGVyIHRoZSBjYW52YXMuXHJcbiAgICAvL0RlY2lkZSB3aGV0aGVyIHRvIGNlbnRlciB0aGUgY2FudmFzIHZlcnRpY2FsbHkgb3IgaG9yaXpvbnRhbGx5LlxyXG4gICAgLy9XaWRlIGNhbnZhc2VzIHNob3VsZCBiZSBjZW50ZXJlZCB2ZXJ0aWNhbGx5LCBhbmQgXHJcbiAgICAvL3NxdWFyZSBvciB0YWxsIGNhbnZhc2VzIHNob3VsZCBiZSBjZW50ZXJlZCBob3Jpem9udGFsbHlcclxuICAgIGlmIChjYW52YXMud2lkdGggPiBjYW52YXMuaGVpZ2h0KSB7XHJcbiAgICAgIGlmIChjYW52YXMud2lkdGggKiBzY2FsZSA8IHdpbmRvdy5pbm5lcldpZHRoKSB7XHJcbiAgICAgICAgY2VudGVyID0gXCJob3Jpem9udGFsbHlcIjtcclxuICAgICAgfSBlbHNlIHsgXHJcbiAgICAgICAgY2VudGVyID0gXCJ2ZXJ0aWNhbGx5XCI7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChjYW52YXMuaGVpZ2h0ICogc2NhbGUgPCB3aW5kb3cuaW5uZXJIZWlnaHQpIHtcclxuICAgICAgICBjZW50ZXIgPSBcInZlcnRpY2FsbHlcIjtcclxuICAgICAgfSBlbHNlIHsgXHJcbiAgICAgICAgY2VudGVyID0gXCJob3Jpem9udGFsbHlcIjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvL0NlbnRlciBob3Jpem9udGFsbHkgKGZvciBzcXVhcmUgb3IgdGFsbCBjYW52YXNlcylcclxuICAgIGxldCBtYXJnaW47XHJcbiAgICBpZiAoY2VudGVyID09PSBcImhvcml6b250YWxseVwiKSB7XHJcbiAgICAgIG1hcmdpbiA9ICh3aW5kb3cuaW5uZXJXaWR0aCAtIGNhbnZhcy53aWR0aCAqIHNjYWxlKSAvIDI7XHJcbiAgICAgIGNhbnZhcy5zdHlsZS5tYXJnaW5MZWZ0ID0gbWFyZ2luICsgXCJweFwiO1xyXG4gICAgICBjYW52YXMuc3R5bGUubWFyZ2luUmlnaHQgPSBtYXJnaW4gKyBcInB4XCI7XHJcbiAgICB9XHJcblxyXG4gICAgLy9DZW50ZXIgdmVydGljYWxseSAoZm9yIHdpZGUgY2FudmFzZXMpIFxyXG4gICAgaWYgKGNlbnRlciA9PT0gXCJ2ZXJ0aWNhbGx5XCIpIHtcclxuICAgICAgbWFyZ2luID0gKHdpbmRvdy5pbm5lckhlaWdodCAtIGNhbnZhcy5oZWlnaHQgKiBzY2FsZSkgLyAyO1xyXG4gICAgICBjYW52YXMuc3R5bGUubWFyZ2luVG9wID0gbWFyZ2luICsgXCJweFwiO1xyXG4gICAgICBjYW52YXMuc3R5bGUubWFyZ2luQm90dG9tID0gbWFyZ2luICsgXCJweFwiO1xyXG4gICAgfVxyXG5cclxuICAgIC8vMy4gUmVtb3ZlIGFueSBwYWRkaW5nIGZyb20gdGhlIGNhbnZhcyAgYW5kIGJvZHkgYW5kIHNldCB0aGUgY2FudmFzXHJcbiAgICAvL2Rpc3BsYXkgc3R5bGUgdG8gXCJibG9ja1wiXHJcbiAgICBjYW52YXMuc3R5bGUucGFkZGluZ0xlZnQgPSAwO1xyXG4gICAgY2FudmFzLnN0eWxlLnBhZGRpbmdSaWdodCA9IDA7XHJcbiAgICBjYW52YXMuc3R5bGUucGFkZGluZ1RvcCA9IDA7XHJcbiAgICBjYW52YXMuc3R5bGUucGFkZGluZ0JvdHRvbSA9IDA7XHJcbiAgICBjYW52YXMuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgIFxyXG4gICAgLy80LiBTZXQgdGhlIGNvbG9yIG9mIHRoZSBIVE1MIGJvZHkgYmFja2dyb3VuZFxyXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBiYWNrZ3JvdW5kQ29sb3I7XHJcblxyXG4gICAgdGhpcy5wb2ludGVyLnNjYWxlID0gc2NhbGU7XHJcbiAgICB0aGlzLnNjYWxlID0gc2NhbGU7XHJcbiAgICBcclxuICAgIC8vRml4IHNvbWUgcXVpcmtpbmVzcyBpbiBzY2FsaW5nIGZvciBTYWZhcmlcclxuICAgIGxldCB1YSA9IG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTsgXHJcbiAgICBpZiAodWEuaW5kZXhPZihcInNhZmFyaVwiKSAhPSAtMSkgeyBcclxuICAgICAgaWYgKHVhLmluZGV4T2YoXCJjaHJvbWVcIikgPiAtMSkge1xyXG4gICAgICAgIC8vIENocm9tZVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIFNhZmFyaVxyXG4gICAgICAgIGNhbnZhcy5zdHlsZS5tYXhIZWlnaHQgPSBcIjEwMCVcIjtcclxuICAgICAgICBjYW52YXMuc3R5bGUubWluSGVpZ2h0ID0gXCIxMDAlXCI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLzUuIFJldHVybiB0aGUgYHNjYWxlYCB2YWx1ZS4gVGhpcyBpcyBpbXBvcnRhbnQsIGJlY2F1c2UgeW91J2xsIG5lZSB0aGlzIHZhbHVlIFxyXG4gICAgLy9mb3IgY29ycmVjdCBoaXQgdGVzdGluZyBiZXR3ZWVuIHRoZSBwb2ludGVyIGFuZCBzcHJpdGVzXHJcblx0Y29uc29sZS5sb2coJ3NjYWxlOiAnK3NjYWxlKVxyXG4gICAgcmV0dXJuIHNjYWxlO1xyXG4gIH07XHJcblxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdGluYSh3aWR0aCA9IERFRkFVTFRfV0lEVEgsIGhlaWdodCA9IERFRkFVTFRfSEVJR0hULFxyXG4gIHNldHVwLCBhc3NldHNUb0xvYWQsIGxvYWQpIHtcclxuICByZXR1cm4gbmV3IFRpbmEod2lkdGgsIGhlaWdodCwgc2V0dXAsIGFzc2V0c1RvTG9hZCwgbG9hZCk7XHJcbn1cclxuXHJcblxyXG4iLCJpbXBvcnQgY29tbW9uIGZyb20gJy4vY29tbW9uLmpzJztcclxuLy9pbXBvcnQge21ha2VTb3VuZH0gZnJvbSAnLi9zb3VuZC5qcyc7XHJcblxyXG5leHBvcnQgbGV0IGFzc2V0cyA9IHtcclxuICB0b0xvYWQ6IDAsXHJcbiAgbG9hZGVkOiAwLFxyXG5cclxuICBpbWFnZUV4dGVuc2lvbnM6IFsncG5nJywgJ2pwZycsICdnaWYnXSxcclxuICBmb250RXh0ZW5zaW9uczogWyd0dGYnLCAnb3RmJywgJ3R0YycsICd3b2ZmJ10sXHJcbiAganNvbkV4dGVuc2lvbnM6IFsnanNvbiddLFxyXG4gIGF1ZGlvRXh0ZW5zaW9uczogWydtcDMnLCAnb2dnJywgJ3dhdicsICd3ZWJtJ10sXHJcblxyXG4gIC8vIFRPRE86IOaPkOekuui9veWFpeeahOaWh+S7tuWQjeWtl1xyXG4gIGxvYWQ6IGZ1bmN0aW9uKHNvdXJjZXMgPSBbXSkge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICBsZXQgbG9hZEhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5sb2FkZWQrKztcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmxvYWRlZCk7XHJcbiAgICAgICAgaWYgKHRoaXMudG9Mb2FkID09PSB0aGlzLmxvYWRlZCkge1xyXG4gICAgICAgICAgdGhpcy5sb2FkZWQgPSB0aGlzLnRvTG9hZCA9IDA7XHJcbiAgICAgICAgICBjb25zb2xlLmluZm8oJ0Fzc2V0cyBmaW5pc2hlZCBsb2FkaW5nJyk7XHJcbiAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgICBpZiAoIXNvdXJjZXMgfHwgc291cmNlcy5sZW5ndGggPCAxKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignbm8gYXNzZXRzIG5lZWQgdG8gbG9hZCcpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBjb25zb2xlLmluZm8oJ0xvYWRpbmcgYXNzZXRzLi4uJyk7XHJcblxyXG4gICAgICB0aGlzLnRvTG9hZCA9IHNvdXJjZXMubGVuZ3RoO1xyXG4gICAgICBzb3VyY2VzLmZvckVhY2goc291cmNlID0+IHtcclxuICAgICAgICBsZXQgZXh0ZW5zaW9uID0gc291cmNlLnNwbGl0KCcuJykucG9wKCk7XHJcbiAgICAgICAgLy8gTG9hZCBpbWFnZXNcclxuICAgICAgICBpZiAodGhpcy5pbWFnZUV4dGVuc2lvbnMuaGFzKGV4dGVuc2lvbikpIHtcclxuICAgICAgICAgIHRoaXMubG9hZEltYWdlKHNvdXJjZSwgbG9hZEhhbmRsZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBMb2FkIGZvbnRzIFxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuZm9udEV4dGVuc2lvbnMuaGFzKGV4dGVuc2lvbikpIHtcclxuICAgICAgICAgIHRoaXMubG9hZEZvbnQoc291cmNlLCBsb2FkSGFuZGxlcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIExvYWQgSlNPTiBmaWxlcyAgXHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5qc29uRXh0ZW5zaW9ucy5oYXMoZXh0ZW5zaW9uKSkge1xyXG4gICAgICAgICAgdGhpcy5sb2FkSnNvbihzb3VyY2UsIGxvYWRIYW5kbGVyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gTG9hZCBhdWRpbyBmaWxlcyAgXHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5hdWRpb0V4dGVuc2lvbnMuaGFzKGV4dGVuc2lvbikpIHtcclxuICAgICAgICAgIHRoaXMubG9hZFNvdW5kKHNvdXJjZSwgbG9hZEhhbmRsZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBEaXNwbGF5IGEgbWVzc2FnZSBpZiBhIGZpbGUgdHlwZSBpc24ndCByZWNvZ25pemVkXHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkZpbGUgdHlwZSBub3QgcmVjb2duaXplZDogXCIgKyBzb3VyY2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9LFxyXG5cclxuICBsb2FkSW1hZ2U6IGZ1bmN0aW9uKHNvdXJjZSwgbG9hZEhhbmRsZXIpIHtcclxuICAgIGxldCBpbWFnZSA9IG5ldyBJbWFnZSgpO1xyXG4gICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGxvYWRIYW5kbGVyLCBmYWxzZSk7XHJcbiAgICB0aGlzW3NvdXJjZV0gPSBpbWFnZTtcclxuICAgIGltYWdlLnNyYyA9IHNvdXJjZTtcclxuICB9LFxyXG5cclxuICBsb2FkRm9udDogZnVuY3Rpb24oc291cmNlLCBsb2FkSGFuZGxlcikge1xyXG4gICAgbGV0IGZvbnRGYW1pbHkgPSBzb3VyY2Uuc3BsaXQoJy8nKS5wb3AoKS5zcGxpdCgnLicpWzBdO1xyXG4gICAgbGV0IG5ld1N0eWxlID0gJCRuZXcoJ3N0eWxlJyk7XHJcbiAgICBsZXQgZm9udEZhY2UgPSBcIkBmb250LWZhY2Uge2ZvbnQtZmFtaWx5OiAnXCIgKyBmb250RmFtaWx5ICtcclxuICAgICAgXCInOyBzcmM6IHVybCgnXCIgKyBzb3VyY2UgKyBcIicpO31cIjtcclxuICAgIG5ld1N0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGZvbnRGYWNlKSk7XHJcbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKG5ld1N0eWxlKTtcclxuICAgIGxvYWRIYW5kbGVyKCk7XHJcbiAgfSxcclxuXHJcbiAgbG9hZEpzb246IGZ1bmN0aW9uKHNvdXJjZSwgbG9hZEhhbmRsZXIpIHtcclxuICAgIGxldCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgIHhoci5vcGVuKCdHRVQnLCBzb3VyY2UsIHRydWUpO1xyXG4gICAgeGhyLnJlc3BvbnNlVHlwZSA9ICd0ZXh0JztcclxuICAgIHhoci5vbmxvYWQgPSBldmVudCA9PiB7XHJcbiAgICAgIGlmICh4aHIuc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgICBsZXQgZmlsZSA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgZmlsZS5uYW1lID0gc291cmNlO1xyXG4gICAgICAgIHRoaXNbZmlsZS5uYW1lXSA9IGZpbGU7XHJcbiAgICAgICAgaWYgKGZpbGUuZnJhbWVzKVxyXG4gICAgICAgICAgdGhpcy5jcmVhdGVUaWxlc2V0RnJhbWVzKGZpbGUsIHNvdXJjZSwgbG9hZEhhbmRsZXIpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgIGxvYWRIYW5kbGVyKCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICB4aHIuc2VuZCgpO1xyXG4gIH0sXHJcblxyXG4gIGNyZWF0ZVRpbGVzZXRGcmFtZXM6IGZ1bmN0aW9uKGZpbGUsIHNvdXJjZSwgbG9hZEhhbmRsZXIpIHtcclxuICAgIGxldCBiYXNlVXJsID0gc291cmNlLnJlcGxhY2UoL1teXFwvXSokLywgJycpO1xyXG4gICAgbGV0IGltYWdlU291cmNlID0gYmFzZVVybCArIGZpbGUubWV0YS5pbWFnZTtcclxuICAgIGxldCBpbWFnZSA9IG5ldyBJbWFnZSgpO1xyXG4gICAgbGV0IGltYWdlTG9hZEhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICAgIHRoaXNbaW1hZ2VTb3VyY2VdID0gaW1hZ2U7XHJcbiAgICAgIF8ua2V5cyhmaWxlLmZyYW1lcykuZm9yRWFjaChmcmFtZSA9PiB7XHJcbiAgICAgICAgdGhpc1tmcmFtZV0gPSBmaWxlLmZyYW1lc1tmcmFtZV07XHJcbiAgICAgICAgdGhpc1tmcmFtZV0uc291cmNlID0gaW1hZ2U7XHJcbiAgICAgIH0pO1xyXG4gICAgICBsb2FkSGFuZGxlcigpO1xyXG4gICAgfTtcclxuICAgIGltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBpbWFnZUxvYWRIYW5kbGVyLCBmYWxzZSk7XHJcbiAgICBpbWFnZS5zcmMgPSBpbWFnZVNvdXJjZTtcclxuICB9LFxyXG5cclxuICBsb2FkU291bmQ6IGZ1bmN0aW9uKHNvdXJjZSwgbG9hZEhhbmRsZXIpIHtcclxuICAgIC8vbGV0IHNvdW5kID0gbWFrZVNvdW5kKHNvdXJjZSxsb2FkSGFuZGxlcik7XHJcbiAgICAvL3NvdW5kLm5hbWUgPSBzb3VyY2U7XHJcbiAgICAvL3RoaXNbc291bmQubmFtZV0gPSBzb3VuZDtcclxuICB9XHJcbn07XHJcbiIsImV4cG9ydCBmdW5jdGlvbiBoaXRUZXN0UG9pbnQocG9pbnQsIHNwcml0ZSkge1xyXG4gIGxldCBzaGFwZSwgbGVmdCwgcmlnaHQsIHRvcCwgYm90dG9tLCB2eCwgdnksIG1hZ25pdHVkZSwgaGl0O1xyXG5cclxuICBpZiAoc3ByaXRlLnJhZGl1cykge1xyXG4gICAgc2hhcGUgPSAnY2lyY2xlJztcclxuICB9IGVsc2Uge1xyXG4gICAgc2hhcGUgPSAncmVjdGFuZ2xlJztcclxuICB9XHJcblxyXG4gIGlmIChzaGFwZSA9PT0gJ3JlY3RhbmdsZScpIHtcclxuICAgIGxlZnQgPSBzcHJpdGUuZ3g7XHJcbiAgICByaWdodCA9IHNwcml0ZS5neCArIHNwcml0ZS53aWR0aDtcclxuICAgIHRvcCA9IHNwcml0ZS5neTtcclxuICAgIGJvdHRvbSA9IHNwcml0ZS5neSArIHNwcml0ZS5oZWlnaHQ7XHJcbiAgICBoaXQgPSBwb2ludC54ID4gbGVmdCAmJiBwb2ludC54IDwgcmlnaHQgJiYgcG9pbnQueSA+IHRvcCAmJiBwb2ludC55IDwgYm90dG9tO1xyXG4gIH1cclxuXHJcbiAgaWYgKHNoYXBlID09PSAnY2lyY2xlJykge1xyXG4gICAgdnggPSBwb2ludC54IC0gc3ByaXRlLmNlbnRlclg7XHJcbiAgICB2eSA9IHBvaW50LnkgLSBzcHJpdGUuY2VudGVyWTtcclxuICAgIG1hZ25pdHVkZSA9IE1hdGguc3FydCh2eCAqIHZ4ICsgdnkgKiB2eSk7XHJcbiAgICBoaXQgPSBtYWduaXR1ZGUgPCBzcHJpdGUucmFkaXVzO1xyXG4gIH1cclxuICByZXR1cm4gaGl0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaGl0VGVzdENpcmNsZShjMSwgYzIsIGdsb2JhbCA9IGZhbHNlKSB7XHJcbiAgbGV0IHZ4LCB2eSwgbWFnbml0dWRlLCBjb21iaW5lZFJhZGlpLCBoaXQ7XHJcblxyXG4gIGlmIChnbG9iYWwpIHtcclxuICAgIHZ4ID0gKGMyLmd4ICsgYzIucmFkaXVzKSAtIChjMS5neCArIGMxLnJhZGl1cyk7XHJcbiAgICB2eSA9IChjMi5neSArIGMyLnJhZGl1cykgLSAoYzEuZ3kgKyBjMS5yYWRpdXMpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB2eCA9IGMyLmNlbnRlclggLSBjMS5jZW50ZXJYO1xyXG4gICAgdnkgPSBjMi5jZW50ZXJZIC0gYzEuY2VudGVyWTtcclxuICB9XHJcblxyXG4gIG1hZ25pdHVkZSA9IE1hdGguc3FydCh2eCAqIHZ4ICsgdnkgKiB2eSk7XHJcbiAgY29tYmluZWRSYWRpaSA9IGMxLnJhZGl1cyArIGMyLnJhZGl1cztcclxuICBoaXQgPSBtYWduaXR1ZGUgPCBjb21iaW5lZFJhZGlpO1xyXG5cclxuICByZXR1cm4gaGl0O1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNpcmNsZUNvbGxpc2lvbihjMSwgYzIsIGJvdW5jZSA9IGZhbHNlLCBnbG9iYWwgPSBmYWxzZSkge1xyXG4gIGxldCBtYWduaXR1ZGUsIGNvbWJpbmVkUmFkaWksIG92ZXJsYXAsXHJcbiAgICB2eCwgdnksIGR4LCBkeSwgcyA9IHt9LFxyXG4gICAgaGl0ID0gZmFsc2U7XHJcblxyXG4gIGlmIChnbG9iYWwpIHtcclxuICAgIHZ4ID0gKGMyLmd4ICsgYzIucmFkaXVzKSAtIChjMS5neCArIGMxLnJhZGl1cyk7XHJcbiAgICB2eSA9IChjMi5neSArIGMyLnJhZGl1cykgLSAoYzEuZ3kgKyBjMS5yYWRpdXMpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB2eCA9IGMyLmNlbnRlclggLSBjMS5jZW50ZXJYO1xyXG4gICAgdnkgPSBjMi5jZW50ZXJZIC0gYzEuY2VudGVyWTtcclxuICB9XHJcblxyXG4gIG1hZ25pdHVkZSA9IE1hdGguc3FydCh2eCAqIHZ4ICsgdnkgKiB2eSk7XHJcbiAgY29tYmluZWRSYWRpaSA9IGMxLnJhZGl1cyArIGMyLnJhZGl1cztcclxuXHJcbiAgaWYgKG1hZ25pdHVkZSA8IGNvbWJpbmVkUmFkaWkpIHtcclxuICAgIGhpdCA9IHRydWU7XHJcbiAgICBvdmVybGFwID0gY29tYmluZWRSYWRpaSAtIG1hZ25pdHVkZTtcclxuICAgIGxldCBxdWFudHVtUGFkZGluZyA9IDAuMztcclxuICAgIG92ZXJsYXAgKz0gcXVhbnR1bVBhZGRpbmc7XHJcblxyXG4gICAgZHggPSB2eCAvIG1hZ25pdHVkZTtcclxuICAgIGR5ID0gdnkgLyBtYWduaXR1ZGU7XHJcbiAgICBjMS54IC09IG92ZXJsYXAgKiBkeDtcclxuICAgIGMxLnkgLT0gb3ZlcmxhcCAqIGR5O1xyXG5cclxuICAgIGlmIChib3VuY2UpIHtcclxuICAgICAgcy54ID0gdnk7XHJcbiAgICAgIHMueSA9IC12eDtcclxuICAgICAgYm91bmNlT2ZmU3VyZmFjZShjMSwgcyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBoaXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBtb3ZpbmdDaXJjbGVDb2xsaXNpb24oYzEsIGMyLCBnbG9iYWwgPSBmYWxzZSkge1xyXG4gIGxldCBjb21iaW5lZFJhZGlpLCBvdmVybGFwLCB4U2lkZSwgeVNpZGUsXHJcbiAgICBzID0ge30sXHJcbiAgICBwMUEgPSB7fSxcclxuICAgIHAxQiA9IHt9LFxyXG4gICAgcDJBID0ge30sXHJcbiAgICBwMkIgPSB7fSxcclxuICAgIGhpdCA9IGZhbHNlO1xyXG5cclxuICBjMS5tYXNzID0gYzEubWFzcyB8fCAxO1xyXG4gIGMyLm1hc3MgPSBjMi5tYXNzIHx8IDE7XHJcblxyXG4gIGlmIChnbG9iYWwpIHtcclxuICAgIHMudnggPSAoYzIuZ3ggKyBjMi5yYWRpdXMpIC0gKGMxLmd4ICsgYzEucmFkaXVzKTtcclxuICAgIHMudnkgPSAoYzIuZ3kgKyBjMi5yYWRpdXMpIC0gKGMxLmd5ICsgYzEucmFkaXVzKTtcclxuICB9IGVsc2Uge1xyXG4gICAgcy52eCA9IGMyLmNlbnRlclggLSBjMS5jZW50ZXJYO1xyXG4gICAgcy52eSA9IGMyLmNlbnRlclkgLSBjMS5jZW50ZXJZO1xyXG4gIH1cclxuXHJcbiAgcy5tYWduaXR1ZGUgPSBNYXRoLnNxcnQocy52eCAqIHMudnggKyBzLnZ5ICogcy52eSk7XHJcbiAgY29tYmluZWRSYWRpaSA9IGMxLnJhZGl1cyArIGMyLnJhZGl1cztcclxuXHJcbiAgaWYgKHMubWFnbml0dWRlIDwgY29tYmluZWRSYWRpaSkge1xyXG4gICAgaGl0ID0gdHJ1ZTtcclxuXHJcbiAgICBvdmVybGFwID0gY29tYmluZWRSYWRpaSAtIHMubWFnbml0dWRlO1xyXG5cclxuICAgIG92ZXJsYXAgKz0gMC4zO1xyXG5cclxuICAgIHMuZHggPSBzLnZ4IC8gcy5tYWduaXR1ZGU7XHJcbiAgICBzLmR5ID0gcy52eSAvIHMubWFnbml0dWRlO1xyXG5cclxuICAgIHMudnhIYWxmID0gTWF0aC5hYnMocy5keCAqIG92ZXJsYXAgLyAyKTtcclxuICAgIHMudnlIYWxmID0gTWF0aC5hYnMocy5keSAqIG92ZXJsYXAgLyAyKTtcclxuXHJcbiAgICAoYzEueCA+IGMyLngpID8geFNpZGUgPSAxOiB4U2lkZSA9IC0xO1xyXG4gICAgKGMxLnkgPiBjMi55KSA/IHlTaWRlID0gMTogeVNpZGUgPSAtMTtcclxuXHJcbiAgICBjMS54ID0gYzEueCArIChzLnZ4SGFsZiAqIHhTaWRlKTtcclxuICAgIGMxLnkgPSBjMS55ICsgKHMudnlIYWxmICogeVNpZGUpO1xyXG5cclxuICAgIGMyLnggPSBjMi54ICsgKHMudnhIYWxmICogLXhTaWRlKTtcclxuICAgIGMyLnkgPSBjMi55ICsgKHMudnlIYWxmICogLXlTaWRlKTtcclxuXHJcbiAgICBzLmx4ID0gcy52eTtcclxuICAgIHMubHkgPSAtcy52eDtcclxuXHJcbiAgICBsZXQgZHAxID0gYzEudnggKiBzLmR4ICsgYzEudnkgKiBzLmR5O1xyXG5cclxuICAgIHAxQS54ID0gZHAxICogcy5keDtcclxuICAgIHAxQS55ID0gZHAxICogcy5keTtcclxuXHJcbiAgICBsZXQgZHAyID0gYzEudnggKiAocy5seCAvIHMubWFnbml0dWRlKSArIGMxLnZ5ICogKHMubHkgLyBzLm1hZ25pdHVkZSk7XHJcblxyXG4gICAgcDFCLnggPSBkcDIgKiAocy5seCAvIHMubWFnbml0dWRlKTtcclxuICAgIHAxQi55ID0gZHAyICogKHMubHkgLyBzLm1hZ25pdHVkZSk7XHJcblxyXG4gICAgbGV0IGRwMyA9IGMyLnZ4ICogcy5keCArIGMyLnZ5ICogcy5keTtcclxuXHJcbiAgICBwMkEueCA9IGRwMyAqIHMuZHg7XHJcbiAgICBwMkEueSA9IGRwMyAqIHMuZHk7XHJcblxyXG4gICAgbGV0IGRwNCA9IGMyLnZ4ICogKHMubHggLyBzLm1hZ25pdHVkZSkgKyBjMi52eSAqIChzLmx5IC8gcy5tYWduaXR1ZGUpO1xyXG5cclxuICAgIHAyQi54ID0gZHA0ICogKHMubHggLyBzLm1hZ25pdHVkZSk7XHJcbiAgICBwMkIueSA9IGRwNCAqIChzLmx5IC8gcy5tYWduaXR1ZGUpO1xyXG5cclxuICAgIGMxLmJvdW5jZSA9IHt9O1xyXG4gICAgYzEuYm91bmNlLnggPSBwMUIueCArIHAyQS54O1xyXG4gICAgYzEuYm91bmNlLnkgPSBwMUIueSArIHAyQS55O1xyXG5cclxuICAgIGMyLmJvdW5jZSA9IHt9O1xyXG4gICAgYzIuYm91bmNlLnggPSBwMUEueCArIHAyQi54O1xyXG4gICAgYzIuYm91bmNlLnkgPSBwMUEueSArIHAyQi55O1xyXG5cclxuICAgIGMxLnZ4ID0gYzEuYm91bmNlLnggLyBjMS5tYXNzO1xyXG4gICAgYzEudnkgPSBjMS5ib3VuY2UueSAvIGMxLm1hc3M7XHJcbiAgICBjMi52eCA9IGMyLmJvdW5jZS54IC8gYzIubWFzcztcclxuICAgIGMyLnZ5ID0gYzIuYm91bmNlLnkgLyBjMi5tYXNzO1xyXG4gIH1cclxuICByZXR1cm4gaGl0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbXVsdGlwbGVDaXJjbGVDb2xsaXNpb24oYXJyYXlPZkNpcmNsZXMsIGdsb2JhbCA9IGZhbHNlKSB7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheU9mQ2lyY2xlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgdmFyIGMxID0gYXJyYXlPZkNpcmNsZXNbaV07XHJcbiAgICBmb3IgKGxldCBqID0gaSArIDE7IGogPCBhcnJheU9mQ2lyY2xlcy5sZW5ndGg7IGorKykge1xyXG4gICAgICBsZXQgYzIgPSBhcnJheU9mQ2lyY2xlc1tqXTtcclxuICAgICAgbW92aW5nQ2lyY2xlQ29sbGlzaW9uKGMxLCBjMiwgZ2xvYmFsKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBoaXRUZXN0UmVjdGFuZ2xlKHIxLCByMiwgZ2xvYmFsID0gZmFsc2UpIHtcclxuICBsZXQgaGl0LCBjb21iaW5lZEhhbGZXaWR0aHMsIGNvbWJpbmVkSGFsZkhlaWdodHMsIHZ4LCB2eTtcclxuICBoaXQgPSBmYWxzZTtcclxuXHJcbiAgaWYgKGdsb2JhbCkge1xyXG4gICAgdnggPSAocjEuZ3ggKyByMS5oYWxmV2lkdGgpIC0gKHIyLmd4ICsgcjIuaGFsZldpZHRoKTtcclxuICAgIHZ5ID0gKHIxLmd5ICsgcjEuaGFsZkhlaWdodCkgLSAocjIuZ3kgKyByMi5oYWxmSGVpZ2h0KTtcclxuICB9IGVsc2Uge1xyXG4gICAgdnggPSByMS5jZW50ZXJYIC0gcjIuY2VudGVyWDtcclxuICAgIHZ5ID0gcjEuY2VudGVyWSAtIHIyLmNlbnRlclk7XHJcbiAgfVxyXG5cclxuICBjb21iaW5lZEhhbGZXaWR0aHMgPSByMS5oYWxmV2lkdGggKyByMi5oYWxmV2lkdGg7XHJcbiAgY29tYmluZWRIYWxmSGVpZ2h0cyA9IHIxLmhhbGZIZWlnaHQgKyByMi5oYWxmSGVpZ2h0O1xyXG5cclxuICBpZiAoTWF0aC5hYnModngpIDwgY29tYmluZWRIYWxmV2lkdGhzKSB7XHJcbiAgICBpZiAoTWF0aC5hYnModnkpIDwgY29tYmluZWRIYWxmSGVpZ2h0cykge1xyXG4gICAgICBoaXQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaGl0ID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIGhpdCA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGhpdDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlY3RhbmdsZUNvbGxpc2lvbihyMSwgcjIsIGJvdW5jZSA9IGZhbHNlLCBnbG9iYWwgPSB0cnVlKSB7XHJcbiAgbGV0IGNvbGxpc2lvbiwgY29tYmluZWRIYWxmV2lkdGhzLCBjb21iaW5lZEhhbGZIZWlnaHRzLFxyXG4gICAgb3ZlcmxhcFgsIG92ZXJsYXBZLCB2eCwgdnk7XHJcblxyXG4gIGlmIChnbG9iYWwpIHtcclxuICAgIHZ4ID0gKHIxLmd4ICsgcjEuaGFsZldpZHRoKSAtIChyMi5neCArIHIyLmhhbGZXaWR0aCk7XHJcbiAgICB2eSA9IChyMS5neSArIHIxLmhhbGZIZWlnaHQpIC0gKHIyLmd5ICsgcjIuaGFsZkhlaWdodCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHZ4ID0gcjEuY2VudGVyWCAtIHIyLmNlbnRlclg7XHJcbiAgICB2eSA9IHIxLmNlbnRlclkgLSByMi5jZW50ZXJZO1xyXG4gIH1cclxuXHJcbiAgY29tYmluZWRIYWxmV2lkdGhzID0gcjEuaGFsZldpZHRoICsgcjIuaGFsZldpZHRoO1xyXG4gIGNvbWJpbmVkSGFsZkhlaWdodHMgPSByMS5oYWxmSGVpZ2h0ICsgcjIuaGFsZkhlaWdodDtcclxuXHJcbiAgaWYgKE1hdGguYWJzKHZ4KSA8IGNvbWJpbmVkSGFsZldpZHRocykge1xyXG4gICAgaWYgKE1hdGguYWJzKHZ5KSA8IGNvbWJpbmVkSGFsZkhlaWdodHMpIHtcclxuICAgICAgb3ZlcmxhcFggPSBjb21iaW5lZEhhbGZXaWR0aHMgLSBNYXRoLmFicyh2eCk7XHJcbiAgICAgIG92ZXJsYXBZID0gY29tYmluZWRIYWxmSGVpZ2h0cyAtIE1hdGguYWJzKHZ5KTtcclxuXHJcbiAgICAgIGlmIChvdmVybGFwWCA+PSBvdmVybGFwWSkge1xyXG4gICAgICAgIGlmICh2eSA+IDApIHtcclxuICAgICAgICAgIGNvbGxpc2lvbiA9IFwidG9wXCI7XHJcbiAgICAgICAgICByMS55ID0gcjEueSArIG92ZXJsYXBZO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjb2xsaXNpb24gPSBcImJvdHRvbVwiO1xyXG4gICAgICAgICAgcjEueSA9IHIxLnkgLSBvdmVybGFwWTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChib3VuY2UpIHtcclxuICAgICAgICAgIHIxLnZ5ICo9IC0xO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZiAodnggPiAwKSB7XHJcbiAgICAgICAgICBjb2xsaXNpb24gPSBcImxlZnRcIjtcclxuICAgICAgICAgIHIxLnggPSByMS54ICsgb3ZlcmxhcFg7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbGxpc2lvbiA9IFwicmlnaHRcIjtcclxuICAgICAgICAgIHIxLnggPSByMS54IC0gb3ZlcmxhcFg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoYm91bmNlKSB7XHJcbiAgICAgICAgICByMS52eCAqPSAtMTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vTm8gY29sbGlzaW9uXHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIC8vTm8gY29sbGlzaW9uXHJcbiAgfVxyXG4gIC8vIOi/lOWbnueisOaSnuaWueWQkSB0b3AgfCByaWdodCB8IGJvdHRvbSB8IGxlZnRcclxuICByZXR1cm4gY29sbGlzaW9uO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaGl0VGVzdENpcmNsZVJlY3RhbmdsZShjMSwgcjEsIGdsb2JhbCA9IGZhbHNlKSB7XHJcbiAgbGV0IHJlZ2lvbiwgY29sbGlzaW9uLCBjMXgsIGMxeSwgcjF4LCByMXk7XHJcblxyXG4gIGlmIChnbG9iYWwpIHtcclxuICAgIGMxeCA9IGMxLmd4O1xyXG4gICAgYzF5ID0gYzEuZ3k7XHJcbiAgICByMXggPSByMS5neDtcclxuICAgIHIxeSA9IHIxLmd5O1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjMXggPSBjMS54O1xyXG4gICAgYzF5ID0gYzEueTtcclxuICAgIHIxeCA9IHIxLng7XHJcbiAgICByMXkgPSByMS55O1xyXG4gIH1cclxuXHJcbiAgaWYgKGMxeSA8IHIxeSAtIHIxLmhhbGZIZWlnaHQpIHtcclxuICAgIGlmIChjMXggPCByMXggLSAxIC0gcjEuaGFsZldpZHRoKSB7XHJcbiAgICAgIHJlZ2lvbiA9IFwidG9wTGVmdFwiO1xyXG4gICAgfSBlbHNlIGlmIChjMXggPiByMXggKyAxICsgcjEuaGFsZldpZHRoKSB7XHJcbiAgICAgIHJlZ2lvbiA9IFwidG9wUmlnaHRcIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlZ2lvbiA9IFwidG9wTWlkZGxlXCI7XHJcbiAgICB9XHJcbiAgfSBlbHNlIGlmIChjMXkgPiByMXkgKyByMS5oYWxmSGVpZ2h0KSB7XHJcbiAgICBpZiAoYzF4IDwgcjF4IC0gMSAtIHIxLmhhbGZXaWR0aCkge1xyXG4gICAgICByZWdpb24gPSBcImJvdHRvbUxlZnRcIjtcclxuICAgIH0gZWxzZSBpZiAoYzF4ID4gcjF4ICsgMSArIHIxLmhhbGZXaWR0aCkge1xyXG4gICAgICByZWdpb24gPSBcImJvdHRvbVJpZ2h0XCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZWdpb24gPSBcImJvdHRvbU1pZGRsZVwiO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBpZiAoYzF4IDwgcjF4IC0gcjEuaGFsZldpZHRoKSB7XHJcbiAgICAgIHJlZ2lvbiA9IFwibGVmdE1pZGRsZVwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVnaW9uID0gXCJyaWdodE1pZGRsZVwiO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaWYgKHJlZ2lvbiA9PT0gXCJ0b3BNaWRkbGVcIiB8fCByZWdpb24gPT09IFwiYm90dG9tTWlkZGxlXCIgfHxcclxuICAgICAgcmVnaW9uID09PSBcImxlZnRNaWRkbGVcIiB8fCByZWdpb24gPT09IFwicmlnaHRNaWRkbGVcIikge1xyXG4gICAgY29sbGlzaW9uID0gaGl0VGVzdFJlY3RhbmdsZShjMSwgcjEsIGdsb2JhbCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGxldCBwb2ludCA9IHt9O1xyXG5cclxuICAgIHN3aXRjaCAocmVnaW9uKSB7XHJcbiAgICBjYXNlIFwidG9wTGVmdFwiOlxyXG4gICAgICBwb2ludC54ID0gcjF4O1xyXG4gICAgICBwb2ludC55ID0gcjF5O1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgXCJ0b3BSaWdodFwiOlxyXG4gICAgICBwb2ludC54ID0gcjF4ICsgcjEud2lkdGg7XHJcbiAgICAgIHBvaW50LnkgPSByMXk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSBcImJvdHRvbUxlZnRcIjpcclxuICAgICAgcG9pbnQueCA9IHIxeDtcclxuICAgICAgcG9pbnQueSA9IHIxeSArIHIxLmhlaWdodDtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwiYm90dG9tUmlnaHRcIjpcclxuICAgICAgcG9pbnQueCA9IHIxeCArIHIxLndpZHRoO1xyXG4gICAgICBwb2ludC55ID0gcjF5ICsgcjEuaGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIGNvbGxpc2lvbiA9IGhpdFRlc3RDaXJjbGVQb2ludChjMSwgcG9pbnQsIGdsb2JhbCk7XHJcbiAgfVxyXG5cclxuICBpZiAoY29sbGlzaW9uKSB7XHJcbiAgICByZXR1cm4gcmVnaW9uO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gY29sbGlzaW9uO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBoaXRUZXN0Q2lyY2xlUG9pbnQoYzEsIHBvaW50LCBnbG9iYWwgPSBmYWxzZSkge1xyXG4gIHBvaW50LmRpYW1ldGVyID0gMTtcclxuICBwb2ludC5yYWRpdXMgPSAwLjU7XHJcbiAgcG9pbnQuY2VudGVyWCA9IHBvaW50Lng7XHJcbiAgcG9pbnQuY2VudGVyWSA9IHBvaW50Lnk7XHJcbiAgcG9pbnQuZ3ggPSBwb2ludC54O1xyXG4gIHBvaW50Lmd5ID0gcG9pbnQueTtcclxuICByZXR1cm4gaGl0VGVzdENpcmNsZShjMSwgcG9pbnQsIGdsb2JhbCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjaXJjbGVSZWN0YW5nbGVDb2xsaXNpb24oYzEsIHIxLCBib3VuY2UgPSBmYWxzZSwgZ2xvYmFsID0gZmFsc2UpIHtcclxuICBsZXQgcmVnaW9uLCBjb2xsaXNpb24sIGMxeCwgYzF5LCByMXgsIHIxeTtcclxuXHJcbiAgaWYgKGdsb2JhbCkge1xyXG4gICAgYzF4ID0gYzEuZ3g7XHJcbiAgICBjMXkgPSBjMS5neTtcclxuICAgIHIxeCA9IHIxLmd4O1xyXG4gICAgcjF5ID0gcjEuZ3k7XHJcbiAgfSBlbHNlIHtcclxuICAgIGMxeCA9IGMxLng7XHJcbiAgICBjMXkgPSBjMS55O1xyXG4gICAgcjF4ID0gcjEueDtcclxuICAgIHIxeSA9IHIxLnk7XHJcbiAgfVxyXG5cclxuICBpZiAoYzF5IDwgcjF5IC0gcjEuaGFsZkhlaWdodCkge1xyXG4gICAgaWYgKGMxeCA8IHIxeCAtIDEgLSByMS5oYWxmV2lkdGgpIHtcclxuICAgICAgcmVnaW9uID0gXCJ0b3BMZWZ0XCI7XHJcbiAgICB9IGVsc2UgaWYgKGMxeCA+IHIxeCArIDEgKyByMS5oYWxmV2lkdGgpIHtcclxuICAgICAgcmVnaW9uID0gXCJ0b3BSaWdodFwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVnaW9uID0gXCJ0b3BNaWRkbGVcIjtcclxuICAgIH1cclxuICB9IGVsc2UgaWYgKGMxeSA+IHIxeSArIHIxLmhhbGZIZWlnaHQpIHtcclxuICAgIGlmIChjMXggPCByMXggLSAxIC0gcjEuaGFsZldpZHRoKSB7XHJcbiAgICAgIHJlZ2lvbiA9IFwiYm90dG9tTGVmdFwiO1xyXG4gICAgfSBlbHNlIGlmIChjMXggPiByMXggKyAxICsgcjEuaGFsZldpZHRoKSB7XHJcbiAgICAgIHJlZ2lvbiA9IFwiYm90dG9tUmlnaHRcIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlZ2lvbiA9IFwiYm90dG9tTWlkZGxlXCI7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIGlmIChjMXggPCByMXggLSByMS5oYWxmV2lkdGgpIHtcclxuICAgICAgcmVnaW9uID0gXCJsZWZ0TWlkZGxlXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZWdpb24gPSBcInJpZ2h0TWlkZGxlXCI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpZiAocmVnaW9uID09PSBcInRvcE1pZGRsZVwiIHx8IHJlZ2lvbiA9PT0gXCJib3R0b21NaWRkbGVcIiB8fFxyXG4gICAgICByZWdpb24gPT09IFwibGVmdE1pZGRsZVwiIHx8IHJlZ2lvbiA9PT0gXCJyaWdodE1pZGRsZVwiKSB7XHJcbiAgICBjb2xsaXNpb24gPSByZWN0YW5nbGVDb2xsaXNpb24oYzEsIHIxLCBib3VuY2UsIGdsb2JhbCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGxldCBwb2ludCA9IHt9O1xyXG5cclxuICAgIHN3aXRjaCAocmVnaW9uKSB7XHJcbiAgICAgIGNhc2UgXCJ0b3BMZWZ0XCI6XHJcbiAgICAgICAgcG9pbnQueCA9IHIxeDtcclxuICAgICAgICBwb2ludC55ID0gcjF5O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFwidG9wUmlnaHRcIjpcclxuICAgICAgICBwb2ludC54ID0gcjF4ICsgcjEud2lkdGg7XHJcbiAgICAgICAgcG9pbnQueSA9IHIxeTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBcImJvdHRvbUxlZnRcIjpcclxuICAgICAgICBwb2ludC54ID0gcjF4O1xyXG4gICAgICAgIHBvaW50LnkgPSByMXkgKyByMS5oZWlnaHQ7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgXCJib3R0b21SaWdodFwiOlxyXG4gICAgICAgIHBvaW50LnggPSByMXggKyByMS53aWR0aDtcclxuICAgICAgICBwb2ludC55ID0gcjF5ICsgcjEuaGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIGNvbGxpc2lvbiA9IGNpcmNsZVBvaW50Q29sbGlzaW9uKGMxLCBwb2ludCwgYm91bmNlLCBnbG9iYWwpO1xyXG4gIH1cclxuXHJcbiAgaWYgKGNvbGxpc2lvbikge1xyXG4gICAgcmV0dXJuIHJlZ2lvbjtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGNvbGxpc2lvbjtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjaXJjbGVQb2ludENvbGxpc2lvbihjMSwgcG9pbnQsIGJvdW5jZSA9IGZhbHNlLCBnbG9iYWwgPSBmYWxzZSkge1xyXG4gIHBvaW50LmRpYW1ldGVyID0gMTtcclxuICBwb2ludC5yYWRpdXMgPSAwLjU7XHJcbiAgcG9pbnQuY2VudGVyWCA9IHBvaW50Lng7XHJcbiAgcG9pbnQuY2VudGVyWSA9IHBvaW50Lnk7XHJcbiAgcG9pbnQuZ3ggPSBwb2ludC54O1xyXG4gIHBvaW50Lmd5ID0gcG9pbnQueTtcclxuICByZXR1cm4gY2lyY2xlQ29sbGlzaW9uKGMxLCBwb2ludCwgYm91bmNlLCBnbG9iYWwpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBib3VuY2VPZmZTdXJmYWNlKG8sIHMpIHtcclxuICBsZXQgZHAxLCBkcDIsXHJcbiAgICBwMSA9IHt9LFxyXG4gICAgcDIgPSB7fSxcclxuICAgIGJvdW5jZSA9IHt9LFxyXG4gICAgbWFzcyA9IG8ubWFzcyB8fCAxO1xyXG5cclxuICBzLmx4ID0gcy55O1xyXG4gIHMubHkgPSAtcy54O1xyXG5cclxuICBzLm1hZ25pdHVkZSA9IE1hdGguc3FydChzLnggKiBzLnggKyBzLnkgKiBzLnkpO1xyXG4gIHMuZHggPSBzLnggLyBzLm1hZ25pdHVkZTtcclxuICBzLmR5ID0gcy55IC8gcy5tYWduaXR1ZGU7XHJcbiAgZHAxID0gby52eCAqIHMuZHggKyBvLnZ5ICogcy5keTtcclxuXHJcbiAgcDEudnggPSBkcDEgKiBzLmR4O1xyXG4gIHAxLnZ5ID0gZHAxICogcy5keTtcclxuXHJcbiAgZHAyID0gby52eCAqIChzLmx4IC8gcy5tYWduaXR1ZGUpICsgby52eSAqIChzLmx5IC8gcy5tYWduaXR1ZGUpO1xyXG5cclxuICBwMi52eCA9IGRwMiAqIChzLmx4IC8gcy5tYWduaXR1ZGUpO1xyXG4gIHAyLnZ5ID0gZHAyICogKHMubHkgLyBzLm1hZ25pdHVkZSk7XHJcblxyXG4gIHAyLnZ4ICo9IC0xO1xyXG4gIHAyLnZ5ICo9IC0xO1xyXG5cclxuICBib3VuY2UueCA9IHAxLnZ4ICsgcDIudng7XHJcbiAgYm91bmNlLnkgPSBwMS52eSArIHAyLnZ5O1xyXG5cclxuICBvLnZ4ID0gYm91bmNlLnggLyBtYXNzO1xyXG4gIG8udnkgPSBib3VuY2UueSAvIG1hc3M7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBoaXQoYSwgYiwgcmVhY3QgPSBmYWxzZSwgYm91bmNlID0gZmFsc2UsIGdsb2JhbCwgZXh0cmEgPSB1bmRlZmluZWQpIHtcclxuICBsZXQgY29sbGlzaW9uLFxyXG4gICAgICBhSXNBU3ByaXRlID0gYS5wYXJlbnQgIT09IHVuZGVmaW5lZCxcclxuICAgICAgYklzQVNwcml0ZSA9IGIucGFyZW50ICE9PSB1bmRlZmluZWQ7XHJcblxyXG4gIGlmIChhSXNBU3ByaXRlICYmIGIgaW5zdGFuY2VvZiBBcnJheSB8fCBiSXNBU3ByaXRlICYmIGEgaW5zdGFuY2VvZiBBcnJheSkge1xyXG4gICAgc3ByaXRlVnNBcnJheSgpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjb2xsaXNpb24gPSBmaW5kQ29sbGlzaW9uVHlwZShhLCBiKTtcclxuICAgIGlmIChjb2xsaXNpb24gJiYgZXh0cmEpIGV4dHJhKGNvbGxpc2lvbik7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gY29sbGlzaW9uO1xyXG5cclxuICBmdW5jdGlvbiBmaW5kQ29sbGlzaW9uVHlwZShhLCBiKSB7XHJcbiAgICBsZXQgYUlzQVNwcml0ZSA9IGEucGFyZW50ICE9PSB1bmRlZmluZWQ7XHJcbiAgICBsZXQgYklzQVNwcml0ZSA9IGIucGFyZW50ICE9PSB1bmRlZmluZWQ7XHJcblxyXG4gICAgaWYgKGFJc0FTcHJpdGUgJiYgYklzQVNwcml0ZSkge1xyXG4gICAgICBpZiAoYS5kaWFtZXRlciAmJiBiLmRpYW1ldGVyKSB7XHJcbiAgICAgICAgcmV0dXJuIGNpcmNsZVZzQ2lyY2xlKGEsIGIpO1xyXG4gICAgICB9IGVsc2UgaWYgKGEuZGlhbWV0ZXIgJiYgIWIuZGlhbWV0ZXIpIHtcclxuICAgICAgICByZXR1cm4gY2lyY2xlVnNSZWN0YW5nbGUoYSwgYik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHJlY3RhbmdsZVZzUmVjdGFuZ2xlKGEsIGIpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKGJJc0FTcHJpdGUgJiYgIShhLnggPT09IHVuZGVmaW5lZCkgJiYgIShhLnkgPT09IHVuZGVmaW5lZCkpIHtcclxuICAgICAgcmV0dXJuIGhpdFRlc3RQb2ludChhLCBiKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgJHthfSBhbmQgJHtifSBjYW5ub3QgYmUgdXNlIHRvZ2V0aGVyIGluIGEgY29sbGlzaW9uIHRlc3QuJ2ApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc3ByaXRlVnNBcnJheSgpIHtcclxuICAgIGlmIChhIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgbGV0IFthLCBiXSA9IFtiLCBhXTtcclxuICAgIH1cclxuICAgIGZvciAobGV0IGkgPSBiLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICAgIGxldCBzcHJpdGUgPSBiW2ldO1xyXG4gICAgICBjb2xsaXNpb24gPSBmaW5kQ29sbGlzaW9uVHlwZShhLCBzcHJpdGUpO1xyXG4gICAgICBpZiAoY29sbGlzaW9uICYmIGV4dHJhKSBleHRyYShjb2xsaXNpb24sIHNwcml0ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjaXJjbGVWc0NpcmNsZShhLCBiKSB7XHJcbiAgICBpZiAoIXJlYWN0KSB7XHJcbiAgICAgIHJldHVybiBoaXRUZXN0Q2lyY2xlKGEsIGIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKGEudnggKyBhLnZ5ICE9PSAwICYmIGIudnggKyBiLnZ5ICE9PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIG1vdmluZ0NpcmNsZUNvbGxpc2lvbihhLCBiLCBnbG9iYWwpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBjaXJjbGVDb2xsaXNpb24oYSwgYiwgYm91bmNlLCBnbG9iYWwpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZWN0YW5nbGVWc1JlY3RhbmdsZShhLCBiKSB7XHJcbiAgICBpZiAoIXJlYWN0KSB7XHJcbiAgICAgIHJldHVybiBoaXRUZXN0UmVjdGFuZ2xlKGEsIGIsIGdsb2JhbCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gcmVjdGFuZ2xlQ29sbGlzaW9uKGEsIGIsIGJvdW5jZSwgZ2xvYmFsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNpcmNsZVZzUmVjdGFuZ2xlKGEsIGIpIHtcclxuICAgIGlmICghcmVhY3QpIHtcclxuICAgICAgcmV0dXJuIGhpdFRlc3RDaXJjbGVSZWN0YW5nbGUoYSwgYiwgZ2xvYmFsKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBjaXJjbGVSZWN0YW5nbGVDb2xsaXNpb24oYSwgYiwgYm91bmNlLCBnbG9iYWwpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gTmF0aXZlIE9iamVjdCBleHRlbnNpb25zXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuTnVtYmVyLnByb3RvdHlwZS5tYXAgPSBmdW5jdGlvbihpc3RhcnQsIGlzdG9wLCBvc3RhcnQsIG9zdG9wKSB7XHJcbiAgcmV0dXJuIG9zdGFydCArIChvc3RvcCAtIG9zdGFydCkgKiAoKHRoaXMgLSBpc3RhcnQpIC8gKGlzdG9wIC0gaXN0YXJ0KSk7XHJcbn07XHJcblxyXG5OdW1iZXIucHJvdG90eXBlLmxpbWl0ID0gZnVuY3Rpb24obWluLCBtYXgpIHtcclxuICByZXR1cm4gTWF0aC5taW4obWF4LCBNYXRoLm1heChtaW4sIHRoaXMpKTtcclxufTtcclxuXHJcbk51bWJlci5wcm90b3R5cGUucm91bmQgPSBmdW5jdGlvbihwcmVjaXNpb24pIHtcclxuICBwcmVjaXNpb24gPSBNYXRoLnBvdygxMCwgcHJlY2lzaW9uIHx8IDApO1xyXG4gIHJldHVybiBNYXRoLnJvdW5kKHRoaXMgKiBwcmVjaXNpb24pIC8gcHJlY2lzaW9uO1xyXG59O1xyXG5cclxuTnVtYmVyLnByb3RvdHlwZS50b0ludCA9IGZ1bmN0aW9uKCkge1xyXG4gIHJldHVybiAodGhpcyB8IDApO1xyXG59O1xyXG5cclxuTnVtYmVyLnByb3RvdHlwZS50b1JhZCA9IGZ1bmN0aW9uKCkge1xyXG4gIHJldHVybiAodGhpcyAvIDE4MCkgKiBNYXRoLlBJO1xyXG59O1xyXG5cclxuTnVtYmVyLnByb3RvdHlwZS50b0RlZyA9IGZ1bmN0aW9uKCkge1xyXG4gIHJldHVybiAodGhpcyAqIDE4MCkgLyBNYXRoLlBJO1xyXG59O1xyXG5cclxuQXJyYXkucHJvdG90eXBlLmVyYXNlID0gZnVuY3Rpb24oaXRlbSkge1xyXG4gIGZvciAobGV0IGkgPSB0aGlzLmxlbmd0aDsgaS0tOykge1xyXG4gICAgaWYgKHRoaXNbaV0gPT0gaXRlbSkge1xyXG4gICAgICB0aGlzLnNwbGljZShpLCAxKTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG5BcnJheS5wcm90b3R5cGUuaGFzID0gZnVuY3Rpb24oaXRlbSl7XHJcbiAgcmV0dXJuICh0aGlzLmluZGV4T2YoaXRlbSkgIT09IC0xKTtcclxufTtcclxuXHJcbkFycmF5LnByb3RvdHlwZS5yYW5kb20gPSBmdW5jdGlvbigpIHtcclxuICByZXR1cm4gdGhpc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLmxlbmd0aCldO1xyXG59O1xyXG5cclxuQXJyYXkucHJvdG90eXBlLnNodWZmbGUgPSBmdW5jdGlvbigpIHtcclxuICBmb3IgKGxldCBqLCB4LCBpID0gdGhpcy5sZW5ndGg7IGk7KSB7XHJcbiAgICBqID0gcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIGkpO1xyXG4gICAgeCA9IHRoaXNbLS1pXTtcclxuICAgIHRoaXNbaV0gPSB0aGlzW2pdO1xyXG4gICAgdGhpc1tqXSA9IHg7XHJcbiAgfVxyXG4gIHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuKGZ1bmN0aW9uKHdpbmRvdykge1xyXG4gIGxldCBpZEluZGV4ID0gMDtcclxuXHJcbiAgdG9wLiQkID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcclxuICAgIHJldHVybiBzZWxlY3Rvci5jaGFyQXQoMCkgPT0gJyMnID9cclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc2VsZWN0b3Iuc3Vic3RyKDEpKSA6XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKHNlbGVjdG9yKTtcclxuICB9O1xyXG5cclxuICB0b3AuJCRuZXcgPSBmdW5jdGlvbihuYW1lKSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKTtcclxuICB9O1xyXG5cclxuICB0b3AuXyA9IHtcclxuICAgIGV4dGVuZDogZnVuY3Rpb24oZGVzdCA9IHt9LCBzb3VyY2UpIHtcclxuICAgICAgaWYgKCFzb3VyY2UpIHJldHVybiBkZXN0O1xyXG4gICAgICBmb3IgKGxldCBwcm9wIGluIHNvdXJjZSkge1xyXG4gICAgICAgIGRlc3RbcHJvcF0gPSBzb3VyY2VbcHJvcF07XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGRlc3Q7XHJcbiAgICB9LFxyXG5cclxuICAgIGNsb25lOiBmdW5jdGlvbihvYmopIHtcclxuICAgICAgcmV0dXJuIF8uZXh0ZW5kKHt9LCBvYmopO1xyXG4gICAgfSxcclxuXHJcbiAgICBjb3B5OiBmdW5jdGlvbihvYmopIHtcclxuICAgICAgaWYgKCFvYmogfHwgdHlwZW9mKG9iaikgIT0gJ29iamVjdCcgfHxcclxuICAgICAgICBvYmogaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICAgIH0gZWxzZSBpZiAob2JqIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgICBsZXQgYyA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gb2JqLmxlbmd0aDsgaSA8IGw7ICsraSkge1xyXG4gICAgICAgICAgY1tpXSA9IF8uY29weShvYmpbaV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBsZXQgYyA9IHt9O1xyXG4gICAgICAgIGZvciAobGV0IGkgaW4gb2JqKSB7XHJcbiAgICAgICAgICBjW2ldID0gXy5jb3B5KG9ialtpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIGRlZmF1bHRzOiBmdW5jdGlvbihkZXN0ID0ge30sIHNvdXJjZSkge1xyXG4gICAgICBpZiAoIXNvdXJjZSkgcmV0dXJuIGRlc3Q7XHJcbiAgICAgIGZvciAobGV0IHByb3AgaW4gc291cmNlKSB7XHJcbiAgICAgICAgaWYgKGRlc3RbcHJvcF0gPT09IHZvaWQgMCkge1xyXG4gICAgICAgICAgZGVzdFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGRlc3Q7XHJcbiAgICB9LFxyXG5cclxuICAgIG1vZGlmeTogZnVuY3Rpb24oZGVzdCA9IHt9LCBzb3VyY2UpIHtcclxuICAgICAgaWYgKCFzb3VyY2UpIHJldHVybiBkZXN0O1xyXG4gICAgICBmb3IgKGxldCBwcm9wIGluIHNvdXJjZSkge1xyXG4gICAgICAgIGlmICghKGRlc3RbcHJvcF0gPT09IHZvaWQgMCkpIHtcclxuICAgICAgICAgIGRlc3RbcHJvcF0gPSBzb3VyY2VbcHJvcF07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBkZXN0O1xyXG4gICAgfSxcclxuXHJcbiAgICBoYXM6IGZ1bmN0aW9uKG9iaiwga2V5KSB7XHJcbiAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KG9iaiwga2V5KTtcclxuICAgIH0sXHJcblxyXG4gICAgaXNTdHJpbmc6IGZ1bmN0aW9uKG9iaikge1xyXG4gICAgICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gJ3N0cmluZyc7XHJcbiAgICB9LFxyXG5cclxuICAgIGlzTnVtYmVyOiBmdW5jdGlvbihvYmopIHtcclxuICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBOdW1iZXJdJztcclxuICAgIH0sXHJcblxyXG4gICAgaXNGdW5jdGlvbjogZnVuY3Rpb24ob2JqKSB7XHJcbiAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcclxuICAgIH0sXHJcblxyXG4gICAgaXNPYmplY3Q6IGZ1bmN0aW9uKG9iaikge1xyXG4gICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IE9iamVjdF0nO1xyXG4gICAgfSxcclxuXHJcbiAgICBpc0FycmF5OiBmdW5jdGlvbihvYmopIHtcclxuICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBBcnJheV0nO1xyXG4gICAgfSxcclxuXHJcbiAgICBpc1VuZGVmaW5lZDogZnVuY3Rpb24ob2JqKSB7XHJcbiAgICAgIHJldHVybiBvYmogPT09IHZvaWQgMDtcclxuICAgIH0sXHJcblxyXG4gICAgcG9wUHJvcGVydHk6IGZ1bmN0aW9uKG9iaiwgcHJvcGVydHkpIHtcclxuICAgICAgbGV0IHZhbCA9IG9ialtwcm9wZXJ0eV07XHJcbiAgICAgIGRlbGV0ZSBvYmpbcHJvcGVydHldO1xyXG4gICAgICByZXR1cm4gdmFsO1xyXG4gICAgfSxcclxuXHJcbiAgICBlYWNoOiBmdW5jdGlvbihvYmosIGl0ZXJhdG9yLCBjb250ZXh0KSB7XHJcbiAgICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuO1xyXG4gICAgICBpZiAob2JqLmZvckVhY2gpIHtcclxuICAgICAgICBvYmouZm9yRWFjaChpdGVyYXRvciwgY29udGV4dCk7XHJcbiAgICAgIH0gZWxzZSBpZiAob2JqLmxlbmd0aCA9PT0gK29iai5sZW5ndGgpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyArK2kpIHtcclxuICAgICAgICAgIGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgb2JqW2ldLCBpLCBvYmopO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAgICBpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtrZXldLCBrZXksIG9iaik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIGludm9rZTogZnVuY3Rpb24oYXJyLCBwcm9wZXJ0eSwgYXJnMSwgYXJnMikge1xyXG4gICAgICBpZiAoYXJyID09IG51bGwpIHJldHVybjtcclxuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBhcnIubGVuZ3RoOyBpIDwgbDsgKytpKSB7XHJcbiAgICAgICAgYXJyW2ldW3Byb3BlcnR5XShhcmcxLCBhcmcyKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBkZXRlY3Q6IGZ1bmN0aW9uKG9iaiwgaXRlcmF0b3IsIGNvbnRleHQsIGFyZzEsIGFyZzIpIHtcclxuICAgICAgbGV0IHJlc3VsdDtcclxuICAgICAgaWYgKG9iaiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgIGlmIChvYmoubGVuZ3RoID09PSArb2JqLmxlbmd0aCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gb2JqLmxlbmd0aDsgaSA8IGw7ICsraSkge1xyXG4gICAgICAgICAgcmVzdWx0ID0gaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpbaV0sIGksIGFyZzEsIGFyZzIpO1xyXG4gICAgICAgICAgaWYgKHJlc3VsdCkgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZvciAobGV0IGtleSBpbiBvYmopIHtcclxuICAgICAgICAgIHJlc3VsdCA9IGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgb2JqW2tleV0sIGtleSwgYXJnMSwgYXJnMik7XHJcbiAgICAgICAgICBpZiAocmVzdWx0KSByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgZmlsdGVyOiBmdW5jdGlvbihvYmosIGl0ZXJhdG9yLCBjb250ZXh0LCBhcmcxLCBhcmcyKSB7XHJcbiAgICAgIGxldCByZXN1bHQgPSBbXTtcclxuICAgICAgbGV0IGl0ZW07XHJcbiAgICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICBpZiAob2JqLmxlbmd0aCA9PT0gK29iai5sZW5ndGgpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyArK2kpIHtcclxuICAgICAgICAgIGl0ZW0gPSBpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtpXSwgaSwgYXJnMSwgYXJnMik7XHJcbiAgICAgICAgICBpZiAoaXRlbSkgcmVzdWx0LnB1c2goaXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZm9yIChsZXQga2V5IGluIG9iaikge1xyXG4gICAgICAgICAgcmVzdWx0ID0gaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpba2V5XSwga2V5LCBhcmcxLCBhcmcyKTtcclxuICAgICAgICAgIGlmIChpdGVtKSByZXN1bHQucHVzaChpdGVtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBtYXA6IGZ1bmN0aW9uKG9iaiwgaXRlcmF0b3IsIGNvbnRleHQpIHtcclxuICAgICAgbGV0IHJlc3VsdHMgPSBbXTtcclxuICAgICAgaWYgKG9iaiA9PSBudWxsKSByZXR1cm4gcmVzdWx0cztcclxuICAgICAgaWYgKCFfLmlzTnVtYmVyKG9iaikgJiYgb2JqLm1hcCkgcmV0dXJuIG9iai5tYXAoaXRlcmF0b3IsIGNvbnRleHQpO1xyXG4gICAgICBfLmVhY2gob2JqLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGxpc3QpIHtcclxuICAgICAgICByZXN1bHRzW3Jlc3VsdHMubGVuZ3RoXSA9IGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4LCBsaXN0KTtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChvYmoubGVuZ3RoID09PSArb2JqLmxlbmd0aCkgcmVzdWx0cy5sZW5ndGggPSBvYmoubGVuZ3RoO1xyXG4gICAgICByZXR1cm4gcmVzdWx0cztcclxuICAgIH0sXHJcblxyXG4gICAgdW5pcTogZnVuY3Rpb24oYXJyKSB7XHJcbiAgICAgIGFyciA9IGFyci5zbGljZSgpLnNvcnQoKTtcclxuICAgICAgbGV0IG91dHB1dCA9IFtdO1xyXG5cclxuICAgICAgbGV0IGxhc3QgPSBudWxsO1xyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgIGlmIChhcnJbaV0gIT0gdm9pZCAwICYmIGxhc3QgIT09IGFycltpXSlcclxuICAgICAgICAgIG91dHB1dC5wdXNoKGFycltpXSk7XHJcbiAgICAgICAgbGFzdCA9IGFycltpXTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gb3V0cHV0O1xyXG4gICAgfSxcclxuXHJcbiAgICBrZXlzOiBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbihvYmopIHtcclxuICAgICAgaWYgKF8uaXNPYmplY3Qob2JqKSlcclxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIG9iamVjdCcpO1xyXG4gICAgICBsZXQga2V5cyA9IFtdO1xyXG4gICAgICBmb3IgKGxldCBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAgaWYgKF8uaGFzKG9iaiwga2V5KSkga2V5c1trZXlzLmxlbmd0aF0gPSBrZXk7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgcmFuZ2U6IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwID0gMSkge1xyXG4gICAgICBsZXQgbGVuID0gTWF0aC5tYXgoTWF0aC5jZWlsKE1hdGguYWJzKHN0b3AgLSBzdGFydCkgLyBzdGVwKSwgMCk7XHJcbiAgICAgIGxldCBpZHggPSAwO1xyXG4gICAgICBsZXQgcmFuZ2UgPSBuZXcgQXJyYXkobGVuKTtcclxuXHJcbiAgICAgIHdoaWxlIChpZHggPCBsZW4pIHtcclxuICAgICAgICByYW5nZVtpZHgrK10gPSBzdGFydDtcclxuICAgICAgICBpZiAoc3RhcnQgPiBzdG9wKVxyXG4gICAgICAgICAgc3RhcnQgLT0gc3RlcDtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICBzdGFydCArPSBzdGVwO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiByYW5nZTtcclxuICAgIH0sXHJcblxyXG4gICAgdW5pcXVlSWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICByZXR1cm4gaWRJbmRleCsrO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG59KSh3aW5kb3cpO1xyXG5cclxuXHJcbmZ1bmN0aW9uIG5vcm1hbGl6ZUFyZyhhcmcpIHtcclxuICBpZiAoXy5pc1N0cmluZyhhcmcpKVxyXG4gICAgYXJnID0gYXJnLnJlcGxhY2UoL1xccysvZywgJycpLnNwbGl0KCcsJyk7XHJcbiAgaWYgKCFfLmlzQXJyYXkoYXJnKSlcclxuICAgIGFyZyA9IFthcmddO1xyXG4gIHJldHVybiBhcmc7XHJcbn1cclxuXHJcbmV4cG9ydCB7XHJcbiAgbm9ybWFsaXplQXJnXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7fTtcclxuXHJcblxyXG5jb25zb2xlLmxvZygnbG9hZCBjb21tb24gbW9kdWxlJyk7XHJcbiIsImltcG9ydCBEaXNwbGF5T2JqZWN0IGZyb20gJy4vRGlzcGxheU9iamVjdC5qcyc7XHJcbmltcG9ydCB7c3RhZ2V9IGZyb20gJy4vU3RhZ2UuanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJlY3RhbmdsZSBleHRlbmRzIERpc3BsYXlPYmplY3Qge1xyXG4gIGNvbnN0cnVjdG9yKHdpZHRoID0gMzIsIGhlaWdodCA9IDMyLFxyXG4gICAgICAgICAgICAgIGZpbGxTdHlsZSA9ICdncmF5Jywgc3Ryb2tlU3R5bGUgPSAnbm9uZScsXHJcbiAgICAgICAgICAgICAgbGluZVdpZHRoID0gMCxcclxuICAgICAgICAgICAgICB4ID0gMCwgeSA9IDApIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICB0aGlzLmZpbGxTdHlsZSA9IGZpbGxTdHlsZTtcclxuICAgIHRoaXMuc3Ryb2tlU3R5bGUgPSBzdHJva2VTdHlsZTtcclxuICAgIHRoaXMubGluZVdpZHRoID0gbGluZVdpZHRoO1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcblxyXG4gICAgdGhpcy5tYXNrID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoY3R4KSB7XHJcbiAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnN0cm9rZVN0eWxlO1xyXG4gICAgY3R4LmxpbmVXaWR0aCA9IHRoaXMubGluZVdpZHRoO1xyXG4gICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMuZmlsbFN0eWxlO1xyXG4gICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgY3R4LnJlY3QoXHJcbiAgICAgIC10aGlzLndpZHRoICogdGhpcy5waXZvdFgsXHJcbiAgICAgIC10aGlzLmhlaWdodCAqIHRoaXMucGl2b3RZLFxyXG4gICAgICB0aGlzLndpZHRoLFxyXG4gICAgICB0aGlzLmhlaWdodFxyXG4gICAgKTtcclxuICAgIGlmKHRoaXMuc3Ryb2tlU3R5bGUgIT09ICdub25lJykgY3R4LnN0cm9rZSgpO1xyXG4gICAgaWYodGhpcy5maWxsU3R5bGUgIT09ICdub25lJykgY3R4LmZpbGwoKTtcclxuICAgIGlmKHRoaXMubWFzayAmJiB0aGlzLm1hc2sgPT09IHRydWUpIGN0eC5jbGlwKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgUm91bmRlZFJlY3RhbmdsZSBleHRlbmRzIERpc3BsYXlPYmplY3Qge1xyXG4gIGNvbnN0cnVjdG9yKHdpZHRoID0gMzIsIGhlaWdodCA9IDMyLCByYWRpdXMgPSAzMCxcclxuICAgICAgICAgICAgICBmaWxsU3R5bGUgPSAnZ3JheScsIHN0cm9rZVN0eWxlID0gJ25vbmUnLFxyXG4gICAgICAgICAgICAgIGxpbmVXaWR0aCA9IDAsXHJcbiAgICAgICAgICAgICAgeCA9IDAsIHkgPSAwKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMud2lkdGggPSB3aWR0aDtcclxuICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgdGhpcy5yYWRpdXMgPSByYWRpdXM7XHJcbiAgICB0aGlzLmZpbGxTdHlsZSA9IGZpbGxTdHlsZTtcclxuICAgIHRoaXMuc3Ryb2tlU3R5bGUgPSBzdHJva2VTdHlsZTtcclxuICAgIHRoaXMubGluZVdpZHRoID0gbGluZVdpZHRoO1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcblxyXG4gICAgdGhpcy5tYXNrID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoY3R4KSB7XHJcbiAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnN0cm9rZVN0eWxlO1xyXG4gICAgY3R4LmxpbmVXaWR0aCA9IHRoaXMubGluZVdpZHRoO1xyXG4gICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMuZmlsbFN0eWxlO1xyXG4gICAgY3R4LmJlZ2luUGF0aCgpO1xyXG5cclxuICAgIGxldCB4ID0gLXRoaXMud2lkdGggKiB0aGlzLnBpdm90WDtcclxuICAgIGxldCB5ID0gLXRoaXMuaGVpZ2h0ICogdGhpcy5waXZvdFk7XHJcbiAgICBsZXQgd2lkdGggPSB0aGlzLndpZHRoO1xyXG4gICAgbGV0IGhlaWdodCA9IHRoaXMuaGVpZ2h0O1xyXG4gICAgbGV0IHJhZGl1cyA9IHRoaXMucmFkaXVzO1xyXG4gICAgY3R4LmFyYyh4ICsgcmFkaXVzLCB5ICsgcmFkaXVzLCByYWRpdXMsIE1hdGguUEksIE1hdGguUEkgKiAzIC8gMik7ICAgXHJcbiAgICBjdHgubGluZVRvKHdpZHRoIC0gcmFkaXVzICsgeCwgeSk7ICAgXHJcbiAgICBjdHguYXJjKHdpZHRoIC0gcmFkaXVzICsgeCwgcmFkaXVzICsgeSwgcmFkaXVzLCBNYXRoLlBJICogMyAvIDIsIE1hdGguUEkgKiAyKTsgICBcclxuICAgIGN0eC5saW5lVG8od2lkdGggKyB4LCBoZWlnaHQgKyB5IC0gcmFkaXVzKTsgICBcclxuICAgIGN0eC5hcmMod2lkdGggLSByYWRpdXMgKyB4LCBoZWlnaHQgLSByYWRpdXMgKyB5LCByYWRpdXMsIDAsIE1hdGguUEkgKiAxIC8gMik7ICAgXHJcbiAgICBjdHgubGluZVRvKHJhZGl1cyArIHgsIGhlaWdodCAreSk7ICAgXHJcbiAgICBjdHguYXJjKHJhZGl1cyArIHgsIGhlaWdodCAtIHJhZGl1cyArIHksIHJhZGl1cywgTWF0aC5QSSAqIDEgLyAyLCBNYXRoLlBJKTsgICBcclxuXHJcbiAgICBpZih0aGlzLnN0cm9rZVN0eWxlICE9PSAnbm9uZScpIGN0eC5zdHJva2UoKTtcclxuICAgIGlmKHRoaXMuZmlsbFN0eWxlICE9PSAnbm9uZScpIGN0eC5maWxsKCk7XHJcbiAgICBpZih0aGlzLm1hc2sgJiYgdGhpcy5tYXNrID09PSB0cnVlKSBjdHguY2xpcCgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlY3RhbmdsZSh3aWR0aCwgaGVpZ2h0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGxTdHlsZSwgc3Ryb2tlU3R5bGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZVdpZHRoLCB4LCB5KSB7XHJcbiAgbGV0IHNwcml0ZSA9IG5ldyBSZWN0YW5nbGUod2lkdGgsIGhlaWdodCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsU3R5bGUsIHN0cm9rZVN0eWxlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVXaWR0aCwgeCwgeSk7XHJcbiAgc3RhZ2UuYWRkQ2hpbGQoc3ByaXRlKTtcclxuICByZXR1cm4gc3ByaXRlO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ2lyY2xlIGV4dGVuZHMgRGlzcGxheU9iamVjdCB7XHJcbiAgY29uc3RydWN0b3IoZGlhbWV0ZXIgPSAzMixcclxuICAgICAgICAgICAgICBmaWxsU3R5bGUgPSAnZ3JheScsIHN0cm9rZVN0eWxlID0gJ25vbmUnLFxyXG4gICAgICAgICAgICAgIGxpbmVXaWR0aCA9IDAsXHJcbiAgICAgICAgICAgICAgeCA9IDAsIHkgPSAwKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMuY2lyY3VsYXIgPSB0cnVlO1xyXG5cclxuICAgIHRoaXMuZGlhbWV0ZXIgPSBkaWFtZXRlcjtcclxuICAgIHRoaXMuZmlsbFN0eWxlID0gZmlsbFN0eWxlO1xyXG4gICAgdGhpcy5zdHJva2VTdHlsZSA9IHN0cm9rZVN0eWxlO1xyXG4gICAgdGhpcy5saW5lV2lkdGggPSBsaW5lV2lkdGg7XHJcbiAgICB0aGlzLnggPSB4O1xyXG4gICAgdGhpcy55ID0geTtcclxuXHJcbiAgICB0aGlzLm1hc2sgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHJlbmRlcihjdHgpIHtcclxuICAgIGN0eC5zdHJva2VTdHlsZSA9IHRoaXMuc3Ryb2tlU3R5bGU7XHJcbiAgICBjdHgubGluZVdpZHRoID0gdGhpcy5saW5lV2lkdGg7XHJcbiAgICBjdHguZmlsbFN0eWxlID0gdGhpcy5maWxsU3R5bGU7XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKFxyXG4gICAgICB0aGlzLnJhZGl1cyArICgtdGhpcy5kaWFtZXRlciAqIHRoaXMucGl2b3RYKSxcclxuICAgICAgdGhpcy5yYWRpdXMgKyAoLXRoaXMuZGlhbWV0ZXIgKiB0aGlzLnBpdm90WSksXHJcbiAgICAgIHRoaXMucmFkaXVzLFxyXG4gICAgICAwLCAyICogTWF0aC5QSSxcclxuICAgICAgZmFsc2VcclxuICAgICk7XHJcbiAgICBpZih0aGlzLnN0cm9rZVN0eWxlICE9PSAnbm9uZScpIGN0eC5zdHJva2UoKTtcclxuICAgIGlmKHRoaXMuZmlsbFN0eWxlICE9PSAnbm9uZScpIGN0eC5maWxsKCk7XHJcbiAgICBpZih0aGlzLm1hc2sgJiYgdGhpcy5tYXNrID09PSB0cnVlKSBjdHguY2xpcCgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNpcmNsZShkaWFtZXRlcixcclxuICAgICAgICAgICAgICAgICAgICAgICBmaWxsU3R5bGUsIHN0cm9rZVN0eWxlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgIGxpbmVXaWR0aCxcclxuICAgICAgICAgICAgICAgICAgICAgICB4LCB5KXtcclxuICBsZXQgc3ByaXRlID0gbmV3IENpcmNsZShkaWFtZXRlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsU3R5bGUsIHN0cm9rZVN0eWxlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVXaWR0aCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB4LCB5KTtcclxuICBzdGFnZS5hZGRDaGlsZChzcHJpdGUpO1xyXG4gIHJldHVybiBzcHJpdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBMaW5lIGV4dGVuZHMgRGlzcGxheU9iamVjdHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHN0cm9rZVN0eWxlID0gJ25vbmUnLFxyXG4gICAgbGluZVdpZHRoID0gMCxcclxuICAgIGF4ID0gMCxcclxuICAgIGF5ID0gMCxcclxuICAgIGJ4ID0gMzIsXHJcbiAgICBieSA9IDMyXHJcbiAgKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMuc3Ryb2tlU3R5bGUgPSBzdHJva2VTdHlsZTtcclxuICAgIHRoaXMubGluZVdpZHRoID0gbGluZVdpZHRoO1xyXG4gICAgdGhpcy5heCA9IGF4O1xyXG4gICAgdGhpcy5heSA9IGF5O1xyXG4gICAgdGhpcy5ieCA9IGJ4O1xyXG4gICAgdGhpcy5ieSA9IGJ5O1xyXG5cclxuICAgIHRoaXMubGluZUpvaW4gPSAncm91bmQnO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKGN0eCkge1xyXG4gICAgY3R4LnN0cm9rZVN0eWxlID0gdGhpcy5zdHJva2VTdHlsZTtcclxuICAgIGN0eC5saW5lV2lkdGggPSB0aGlzLmxpbmVXaWR0aDtcclxuICAgIGN0eC5saW5lSm9pbiA9IHRoaXMubGluZUpvaW47XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHgubW92ZVRvKHRoaXMuYXgsIHRoaXMuYXkpO1xyXG4gICAgY3R4LmxpbmVUbyh0aGlzLmJ4LCB0aGlzLmJ5KTtcclxuICAgIGlmKHRoaXMuc3Ryb2tlU3R5bGUgIT09ICdub25lJykgY3R4LnN0cm9rZSgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGxpbmUoc3Ryb2tlU3R5bGUsIGxpbmVXaWR0aCxcclxuICAgICAgICAgICAgICAgICAgICAgYXgsIGF5LFxyXG4gICAgICAgICAgICAgICAgICAgICBieCwgYnkpIHtcclxuICBsZXQgc3ByaXRlID0gbmV3IExpbmUoc3Ryb2tlU3R5bGUsIGxpbmVXaWR0aCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXgsIGF5LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBieCwgYnkpO1xyXG4gIHN0YWdlLmFkZENoaWxkKHNwcml0ZSk7XHJcbiAgcmV0dXJuIHNwcml0ZTtcclxufVxyXG4iLCJpbXBvcnQgRGlzcGxheU9iamVjdCBmcm9tICcuL0Rpc3BsYXlPYmplY3QuanMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGtleXMgPSB7XHJcblx0J01PVVNFMSc6IC0xLFxyXG5cdCdNT1VTRTInOiAtMyxcclxuXHQnTVdIRUVMX1VQJzogLTQsXHJcblx0J01XSEVFTF9ET1dOJzogLTUsXHJcblx0XHJcblx0J0JBQ0tTUEFDRSc6IDgsXHJcblx0J1RBQic6IDksXHJcblx0J0VOVEVSJzogMTMsXHJcblx0J1BBVVNFJzogMTksXHJcblx0J0NBUFMnOiAyMCxcclxuXHQnRVNDJzogMjcsXHJcblx0J1NQQUNFJzogMzIsXHJcblx0J1BBR0VfVVAnOiAzMyxcclxuXHQnUEFHRV9ET1dOJzogMzQsXHJcblx0J0VORCc6IDM1LFxyXG5cdCdIT01FJzogMzYsXHJcblx0J0xFRlRfQVJST1cnOiAzNyxcclxuXHQnVVBfQVJST1cnOiAzOCxcclxuXHQnUklHSFRfQVJST1cnOiAzOSxcclxuXHQnRE9XTl9BUlJPVyc6IDQwLFxyXG5cdCdJTlNFUlQnOiA0NSxcclxuXHQnREVMRVRFJzogNDYsXHJcblx0J18wJzogNDgsXHJcblx0J18xJzogNDksXHJcblx0J18yJzogNTAsXHJcblx0J18zJzogNTEsXHJcblx0J180JzogNTIsXHJcblx0J181JzogNTMsXHJcblx0J182JzogNTQsXHJcblx0J183JzogNTUsXHJcblx0J184JzogNTYsXHJcblx0J185JzogNTcsXHJcblx0J0EnOiA2NSxcclxuXHQnQic6IDY2LFxyXG5cdCdDJzogNjcsXHJcblx0J0QnOiA2OCxcclxuXHQnRSc6IDY5LFxyXG5cdCdGJzogNzAsXHJcblx0J0cnOiA3MSxcclxuXHQnSCc6IDcyLFxyXG5cdCdJJzogNzMsXHJcblx0J0onOiA3NCxcclxuXHQnSyc6IDc1LFxyXG5cdCdMJzogNzYsXHJcblx0J00nOiA3NyxcclxuXHQnTic6IDc4LFxyXG5cdCdPJzogNzksXHJcblx0J1AnOiA4MCxcclxuXHQnUSc6IDgxLFxyXG5cdCdSJzogODIsXHJcblx0J1MnOiA4MyxcclxuXHQnVCc6IDg0LFxyXG5cdCdVJzogODUsXHJcblx0J1YnOiA4NixcclxuXHQnVyc6IDg3LFxyXG5cdCdYJzogODgsXHJcblx0J1knOiA4OSxcclxuXHQnWic6IDkwLFxyXG5cdCdOVU1QQURfMCc6IDk2LFxyXG5cdCdOVU1QQURfMSc6IDk3LFxyXG5cdCdOVU1QQURfMic6IDk4LFxyXG5cdCdOVU1QQURfMyc6IDk5LFxyXG5cdCdOVU1QQURfNCc6IDEwMCxcclxuXHQnTlVNUEFEXzUnOiAxMDEsXHJcblx0J05VTVBBRF82JzogMTAyLFxyXG5cdCdOVU1QQURfNyc6IDEwMyxcclxuXHQnTlVNUEFEXzgnOiAxMDQsXHJcblx0J05VTVBBRF85JzogMTA1LFxyXG5cdCdNVUxUSVBMWSc6IDEwNixcclxuXHQnQUREJzogMTA3LFxyXG5cdCdTVUJTVFJBQ1QnOiAxMDksXHJcblx0J0RFQ0lNQUwnOiAxMTAsXHJcblx0J0RJVklERSc6IDExMSxcclxuXHQnRjEnOiAxMTIsXHJcblx0J0YyJzogMTEzLFxyXG5cdCdGMyc6IDExNCxcclxuXHQnRjQnOiAxMTUsXHJcblx0J0Y1JzogMTE2LFxyXG5cdCdGNic6IDExNyxcclxuXHQnRjcnOiAxMTgsXHJcblx0J0Y4JzogMTE5LFxyXG5cdCdGOSc6IDEyMCxcclxuXHQnRjEwJzogMTIxLFxyXG5cdCdGMTEnOiAxMjIsXHJcblx0J0YxMic6IDEyMyxcclxuXHQnU0hJRlQnOiAxNixcclxuXHQnQ1RSTCc6IDE3LFxyXG5cdCdBTFQnOiAxOCxcclxuXHQnUExVUyc6IDE4NyxcclxuXHQnQ09NTUEnOiAxODgsXHJcblx0J01JTlVTJzogMTg5LFxyXG5cdCdQRVJJT0QnOiAxOTBcclxufTtcclxuXHJcbmZ1bmN0aW9uIHRlc3RIaXQoY3R4KSB7XHJcbiAgdHJ5e1xyXG4gICAgcmV0dXJuIGN0eC5nZXRJbWFnZURhdGEoMCwwLDEsMSkuZGF0YVszXSA+IDE7XHJcbiAgfSBjYXRjaChlKSB7XHJcbiAgICB0aHJvdyAnRXJyb3I6IHdoZW4gdGVzdEhpdCc7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgbGV0IHBvaW50ZXIgPSB1bmRlZmluZWQ7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbWFrZVBvaW50ZXIoZWxlbWVudCwgc2NhbGUgPSAxKSB7XHJcbiAgaWYocG9pbnRlcikge1xyXG4gICAgY29uc29sZS5lcnJvcigncG9pbnRlciBhbHJlYWR5IGluc3RhbnRpYXRlZCcpO1xyXG4gICAgcmV0dXJuIHBvaW50ZXI7IFxyXG4gIH1cclxuICBsZXQgX3BvaW50ZXIgPSB7XHJcbiAgICBlbGVtZW50OiBlbGVtZW50LFxyXG4gICAgc2NhbGU6IHNjYWxlLFxyXG4gICAgX3g6IDAsXHJcbiAgICBfeTogMCxcclxuICAgIHRhcHBlZFRpbWU6IDIwMCxcclxuXHJcbiAgICBnZXQgeCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3ggLyB0aGlzLnNjYWxlO1xyXG4gICAgfSxcclxuICAgIGdldCB5KCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5feSAvIHRoaXMuc2NhbGU7XHJcbiAgICB9LFxyXG5cclxuICAgIGdldCBjZW50ZXJYKCkge1xyXG4gICAgICByZXR1cm4gdGhpcy54O1xyXG4gICAgfSxcclxuICAgIGdldCBjZW50ZXJZKCkge1xyXG4gICAgICByZXR1cm4gdGhpcy55O1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXQgcG9zaXRpb24oKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgeDogdGhpcy54LFxyXG4gICAgICAgIHk6IHRoaXMueVxyXG4gICAgICB9O1xyXG4gICAgfSxcclxuXHJcbiAgICBpc0Rvd246IGZhbHNlLFxyXG4gICAgaXNVcDogdHJ1ZSxcclxuICAgIHRhcHBlZDogZmFsc2UsXHJcblxyXG4gICAgZG93blRpbWU6IDAsXHJcbiAgICBlbGFwc2VkVGltZTogMCxcclxuXHJcbiAgICBwcmVzczogdW5kZWZpbmVkLFxyXG4gICAgcmVsZWFzZTogdW5kZWZpbmVkLFxyXG4gICAgdGFwOiB1bmRlZmluZWQsXHJcblxyXG4gICAgZHJhZ1Nwcml0ZTogbnVsbCxcclxuICAgIGRyYWdPZmZzZXRYOiAwLFxyXG4gICAgZHJhZ09mZnNldFk6IDAsXHJcblxyXG4gICAgbW92ZUhhbmRsZXIoZXZlbnQpIHtcclxuICAgICAgbGV0IGVsZW1lbnQgPSBldmVudC50YXJnZXQ7XHJcbiAgICAgIHRoaXMuX3ggPSAoZXZlbnQucGFnZVggLSBlbGVtZW50Lm9mZnNldExlZnQpO1xyXG4gICAgICB0aGlzLl95ID0gKGV2ZW50LnBhZ2VZIC0gZWxlbWVudC5vZmZzZXRUb3ApO1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSxcclxuXHJcbiAgICB0b3VjaG1vdmVIYW5kbGVyKGV2ZW50KSB7XHJcbiAgICAgIGxldCBlbGVtZW50ID0gZXZlbnQudGFyZ2V0O1xyXG4gICAgICB0aGlzLl94ID0gKGV2ZW50LnRhcmdldFRvdWNoZXNbMF0ucGFnZVggLWVsZW1lbnQub2Zmc2V0TGVmdCk7XHJcbiAgICAgIHRoaXMuX3kgPSAoZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSAtZWxlbWVudC5vZmZzZXRUb3ApO1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSxcclxuXHJcbiAgICBkb3duSGFuZGxlcihldmVudCkge1xyXG4gICAgICB0aGlzLmlzRG93biA9IHRydWU7XHJcbiAgICAgIHRoaXMuaXNVcCA9IGZhbHNlO1xyXG4gICAgICB0aGlzLnRhcHBlZCA9IGZhbHNlO1xyXG4gICAgICB0aGlzLmRvd25UaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgaWYodGhpcy5wcmVzcylcclxuICAgICAgICB0aGlzLnByZXNzKCk7XHJcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9LFxyXG5cclxuICAgIHRvdWNoc3RhcnRIYW5kbGVyKGV2ZW50KSB7XHJcbiAgICAgIGxldCBlbGVtZW50ID0gZXZlbnQudGFyZ2V0O1xyXG4gICAgICB0aGlzLl94ID0gZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5wYWdlWCAtIGVsZW1lbnQub2Zmc2V0TGVmdDtcclxuICAgICAgdGhpcy5feSA9IGV2ZW50LnRhcmdldFRvdWNoZXNbMF0ucGFnZVkgLSBlbGVtZW50Lm9mZnNldFRvcDtcclxuXHJcbiAgICAgIHRoaXMuaXNEb3duID0gdHJ1ZTtcclxuICAgICAgdGhpcy5pc1VwID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuaXNEb3duID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuZG93blRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICBpZih0aGlzLnByZXNzKSB0aGlzLnByZXNzKCk7XHJcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9LFxyXG5cclxuICAgIHVwSGFuZGxlcihldmVudCkge1xyXG4gICAgICB0aGlzLmVsYXBzZWRUaW1lID0gTWF0aC5hYnModGhpcy5kb3duVGltZSAtIERhdGUubm93KCkpO1xyXG4gICAgICBpZih0aGlzLmVsYXBzZWRUaW1lIDw9IHRoaXMudGFwcGVkVGltZSAmJiB0aGlzLnRhcHBlZCA9PT0gZmFsc2UpIHtcclxuICAgICAgICB0aGlzLnRhcHBlZCA9IHRydWU7XHJcbiAgICAgICAgaWYodGhpcy50YXApIHRoaXMudGFwKCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5pc1VwID0gdHJ1ZTtcclxuICAgICAgdGhpcy5pc0Rvd24gPSBmYWxzZTtcclxuICAgICAgaWYodGhpcy5yZWxlYXNlKSB0aGlzLnJlbGVhc2UoKTtcclxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0sXHJcblxyXG4gICAgdG91Y2hlbmRIYW5kbGVyKGV2ZW50KSB7XHJcbiAgICAgIHRoaXMuZWxhcHNlZFRpbWUgPSBNYXRoLmFicyh0aGlzLmRvd25UaW1lIC0gRGF0ZS5ub3coKSk7XHJcbiAgICAgIGlmKHRoaXMuZWxhcHNlZFRpbWUgPD0gdGhpcy50YXBwZWRUaW1lICYmIHRoaXMudGFwcGVkID09PSBmYWxzZSkge1xyXG4gICAgICAgIHRoaXMudGFwcGVkID0gdHJ1ZTtcclxuICAgICAgICBpZih0aGlzLnRhcCkgdGhpcy50YXAoKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmlzVXAgPSB0cnVlO1xyXG4gICAgICB0aGlzLmlzRG93biA9IGZhbHNlO1xyXG4gICAgICBpZih0aGlzLnJlbGVhc2UpIHRoaXMucmVsZWFzZSgpO1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSxcclxuXHJcbiAgICAvLyBGSVhNRTog5aSa5bGC5Y+Y5o2i5rKh5aSE55CG5aW977yM5Y+v6IO96ZyA6KaBc3ByaXRl5L+d5oyB5LiA5Liq5Y+Y5o2i55+p6Zi1KOWFqOWxgCnmiY3og73ovr7liLAoIOWPguiAg++8mua4uOaIj+e8lueoi+aooeW8jyApXHJcbiAgICBoaXRUZXN0U3ByaXRlUGl4ZWwoc3ByaXRlKSB7XHJcbiAgICAgIGxldCBjdHggPSBEaXNwbGF5T2JqZWN0LmhpdFRlc3RDYW52YXMuY3R4O1xyXG4gICAgICAvLyBjdHguc2F2ZSgpO1xyXG4gICAgICBjdHguc2V0VHJhbnNmb3JtKDEsIDAsIDAsIDEsIC10aGlzLngsIC10aGlzLnkpO1xyXG4gICAgICAvLyBjdHgudHJhbnNmb3JtKDEsMCwwLDEsc3ByaXRlLngsc3ByaXRlLnkpO1xyXG4gICAgICBjdHgudHJhbnNsYXRlKFxyXG4gICAgICAgIHNwcml0ZS5neCArIChzcHJpdGUud2lkdGggKiBzcHJpdGUucGl2b3RYKSxcclxuICAgICAgICBzcHJpdGUuZ3kgKyAoc3ByaXRlLmhlaWdodCAqIHNwcml0ZS5waXZvdFkpXHJcbiAgICAgICk7XHJcbiAgICAgIGN0eC5yb3RhdGUoc3ByaXRlLnJvdGF0aW9uKTtcclxuICAgICAgY3R4LnNjYWxlKHNwcml0ZS5zY2FsZVgsIHNwcml0ZS5zY2FsZVkpO1xyXG5cclxuICAgICAgc3ByaXRlLnJlbmRlcihjdHgpO1xyXG4gICAgICBsZXQgaGl0ID0gdGVzdEhpdChjdHgpO1xyXG4gICAgICBjdHguc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKTtcclxuICAgICAgY3R4LmNsZWFyUmVjdCgwLDAsMSwxKTtcclxuICAgICAgLy8gY3R4LmNsZWFyUmVjdCgwLDAsNTEyLDI1Nik7XHJcblxyXG4gICAgICAvLyBjdHgucmVzdG9yZSgpO1xyXG4gICAgICBpZihoaXQpIGNvbnNvbGUubG9nKCdwaXhlbCBoaXQnKTtcclxuICAgICAgcmV0dXJuIGhpdDtcclxuICAgIH0sXHJcblxyXG4gICAgLy8gRklYTUU6IOWkmuWxguWPmOaNouayoeWkhOeQhuWlve+8jOWPr+iDvemcgOimgXNwcml0ZeS/neaMgeS4gOS4quWPmOaNouefqemYtSjlhajlsYAp5omN6IO96L6+5YiwKCDlj4LogIPvvJrmuLjmiI/nvJbnqIvmqKHlvI8gKVxyXG4gICAgaGl0VGVzdFNwcml0ZVNjYWxlZChzcHJpdGUpIHtcclxuICAgICAgbGV0IGhpdCA9IGZhbHNlO1xyXG4gICAgICBpZighc3ByaXRlLmNpcmN1bGFyKSB7XHJcbiAgICAgICAgbGV0IGNlbnRlciA9IHNwcml0ZS5nQ2VudGVyO1xyXG4gICAgICAgIGxldCBoYWxmV2lkaHQgPSAoc3ByaXRlLndpZHRoID4+IDEpICogc3ByaXRlLnNjYWxlWDtcclxuICAgICAgICBsZXQgaGFsZkhlaWdodCA9IChzcHJpdGUuaGVpZ2h0ID4+IDEpICogc3ByaXRlLnNjYWxlWTtcclxuICAgICAgICBsZXQgbGVmdCA9ICBjZW50ZXIueCAtIGhhbGZXaWRodCxcclxuICAgICAgICAgICAgcmlnaHQgPSBjZW50ZXIueCArIGhhbGZXaWRodCxcclxuICAgICAgICAgICAgdG9wID0gY2VudGVyLnkgLSBoYWxmSGVpZ2h0LFxyXG4gICAgICAgICAgICBib3R0b20gPSBjZW50ZXIueSArIGhhbGZIZWlnaHQ7XHJcblxyXG4gICAgICAgIGhpdCA9IHRoaXMueCA+IGxlZnQgJiYgdGhpcy54IDwgcmlnaHRcclxuICAgICAgICAgICYmIHRoaXMueSA+IHRvcCAmJiB0aGlzLnkgPCBib3R0b207XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gRklYTUU6IOi/mOayoeacieWkhOeQhuWchuW9olxyXG4gICAgICAgIGxldCB2eCA9IHRoaXMueCAtIChzcHJpdGUuZ3ggKyBzcHJpdGUucmFkaXVzKSxcclxuICAgICAgICB2eSA9IHRoaXMueSAtIChzcHJpdGUuZ3kgKyBzcHJpdGUucmFkaXVzKSxcclxuICAgICAgICBkaXN0YW5jZSA9IE1hdGguc3FydCh2eCAqIHZ4ICsgdnkgKiB2eSk7XHJcbiAgICAgICAgaGl0ID0gZGlzdGFuY2UgPCBzcHJpdGUucmFkaXVzO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIGlmKGhpdCkgY29uc29sZS5sb2coJ3NjYWxlZCBoaXQnKTtcclxuICAgICAgcmV0dXJuIGhpdDtcclxuICAgIH0sXHJcblxyXG4gICAgaGl0VGVzdFNwcml0ZU5vcm1hbChzcHJpdGUpIHtcclxuICAgICAgbGV0IGhpdCA9IGZhbHNlO1xyXG4gICAgICBpZighc3ByaXRlLmNpcmN1bGFyKSB7XHJcbiAgICAgICAgbGV0IGxlZnQgPSAgc3ByaXRlLmd4LFxyXG4gICAgICAgICAgICByaWdodCA9IHNwcml0ZS5neCArIHNwcml0ZS53aWR0aCxcclxuICAgICAgICAgICAgdG9wID0gc3ByaXRlLmd5LFxyXG4gICAgICAgICAgICBib3R0b20gPSBzcHJpdGUuZ3kgKyBzcHJpdGUuaGVpZ2h0O1xyXG5cclxuICAgICAgICBoaXQgPSB0aGlzLnggPiBsZWZ0ICYmIHRoaXMueCA8IHJpZ2h0XHJcbiAgICAgICAgICAmJiB0aGlzLnkgPiB0b3AgJiYgdGhpcy55IDwgYm90dG9tO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGxldCB2eCA9IHRoaXMueCAtIChzcHJpdGUuZ3ggKyBzcHJpdGUucmFkaXVzKSxcclxuICAgICAgICAgICAgdnkgPSB0aGlzLnkgLSAoc3ByaXRlLmd5ICsgc3ByaXRlLnJhZGl1cyksXHJcbiAgICAgICAgICAgIGRpc3RhbmNlID0gTWF0aC5zcXJ0KHZ4ICogdnggKyB2eSAqIHZ5KTtcclxuICAgICAgICBoaXQgPSBkaXN0YW5jZSA8IHNwcml0ZS5yYWRpdXM7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGhpdDtcclxuICAgIH0sXHJcblxyXG4gICAgLy8g5Y+v6IO96ZyA6KaBc3ByaXRl5L+d5oyB5LiA5Liq5Y+Y5o2i55+p6Zi1KOWFqOWxgCks5L2/55SocGl4ZWzmo4DmtYtcclxuICAgIGhpdFRlc3RTcHJpdGUoc3ByaXRlKSB7XHJcbiAgICAgIGlmKHNwcml0ZS5yb3RhdGlvbiAhPSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaGl0VGVzdFNwcml0ZVBpeGVsKHNwcml0ZSk7XHJcbiAgICAgIH0gZWxzZSBpZihzcHJpdGUuc2NhbGVYICE9IDEgfHwgc3ByaXRlLnNjYWxlWSAhPSAxKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5oaXRUZXN0U3ByaXRlU2NhbGVkKHNwcml0ZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaGl0VGVzdFNwcml0ZU5vcm1hbChzcHJpdGUpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZURyYWdBbmREcm9wKGRyYWdnYWJsZVNwcml0ZXMpIHtcclxuICAgICAgaWYodGhpcy5pc0Rvd24pIHtcclxuICAgICAgICBpZih0aGlzLmRyYWdTcHJpdGUgPT09IG51bGwpIHtcclxuICAgICAgICAgIGZvcihsZXQgaSA9IGRyYWdnYWJsZVNwcml0ZXMubGVuZ3RoIC0xOyBpID4gLTE7IC0taSkge1xyXG4gICAgICAgICAgICBsZXQgc3ByaXRlID0gZHJhZ2dhYmxlU3ByaXRlc1tpXTtcclxuICAgICAgICAgICAgaWYoc3ByaXRlLmRyYWdnYWJsZSAmJiB0aGlzLmhpdFRlc3RTcHJpdGUoc3ByaXRlKSl7XHJcbiAgICAgICAgICAgICAgdGhpcy5kcmFnT2Zmc2V0WCA9IHRoaXMueCAtIHNwcml0ZS5neDtcclxuICAgICAgICAgICAgICB0aGlzLmRyYWdPZmZzZXRZID0gdGhpcy55IC0gc3ByaXRlLmd5O1xyXG4gICAgICAgICAgICAgIHRoaXMuZHJhZ1Nwcml0ZSA9IHNwcml0ZTtcclxuICAgICAgICAgICAgICBsZXQgY2hpbGRyZW4gPSBzcHJpdGUucGFyZW50LmNoaWxkcmVuO1xyXG4gICAgICAgICAgICAgIGNoaWxkcmVuLnNwbGljZShjaGlsZHJlbi5pbmRleE9mKHNwcml0ZSksIDEpO1xyXG4gICAgICAgICAgICAgIGNoaWxkcmVuLnB1c2goc3ByaXRlKTtcclxuXHJcbiAgICAgICAgICAgICAgZHJhZ2dhYmxlU3ByaXRlcy5zcGxpY2UoZHJhZ2dhYmxlU3ByaXRlcy5pbmRleE9mKHNwcml0ZSksMSk7XHJcbiAgICAgICAgICAgICAgZHJhZ2dhYmxlU3ByaXRlcy5wdXNoKHNwcml0ZSk7XHJcblxyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuZHJhZ1Nwcml0ZS54ID0gdGhpcy54IC0gdGhpcy5kcmFnT2Zmc2V0WDtcclxuICAgICAgICAgIHRoaXMuZHJhZ1Nwcml0ZS55ID0gdGhpcy55IC0gdGhpcy5kcmFnT2Zmc2V0WTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmKHRoaXMuaXNVcClcclxuICAgICAgICB0aGlzLmRyYWdTcHJpdGUgPSBudWxsO1xyXG5cclxuICAgICAgZHJhZ2dhYmxlU3ByaXRlcy5zb21lKHNwcml0ZSA9PntcclxuICAgICAgICBpZihzcHJpdGUuZHJhZ2dhYmxlICYmIHRoaXMuaGl0VGVzdFNwcml0ZShzcHJpdGUpKSB7XHJcbiAgICAgICAgICB0aGlzLmVsZW1lbnQuc3R5bGUuY3Vyc29yID0gJ3BvaW50ZXInO1xyXG4gICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5jdXJzb3IgPSAnYXV0byc7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIF9wb2ludGVyLm1vdmVIYW5kbGVyLmJpbmQoX3BvaW50ZXIpLCBmYWxzZSk7XHJcbiAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIF9wb2ludGVyLmRvd25IYW5kbGVyLmJpbmQoX3BvaW50ZXIpLCBmYWxzZSk7XHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIF9wb2ludGVyLnVwSGFuZGxlci5iaW5kKF9wb2ludGVyKSwgZmFsc2UpO1xyXG5cclxuICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgX3BvaW50ZXIudG91Y2htb3ZlSGFuZGxlci5iaW5kKF9wb2ludGVyKSwgZmFsc2UpO1xyXG4gIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIiwgX3BvaW50ZXIudG91Y2hzdGFydEhhbmRsZXIuYmluZChfcG9pbnRlciksIGZhbHNlKTtcclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIF9wb2ludGVyLnRvdWNoZW5kSGFuZGxlci5iaW5kKF9wb2ludGVyKSwgZmFsc2UpO1xyXG5cclxuICAvLyBEaXNhYmxlIHRoZSBkZWZhdWx0IGFjdGlvbnMgb24gdGhlICdjYW52YXMnXHJcbiAgZWxlbWVudC5zdHlsZS50b3VjaEFjdGlvbiA9IFwibm9uZVwiO1xyXG5cclxuICBwb2ludGVyID0gX3BvaW50ZXI7XHJcbiAgcmV0dXJuIF9wb2ludGVyO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24ga2V5Ym9hcmQoa2V5Q29kZSkge1xyXG4gIGxldCBrZXkgPSB7fTtcclxuICBrZXkuY29kZSA9IGtleUNvZGU7XHJcbiAga2V5LmlzRG93biA9IGZhbHNlO1xyXG4gIGtleS5pc1VwID0gdHJ1ZTtcclxuICBrZXkucHJlc3MgPSB1bmRlZmluZWQ7XHJcbiAga2V5LnJlbGVhc2UgPSB1bmRlZmluZWQ7XHJcblxyXG4gIGtleS5kb3duSGFuZGxlciA9IGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICBpZihldmVudC5rZXlDb2RlID09PSBrZXkuY29kZSl7XHJcbiAgICAgIGlmKGtleS5pc1VwICYmIGtleS5wcmVzcykga2V5LnByZXNzKCk7XHJcbiAgICAgIGtleS5pc0Rvd24gPSB0cnVlO1xyXG4gICAgICBrZXkuaXNVcCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICB9O1xyXG5cclxuICBrZXkudXBIYW5kbGVyID0gZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgIGlmKGV2ZW50LmtleUNvZGUgPT09IGtleS5jb2RlKXtcclxuICAgICAgaWYoa2V5LmlzRG93biAmJiBrZXkucmVsZWFzZSkga2V5LnJlbGVhc2UoKTtcclxuICAgICAga2V5LmlzRG93biA9IGZhbHNlO1xyXG4gICAgICBrZXkuaXNVcCA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH07XHJcblxyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywga2V5LmRvd25IYW5kbGVyLmJpbmQoa2V5KSwgZmFsc2UpO1xyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGtleS51cEhhbmRsZXIuYmluZChrZXkpLCBmYWxzZSk7XHJcblxyXG4gIHJldHVybiBrZXk7XHJcbn1cclxuIiwiaW1wb3J0IERpc3BsYXlPYmplY3QgZnJvbSAnLi9EaXNwbGF5T2JqZWN0LmpzJztcclxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4vQnV0dG9uLmpzJztcclxuaW1wb3J0IHtyZW5kZXJlcn0gZnJvbSAnLi9SZW5kZXJlci5qcyc7XHJcbmltcG9ydCB7cG9pbnRlcn0gZnJvbSAnLi9pbnB1dC5qcyc7XHJcblxyXG5leHBvcnQgbGV0IGRyYWdnYWJsZVNwcml0ZXMgPSBbXTtcclxuZXhwb3J0IGxldCBidXR0b25zID0gW107XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlRHJhZ0FuZERyb3AoKSB7XHJcbiAgbGV0IGNhbnZhcyA9IHJlbmRlcmVyLmNhbnZhcztcclxuICBsZXQgZHJhZ1Nwcml0ZSA9IG51bGwsXHJcbiAgICBkcmFnT2Zmc2V0WCA9IDAsXHJcbiAgICBkcmFnT2Zmc2V0WSA9IDA7XHJcblxyXG4gIGlmIChwb2ludGVyLmlzRG93bikge1xyXG4gICAgaWYgKGRyYWdTcHJpdGUgPT09IG51bGwpIHtcclxuICAgICAgZm9yICh2YXIgaSA9IGRyYWdnYWJsZVNwcml0ZXMubGVuZ3RoIC0gMTsgaSA+IC0xOyBpLS0pIHtcclxuICAgICAgICBsZXQgc3ByaXRlID0gZHJhZ2dhYmxlU3ByaXRlc1tpXTtcclxuICAgICAgICBpZiAocG9pbnRlci5oaXRUZXN0U3ByaXRlKHNwcml0ZSkgJiYgc3ByaXRlLmRyYWdnYWJsZSkge1xyXG4gICAgICAgICAgZHJhZ09mZnNldFggPSBwb2ludGVyLnggLSBzcHJpdGUuZ3g7XHJcbiAgICAgICAgICBkcmFnT2Zmc2V0WSA9IHBvaW50ZXIueSAtIHNwcml0ZS5neTtcclxuICAgICAgICAgIGRyYWdTcHJpdGUgPSBzcHJpdGU7XHJcbiAgICAgICAgICBsZXQgY2hpbGRyZW4gPSBzcHJpdGUucGFyZW50LmNoaWxkcmVuO1xyXG4gICAgICAgICAgY2hpbGRyZW4uc3BsaWNlKGNoaWxkcmVuLmluZGV4T2Yoc3ByaXRlKSwgMSk7XHJcbiAgICAgICAgICBjaGlsZHJlbi5wdXNoKHNwcml0ZSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRyYWdTcHJpdGUueCA9IHBvaW50ZXIueCAtIGRyYWdPZmZzZXRYO1xyXG4gICAgICBkcmFnU3ByaXRlLnkgPSBwb2ludGVyLnkgLSBkcmFnT2Zmc2V0WTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmIChwb2ludGVyLmlzVXApIHtcclxuICAgIGRyYWdTcHJpdGUgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgZHJhZ2dhYmxlU3ByaXRlcy5zb21lKHNwcml0ZSA9PiB7XHJcbiAgICBpZiAocG9pbnRlci5oaXRUZXN0U3ByaXRlKHNwcml0ZSkgJiYgc3ByaXRlLmRyYWdnYWJsZSkge1xyXG4gICAgICBjYW52YXMuc3R5bGUuY3Vyc29yID0gXCJwb2ludGVyXCI7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY2FudmFzLnN0eWxlLmN1cnNvciA9IFwiYXV0b1wiO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1ha2VJbnRlcmFjdGl2ZShvKSB7XHJcbiAgby5wcmVzcyA9IG8ucHJlc3MgfHwgdW5kZWZpbmVkO1xyXG4gIG8ucmVsZWFzZSA9IG8ucmVsZWFzZSB8fCB1bmRlZmluZWQ7XHJcbiAgby5vdmVyID0gby5vdmVyIHx8IHVuZGVmaW5lZDtcclxuICBvLm91dCA9IG8ub3V0IHx8IHVuZGVmaW5lZDtcclxuICBvLnRhcCA9IG8udGFwIHx8IHVuZGVmaW5lZDtcclxuXHJcbiAgby5zdGF0ZSA9IFwidXBcIjtcclxuICBvLmFjdGlvbiA9IFwiXCI7XHJcbiAgby5wcmVzc2VkID0gZmFsc2U7XHJcbiAgby5ob3Zlck92ZXIgPSBmYWxzZTtcclxuXHJcbiAgICAvLyAg5L+d5oyB5Y6f5aeLIHVwZGF0ZSDliLAgcHJlVXBkYXRlXHJcbiAgaWYoby51cGRhdGUpXHJcbiAgICBvLnByZVVwZGF0ZSA9IG8udXBkYXRlO1xyXG5cclxuICBvLnVwZGF0ZSA9IChkdCkgPT4ge1xyXG4gICAgLy8g6LCD55So5Y6f5aeLdXBkYXRlXHJcbiAgICBpZihvLnByZVVwZGF0ZSlcclxuICAgICAgby5wcmVVcGRhdGUoZHQpO1xyXG4gICAgXHJcbiAgICBsZXQgY2FudmFzID0gcmVuZGVyZXIuY2FudmFzO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ2ludGVyYWN0aXZlIHVwZGF0ZScpO1xyXG4gICAgaWYgKG8udmlzaWJsZSA9PSBmYWxzZSkgcmV0dXJuO1xyXG4gICAgbGV0IGhpdCA9IHBvaW50ZXIuaGl0VGVzdFNwcml0ZShvKTtcclxuXHJcbiAgICBpZiAocG9pbnRlci5pc1VwKSB7XHJcbiAgICAgIG8uc3RhdGUgPSBcInVwXCI7XHJcbiAgICAgIGlmIChvIGluc3RhbmNlb2YgQnV0dG9uKSBvLmdvdG9BbmRTdG9wKDApO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChoaXQpIHtcclxuICAgICAgby5zdGF0ZSA9IFwib3ZlclwiO1xyXG4gICAgICBpZiAoby5mcmFtZXMgJiYgby5mcmFtZXMubGVuZ3RoID09PSAzICYmIG8gaW5zdGFuY2VvZiBCdXR0b24pIHtcclxuICAgICAgICBvLmdvdG9BbmRTdG9wKDEpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAocG9pbnRlci5pc0Rvd24pIHtcclxuICAgICAgICBvLnN0YXRlID0gXCJkb3duXCI7XHJcbiAgICAgICAgaWYgKG8gaW5zdGFuY2VvZiBCdXR0b24pIHtcclxuICAgICAgICAgIGlmIChvLmZyYW1lcy5sZW5ndGggPT09IDMpIHtcclxuICAgICAgICAgICAgby5nb3RvQW5kU3RvcCgyKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG8uZ290b0FuZFN0b3AoMSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG8uc3RhdGUgPT09IFwiZG93blwiKSB7XHJcbiAgICAgIGlmICghby5wcmVzc2VkKSB7XHJcbiAgICAgICAgaWYgKG8ucHJlc3MpIG8ucHJlc3MoKTtcclxuICAgICAgICBvLnByZXNzZWQgPSB0cnVlO1xyXG4gICAgICAgIG8uYWN0aW9uID0gXCJwcmVzc2VkXCI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAoby5zdGF0ZSA9PT0gXCJvdmVyXCIpIHtcclxuICAgICAgaWYgKG8ucHJlc3NlZCkge1xyXG4gICAgICAgIGlmIChvLnJlbGVhc2UpIG8ucmVsZWFzZSgpO1xyXG4gICAgICAgIG8ucHJlc3NlZCA9IGZhbHNlO1xyXG4gICAgICAgIG8uYWN0aW9uID0gXCJyZWxlYXNlZFwiO1xyXG4gICAgICAgIGlmIChwb2ludGVyLnRhcHBlZCAmJiBvLnRhcCkgby50YXAoKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKCFvLmhvdmVyT3Zlcikge1xyXG4gICAgICAgIGlmIChvLm92ZXIpIG8ub3ZlcigpO1xyXG4gICAgICAgIG8uaG92ZXJPdmVyID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChvLnN0YXRlID09PSBcInVwXCIpIHtcclxuICAgICAgaWYgKG8ucHJlc3NlZCkge1xyXG4gICAgICAgIGlmIChvLnJlbGVhc2UpIG8ucmVsZWFzZSgpO1xyXG4gICAgICAgIG8ucHJlc3NlZCA9IGZhbHNlO1xyXG4gICAgICAgIG8uYWN0aW9uID0gXCJyZWxlYXNlZFwiO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoby5ob3Zlck92ZXIpIHtcclxuICAgICAgICBpZiAoby5vdXQpIG8ub3V0KCk7XHJcbiAgICAgICAgby5ob3Zlck92ZXIgPSBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIOm8oOagh+aViOaenFxyXG4gICAgaWYgKG8uc3RhdGUgPT09IFwib3ZlclwiIHx8IG8uc3RhdGUgPT09IFwiZG93blwiKSB7XHJcbiAgICAgICAgcmVuZGVyZXIuY2FudmFzLnN0eWxlLmN1cnNvciA9IFwicG9pbnRlclwiO1xyXG4gICAgfVxyXG5cclxuICB9O1xyXG59XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhEaXNwbGF5T2JqZWN0LnByb3RvdHlwZSwge1xyXG4gIGludGVyYWN0aXZlOiB7XHJcbiAgICBnZXQoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9pbnRlcmFjdGl2ZTtcclxuICAgIH0sXHJcbiAgICBzZXQodmFsdWUpIHtcclxuICAgICAgaWYgKHZhbHVlID09PSB0cnVlKSB7XHJcbiAgICAgICAgbWFrZUludGVyYWN0aXZlKHRoaXMpO1xyXG4gICAgICAgIC8vIGJ1dHRvbnMucHVzaCh0aGlzKTtcclxuICAgICAgICB0aGlzLl9pbnRlcmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHZhbHVlID09PSBmYWxzZSkge1xyXG4gICAgICAgIC8vIGJ1dHRvbnMuc3BsaWNlKGJ1dHRvbnMuaW5kZXhPZih0aGlzKSwgMSk7XHJcbiAgICAgICAgdGhpcy5faW50ZXJhY3RpdmUgPSBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWVcclxuICB9LFxyXG4gIGRyYWdnYWJsZToge1xyXG4gICAgZ2V0KCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5fZHJhZ2dhYmxlO1xyXG4gICAgfSxcclxuICAgIHNldCh2YWx1ZSkge1xyXG4gICAgICBpZiAodmFsdWUgPT09IHRydWUpIHtcclxuICAgICAgICBkcmFnZ2FibGVTcHJpdGVzLnB1c2godGhpcyk7XHJcbiAgICAgICAgdGhpcy5fZHJhZ2dhYmxlID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgICBpZiAodmFsdWUgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgZHJhZ2dhYmxlU3ByaXRlcy5zcGxpY2UoZHJhZ2dhYmxlU3ByaXRlcy5pbmRleE9mKHRoaXMpLCAxKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWVcclxuICB9XHJcbn0pO1xyXG4iLCJpbXBvcnQgY29tbWVudCBmcm9tICcuL2NvbW1vbi5qcyc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbWFrZUNhbnZhcyh3aWR0aCxcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZSA9ICcyZCcsXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYm9yZGVyID0gJzFweCBkYXNoZWQgYmxhY2snLFxyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlciA9ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvciA9ICd3aGl0ZScpIHtcclxuXHJcbiAgbGV0IGNhbnZhcyA9ICQkbmV3KCdjYW52YXMnKTtcclxuICBjYW52YXMud2lkdGggPSB3aWR0aDtcclxuICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gIGNhbnZhcy5zdHlsZS5ib3JkZXIgPSBib3JkZXI7XHJcbiAgY2FudmFzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJhY2tncm91bmRDb2xvcjtcclxuICAvLyBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7XHJcblxyXG4gIGNhbnZhcy5jdHggPSBjYW52YXMuZ2V0Q29udGV4dCh0eXBlKTtcclxuXHJcbiAgcmV0dXJuIGNhbnZhcztcclxufVxyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvdXRzaWRlQm91bmRzKHNwcml0ZSwgYm91bmRzLCBleHRyYSA9IHVuZGVmaW5lZCl7XHJcblxyXG4gIGxldCB4ID0gYm91bmRzLngsXHJcbiAgICAgIHkgPSBib3VuZHMueSxcclxuICAgICAgd2lkdGggPSBib3VuZHMud2lkdGgsXHJcbiAgICAgIGhlaWdodCA9IGJvdW5kcy5oZWlnaHQ7XHJcblxyXG4gIGxldCBjb2xsaXNpb247XHJcblxyXG4gIGlmIChzcHJpdGUueCA8IHggLSBzcHJpdGUud2lkdGgpIHtcclxuICAgIGNvbGxpc2lvbiA9IFwibGVmdFwiO1xyXG4gIH1cclxuICAvL1RvcFxyXG4gIGlmIChzcHJpdGUueSA8IHkgLSBzcHJpdGUuaGVpZ2h0KSB7XHJcbiAgICBjb2xsaXNpb24gPSBcInRvcFwiO1xyXG4gIH1cclxuICAvL1JpZ2h0XHJcbiAgaWYgKHNwcml0ZS54ID4gd2lkdGgpIHtcclxuICAgIGNvbGxpc2lvbiA9IFwicmlnaHRcIjtcclxuICB9XHJcbiAgLy9Cb3R0b21cclxuICBpZiAoc3ByaXRlLnkgPiBoZWlnaHQpIHtcclxuICAgIGNvbGxpc2lvbiA9IFwiYm90dG9tXCI7XHJcbiAgfVxyXG5cclxuICBpZiAoY29sbGlzaW9uICYmIGV4dHJhKSBleHRyYShjb2xsaXNpb24pO1xyXG5cclxuICByZXR1cm4gY29sbGlzaW9uO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY29udGFpbihzcHJpdGUsIGJvdW5kcywgYm91bmNlID0gZmFsc2UsIGV4dHJhID0gdW5kZWZpbmVkKSB7XHJcbiAgbGV0IHggPSBib3VuZHMueCxcclxuICAgIHkgPSBib3VuZHMueSxcclxuICAgIHdpZHRoID0gYm91bmRzLndpZHRoLFxyXG4gICAgaGVpZ2h0ID0gYm91bmRzLmhlaWdodDtcclxuXHJcbiAgbGV0IGNvbGxpc2lvbjtcclxuXHJcbiAgLy9MZWZ0XHJcbiAgaWYgKHNwcml0ZS54IDwgeCkge1xyXG4gICAgaWYgKGJvdW5jZSkgc3ByaXRlLnZ4ICo9IC0xO1xyXG4gICAgaWYgKHNwcml0ZS5tYXNzKSBzcHJpdGUudnggLz0gc3ByaXRlLm1hc3M7XHJcbiAgICBzcHJpdGUueCA9IHg7XHJcbiAgICBjb2xsaXNpb24gPSBcImxlZnRcIjtcclxuICB9XHJcbiAgLy9Ub3BcclxuICBpZiAoc3ByaXRlLnkgPCB5KSB7XHJcbiAgICBpZiAoYm91bmNlKSBzcHJpdGUudnkgKj0gLTE7XHJcbiAgICBpZiAoc3ByaXRlLm1hc3MpIHNwcml0ZS52eSAvPSBzcHJpdGUubWFzcztcclxuICAgIHNwcml0ZS55ID0geTtcclxuICAgIGNvbGxpc2lvbiA9IFwidG9wXCI7XHJcbiAgfVxyXG4gIC8vUmlnaHRcclxuICBpZiAoc3ByaXRlLnggKyBzcHJpdGUud2lkdGggPiB3aWR0aCkge1xyXG4gICAgaWYgKGJvdW5jZSkgc3ByaXRlLnZ4ICo9IC0xO1xyXG4gICAgaWYgKHNwcml0ZS5tYXNzKSBzcHJpdGUudnggLz0gc3ByaXRlLm1hc3M7XHJcbiAgICBzcHJpdGUueCA9IHdpZHRoIC0gc3ByaXRlLndpZHRoO1xyXG4gICAgY29sbGlzaW9uID0gXCJyaWdodFwiO1xyXG4gIH1cclxuICAvL0JvdHRvbVxyXG4gIGlmIChzcHJpdGUueSArIHNwcml0ZS5oZWlnaHQgPiBoZWlnaHQpIHtcclxuICAgIGlmIChib3VuY2UpIHNwcml0ZS52eSAqPSAtMTtcclxuICAgIGlmIChzcHJpdGUubWFzcykgc3ByaXRlLnZ5IC89IHNwcml0ZS5tYXNzO1xyXG4gICAgc3ByaXRlLnkgPSBoZWlnaHQgLSBzcHJpdGUuaGVpZ2h0O1xyXG4gICAgY29sbGlzaW9uID0gXCJib3R0b21cIjtcclxuICB9XHJcblxyXG4gIGlmIChjb2xsaXNpb24gJiYgZXh0cmEpIGV4dHJhKGNvbGxpc2lvbik7XHJcblxyXG4gIHJldHVybiBjb2xsaXNpb247XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBkaXN0YW5jZShzMSwgczIpIHtcclxuICBsZXQgdnggPSBzMi5jZW50ZXJYIC0gczEuY2VudGVyWDtcclxuICBsZXQgdnkgPSBzMi5jZW50ZXJZIC0gczEuY2VudGVyWTtcclxuICByZXR1cm4gTWF0aC5zcXJ0KHZ4ICogdnggKyB2eSAqIHZ5KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZvbGxvd0Vhc2UoZm9sbG93ZXIsIGxlYWRlciwgc3BlZWQpIHtcclxuICBsZXQgdnggPSBsZWFkZXIuY2VudGVyWCAtIGZvbGxvd2VyLmNlbnRlclg7XHJcbiAgbGV0IHZ5ID0gbGVhZGVyLmNlbnRlclkgLSBmb2xsb3dlci5jZW50ZXJZO1xyXG4gIGxldCBkaXN0YW5jZSA9IE1hdGguc3FydCh2eCAqIHZ4ICsgdnkgKiB2eSk7XHJcblxyXG4gIGlmIChkaXN0YW5jZSA+PSAxKSB7XHJcbiAgICBmb2xsb3dlci54ICs9IHZ4ICogc3BlZWQ7XHJcbiAgICBmb2xsb3dlci55ICs9IHZ5ICogc3BlZWQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZm9sbG93Q29uc3RhbnQoZm9sbG93ZXIsIGxlYWRlciwgc3BlZWQpIHtcclxuICBsZXQgdnggPSBsZWFkZXIuY2VudGVyWCAtIGZvbGxvd2VyLmNlbnRlclg7XHJcbiAgbGV0IHZ5ID0gbGVhZGVyLmNlbnRlclkgLSBmb2xsb3dlci5jZW50ZXJZO1xyXG4gIGxldCBkaXN0YW5jZSA9IE1hdGguc3FydCh2eCAqIHZ4ICsgdnkgKiB2eSk7XHJcblxyXG4gIGlmIChkaXN0YW5jZSA+PSBzcGVlZCkge1xyXG4gICAgZm9sbG93ZXIueCArPSAodnggLyBkaXN0YW5jZSkgKiBzcGVlZDtcclxuICAgIGZvbGxvd2VyLnkgKz0gKHZ5IC8gZGlzdGFuY2UpICogc3BlZWQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYW5nbGUoczEsIHMyKSB7XHJcbiAgcmV0dXJuIE1hdGguYXRhbjIoXHJcbiAgICBzMi5jZW50ZXJZIC0gczEuY2VudGVyWSxcclxuICAgIHMyLmNlbnRlclggLSBzMS5jZW50ZXJYXHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJvdGF0ZVNwcml0ZShyb3RhdGluZ1Nwcml0ZSwgY2VudGVyU3ByaXRlLCBkaXN0YW5jZSwgYW5nbGUpIHtcclxuICByb3RhdGluZ1Nwcml0ZS54ID0gY2VudGVyU3ByaXRlLmNlbnRlclggLSByb3RhdGluZ1Nwcml0ZS5wYXJlbnQueCArXHJcbiAgICAoZGlzdGFuY2UgKiBNYXRoLmNvcyhhbmdsZSkpIC1cclxuICAgIHJvdGF0aW5nU3ByaXRlLmhhbGZXaWR0aDtcclxuXHJcbiAgcm90YXRpbmdTcHJpdGUueSA9IGNlbnRlclNwcml0ZS5jZW50ZXJZIC0gcm90YXRpbmdTcHJpdGUucGFyZW50LnkgK1xyXG4gICAgKGRpc3RhbmNlICogTWF0aC5zaW4oYW5nbGUpKSAtXHJcbiAgICByb3RhdGluZ1Nwcml0ZS5oYWxmSGVpZ2h0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcm90YXRlUG9pbnQocG9pbnRYLCBwb2ludFksIGRpc3RhbmNlWCwgZGlzdGFuY2VZLCBhbmdsZSkge1xyXG4gIGxldCBwb2ludCA9IHt9O1xyXG4gIHBvaW50LnggPSBwb2ludFggKyBNYXRoLmNvcyhhbmdsZSkgKiBkaXN0YW5jZVg7XHJcbiAgcG9pbnQueSA9IHBvaW50WSArIE1hdGguc2luKGFuZ2xlKSAqIGRpc3RhbmNlWTtcclxuICByZXR1cm4gcG9pbnQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByYW5kb21JbnQobWluLCBtYXgpIHtcclxuICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJhbmRvbUZsb2F0KG1pbiwgbWF4KSB7XHJcbiAgcmV0dXJuIChNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikpICsgbWluO1xyXG59XHJcbiIsIi8vIGltcG9ydCBtYWluIGZyb20gJy4vdGVzdC9ndWFfYnV5LmpzJztcclxuLy8gaW1wb3J0IG1haW4gZnJvbSAnLi90ZXN0L2d1YV9saXN0LmpzJztcclxuaW1wb3J0IG1haW4gZnJvbSAnLi9zcmMvTG90dGVyeV9BbmltYXRlLmpzJztcclxuXHJcbm1haW4oKTtcclxuIiwiaW1wb3J0IFRpbmEgZnJvbSAnLi4vbGlicy90aW5hL1RpbmEuanMnO1xyXG5pbXBvcnQgRGlzcGxheU9iamVjdCBmcm9tICcuLi9saWJzL3RpbmEvRGlzcGxheU9iamVjdC5qcyc7XHJcbmltcG9ydCB7VGV4dH0gZnJvbSAnLi4vbGlicy90aW5hL1RleHQuanMnO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtYWluKCkge1xyXG5cclxufVxyXG5sZXQgbG90TnVtID0gd2luZG93LmxvdE51bSB8fCBbXTtcclxubGV0IHNwZWVkcyA9IFsxNSwxMywxNCwxMywxNV07IC8v5q+P5Liq55CD55qE6YCf5bqmXHJcbmxldCBjaXJjbGUgPSAyOy8v6KaB6L2s5aSa5bCR5ZyIXHJcblxyXG5sZXQgcWl1TnVtID0gNTsvLyDnkIPnmoTmlbDph49cclxubGV0IHFpdW1lbiA9IFtdO1xyXG5cclxubGV0IGNvdW50ID0gMTI7IC8v5pyJ5Yeg5Liq5pWw5a2XXHJcbmxldCBudW0gPSBbXTsgLy/mjpLliJfmlbDnu4RcclxuLy9sZXQgbnVtWCA9IDM1Oy8v5pWw5a2X55qE6Ze06LedXHJcbmxldCBudW1IID0gOTA7Ly/mjpLliJfmlbDlrZfnmoTpl7Tot51cclxubGV0IHRvdGFsSCA9IG51bUggKiBjb3VudDsvL+aOkuWIl+aVsOWtl+eahCDmgLvplb/luqZcclxuXHJcbmxldCBhc3NldHNlb3Q7XHJcbmlmKG5hdmlnYXRvci51c2VyQWdlbnQuc3BsaXQoXCI7XCIpWzFdLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihcIm1zaWUgMTAuMFwiKT09XCItMVwiP2ZhbHNlOnRydWUpe1xyXG4gIGFzc2V0c2VvdCA9ICdhc3NldHMvaW1wYWN0LnR0ZidcclxufVxyXG5lbHNle1xyXG4gIGFzc2V0c2VvdCA9ICdhc3NldHMvaW1wYWN0LnR0ZidcclxufVxyXG5cclxubGV0IHQgPSBuZXcgVGluYSg1ODAsOTYsZ2FtZSxbYXNzZXRzZW90LCdhc3NldHMvcWl1LnBuZycsJ2Fzc2V0cy9iYWkucG5nJ10pO1xyXG5cclxuY2xhc3MgUWl1cWl1IGV4dGVuZHMgRGlzcGxheU9iamVjdHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLnNwZWVkID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5sb29wTnVtID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5zaG93TnVtID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5udW1iZXJzID0gW107XHJcblxyXG4gICAgLy/lrprkuYnog4zmma9cclxuICAgIHRoaXMuYmcgPSBuZXcgdC5TcHJpdGUodC5hc3NldHNbJ2Fzc2V0cy9xaXUucG5nJ10pO1xyXG4gICAgdGhpcy5iYWkgPSBuZXcgdC5TcHJpdGUodC5hc3NldHNbJ2Fzc2V0cy9iYWkucG5nJ10pO1xyXG4gICAgdGhpcy5iYWkueCA9IDE2O1xyXG4gICAgdGhpcy5iYWkueSA9IC01NTtcclxuICAgIHRoaXMuYmFpMiA9IG5ldyB0LlNwcml0ZSh0LmFzc2V0c1snYXNzZXRzL2JhaS5wbmcnXSk7XHJcbiAgICB0aGlzLmJhaTIueCA9IDE2O1xyXG4gICAgdGhpcy5iYWkyLnkgPSA3MDtcclxuXHJcbiAgICAvL+WumuS5ieaVsOWtl+WbvueJh1xyXG4gICAgZm9yKGxldCBpPTA7aTxjb3VudDtpKyspe1xyXG4gICAgICBsZXQgbnVtO1xyXG4gICAgICBpZiggaSA8PSA5ICl7XHJcbiAgICAgICAgbnVtID0gIG5ldyBUZXh0KCcwJyArIGksJzM1cHggaW1wYWN0JywnYmxhY2snKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNle1xyXG4gICAgICAgIG51bSA9ICBuZXcgVGV4dChpLCczNXB4IGltcGFjdCcsJ2JsYWNrJyk7XHJcbiAgICAgIH1cclxuICAgICAgbnVtLndpZHRoID0gMzY7XHJcbiAgICAgIHRoaXMubnVtYmVyc1tpXSA9IG51bTtcclxuICAgICAgdGhpcy5hZGRDaGlsZChudW0pO1xyXG4gICAgfVxyXG4gICAgdGhpcy5hZGQodGhpcy5iYWksdGhpcy5iYWkyKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQodGhpcy5iZyk7XHJcbiAgICB0aGlzLmluaXQoKTtcclxuICB9XHJcblxyXG4gIC8vIOaVsOWtl+aOkueJiFxyXG4gIGluaXQoKXtcclxuICAgIGZvcihsZXQgaSA9MDsgaTxjb3VudDsrK2kpe1xyXG4gICAgICB0aGlzLmJnLnB1dENlbnRlcih0aGlzLm51bWJlcnNbaV0pO1xyXG4gICAgICB0aGlzLm51bWJlcnNbaV0ueSA9IG51bUggKiBpO1xyXG4gICAgICBpZih0aGlzLm51bWJlcnNbaV0uY29udGVudCA9PSAxMSl7XHJcbiAgICAgICAgdGhpcy5udW1iZXJzW2ldLnggPSAzNDtcclxuICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICAvLyDpgJ/luqblrprkuYlcclxuICBwbGF5KHNwZWVkLGxvb3BOdW0sc2hvd051bSl7XHJcbiAgICB0aGlzLnNwZWVkID0gc3BlZWQ7XHJcbiAgICB0aGlzLmxvb3BOdW0gPSBsb29wTnVtO1xyXG4gICAgdGhpcy5zaG93TnVtID0gc2hvd051bTtcclxuICB9XHJcblxyXG4gIC8v54m55pWIXHJcbiAgdXBkYXRlKCl7XHJcbiAgICAvL+W9k+mAn+W6piBzcGVlZCDnrYnkuo7pm7bnmoTml7blgJkg5oqKIOimgeWBnOeahOWtl+avjeaOkuS9jeWIsOacgOS4iumdolxyXG4gICAgLy/lubbkuJTorqnku5bml4vovazlh6DlnIhcclxuICAgIGlmKHRoaXMuc3BlZWQgPiAwKXtcclxuICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspe1xyXG4gICAgICAgIHRoaXMubnVtYmVyc1tpXS55ICs9IHRoaXMuc3BlZWQ7XHJcbiAgICAgICAgdmFyIGJvdHRvbVkgPSA1MjtcclxuICAgICAgICBpZih0aGlzLm51bWJlcnNbaV0ueSA+PSBib3R0b21ZKXtcclxuICAgICAgICAgIHRoaXMubnVtYmVyc1tpXS55ID0gdGhpcy5udW1iZXJzW2ldLnkgLSB0b3RhbEg7XHJcbiAgICAgICAgICBpZihpID09PSB0aGlzLnNob3dOdW0pXHJcbiAgICAgICAgICAgIHRoaXMubG9vcE51bS0tO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAvL+W9k+aXi+i9rOWujOe7k+S7peWQju+8jOimgeWBnOeahOaVsOWtl+WcqOS7peaXi+i9rOeahOaWueW8j+WBnOS4i+adpeOAglxyXG4gICAgICBpZih0aGlzLmxvb3BOdW0gPT09IDApe1xyXG4gICAgICAgIGxldCB0bXA7XHJcbiAgICAgICAgaWYobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKFwiQ2hyb21lXCIpIT0tMSl7XHJcbiAgICAgICAgICB0bXAgPSAoMjEgLSAgdGhpcy5udW1iZXJzW3RoaXMuc2hvd051bV0ueSk7XHJcbiAgICAgICAgfWVsc2UgaWYobmF2aWdhdG9yLnVzZXJBZ2VudC5zcGxpdChcIjtcIilbMV0udG9Mb3dlckNhc2UoKS5pbmRleE9mKFwibXNpZSAxMC4wXCIpPT1cIi0xXCI/ZmFsc2U6dHJ1ZSkge1xyXG4gICAgICAgICAgdG1wID0gKDIyIC0gIHRoaXMubnVtYmVyc1t0aGlzLnNob3dOdW1dLnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgdG1wID0gKDI2IC0gIHRoaXMubnVtYmVyc1t0aGlzLnNob3dOdW1dLnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0bXAgPCB0aGlzLnNwZWVkKXtcclxuICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMubnVtYmVyc1tpXS55ICs9IHRtcDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHRoaXMuc3BlZWQgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG59XHJcblxyXG4vL3dpbmRvdy5rYWlzaSA9IGZ1bmN0aW9uKGxvdE51bSl7XHJcbi8vICBpZihsb3ROdW0gPT0gdW5kZWZpbmVkKXtcclxuLy8gICAgdGhpcy5udW0gPSAxO1xyXG4vLyAgfVxyXG4vLyAgZWxzZXtcclxuLy8gICAgdGhpcy5udW0gPSBsb3ROdW07XHJcbi8vICB9XHJcbi8vICBmb3IobGV0IGkgPSAwOyBpPCBxaXVOdW07KytpKSB7XHJcbi8vICAgIHFpdW1lbltpXS5wbGF5KHNwZWVkc1tpXSxjaXJjbGUsdGhpcy5udW1baV0pO1xyXG4vLyAgICBjb25zb2xlLmxvZyh0aGlzLm51bVtpXSk7XHJcbi8vICB9XHJcbi8vfVxyXG5cclxuZnVuY3Rpb24gZ28obG90TnVtKXtcclxuICBpZihsb3ROdW0gPT0gdW5kZWZpbmVkKXtcclxuICAgIHRoaXMubnVtID0gMTtcclxuICB9XHJcbiAgZWxzZXtcclxuICAgIHRoaXMubnVtID0gbG90TnVtO1xyXG4gIH1cclxuICBmb3IobGV0IGkgPSAwOyBpPCBxaXVOdW07KytpKSB7XHJcbiAgICBxaXVtZW5baV0ucGxheShzcGVlZHNbaV0sY2lyY2xlLHRoaXMubnVtW2ldKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdhbWUoKSB7XHJcbiAgLy/lvqrnjq/mt7vliqDnkINcclxuICBmb3IobGV0IGkgPSAwOyBpPCBxaXVOdW07KytpKSB7XHJcbiAgICBxaXVtZW5baV0gPSBuZXcgUWl1cWl1KCk7XHJcbiAgICB0LnN0YWdlLmFkZENoaWxkKHFpdW1lbltpXSk7XHJcbiAgICBxaXVtZW5baV0ueCA9IGkgKiAxMjA7XHJcbiAgfTtcclxuICAvL+imgeW+queOr+eahOeJueaViFxyXG4gIC8vd2luZG93LmthaXNpKCk7XHJcbiAgd2luZG93LmthaXNpID0gZ287XHJcbn1cclxuXHJcbnQuc3RhcnQoKTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl19"}